/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Expert(TM) in wire load mode
// Version   : R-2020.09-SP1
// Date      : Fri Dec  6 11:13:54 2024
/////////////////////////////////////////////////////////////


module token_bucket_SIGMA3_RATE20_0 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, n10, n11, n12, n14, n15, n16, n17, n18, n19,
         \add_31/carry[4] , \add_31/carry[3] , \add_31/carry[2] , n1, n2, n3,
         n4, n5;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n16), .Z(n15) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n17), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n17), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n17), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n17), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n17), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  DFQD1 \number_tokens_reg[1]  ( .D(n19), .CP(clk), .Q(number_tokens[1]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n12), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n17) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n16), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n14), .B2(n15), .ZN(n12) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n17), .C(
        consume), .ZN(n14) );
  OAI22D1 U9 ( .A1(n10), .A2(n5), .B1(n2), .B2(n11), .ZN(n19) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n11) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n10) );
  INVD1 U13 ( .I(n12), .ZN(n2) );
  INVD1 U14 ( .I(number_tokens[1]), .ZN(n5) );
  ND4D1 U15 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n18), .A4(
        rate_counter[0]), .ZN(n16) );
  NR2D1 U16 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n18) );
  HA1D0 U17 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U18 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U19 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U20 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U21 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X0_Y0_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_0 regulator ( .clk(clk), .rst(rst), .consume(n15), 
        .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_0 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n83, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15,
         n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29,
         n30, n31, n32, n33, n34, n35, n36, n37, n40, n1, n38, n39, n41, n42,
         n43, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57,
         n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71,
         n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n6) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n7) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n8) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n9) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n10) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n11) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n12) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n13) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n14) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n15) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n16) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n17) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n18) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n19) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n20) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n21) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n22) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n23) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n24) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n25) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n26) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n27) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n28) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n29) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n30) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n31) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n32) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n33) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n34) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n35) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n36) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n37) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n40) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n5) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n4) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n3) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n2) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n83) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n2), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U11 ( .I(i_d[35]), .ZN(n79) );
  INVD1 U12 ( .I(n83), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n3), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U14 ( .I(i_d[34]), .ZN(n80) );
  OAI22D1 U15 ( .A1(n45), .A2(n4), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U16 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U17 ( .A1(n45), .A2(n5), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U18 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U19 ( .A1(n45), .A2(n40), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n37), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n36), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n35), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n34), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n33), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n32), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n31), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n30), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n29), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n28), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n27), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n26), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n25), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n24), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n23), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n22), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n21), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n20), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n19), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n18), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n17), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n16), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n15), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n14), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n13), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n12), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n11), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n10), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n9), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n8), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n7), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n6), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X0_Y0 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22,
         n1, n2, n3, n5, n6, n7, n8, n9, n23;
  assign n2s = n_v;

  OR3D1 U10 ( .A1(i_y[1]), .A2(i_y[0]), .A3(n23), .Z(n18) );
  OA21D1 U15 ( .A1(w_y[0]), .A2(w_y[1]), .B(n12), .Z(n16) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U4 ( .I(e_b), .Z(n1) );
  NR2D1 U5 ( .A1(n21), .A2(n16), .ZN(n11) );
  INVD1 U6 ( .I(n19), .ZN(n5) );
  INVD1 U7 ( .I(n12), .ZN(n6) );
  ND3D1 U8 ( .A1(n13), .A2(n2), .A3(n23), .ZN(n22) );
  INVD1 U9 ( .I(n13), .ZN(w2e) );
  OAI22D1 U11 ( .A1(n9), .A2(n22), .B1(n23), .B2(n5), .ZN(i_ack) );
  NR3D0 U12 ( .A1(w2s), .A2(n_v), .A3(n9), .ZN(n19) );
  NR3D0 U13 ( .A1(w_y[0]), .A2(w_y[1]), .A3(n6), .ZN(n21) );
  NR2D1 U14 ( .A1(w_x[0]), .A2(w_x[1]), .ZN(n12) );
  INR3D0 U16 ( .A1(w_v), .B1(n11), .B2(n_v), .ZN(w2s) );
  ND3D1 U17 ( .A1(n6), .A2(n2), .A3(w_v), .ZN(n13) );
  INR2D1 U18 ( .A1(w_v), .B1(n10), .ZN(w_b) );
  AOI22D1 U19 ( .A1(n1), .A2(n11), .B1(n_v), .B2(n12), .ZN(n10) );
  INVD1 U20 ( .I(n17), .ZN(n23) );
  OAI21D1 U21 ( .A1(n9), .A2(n22), .B(n13), .ZN(e_v) );
  INVD1 U22 ( .I(n_v), .ZN(n3) );
  ND2D1 U23 ( .A1(n14), .A2(n15), .ZN(s_v) );
  OAI21D1 U24 ( .A1(n_y[0]), .A2(n_y[1]), .B(n_v), .ZN(n15) );
  AOI33D1 U25 ( .A1(w_v), .A2(n3), .A3(n16), .B1(n17), .B2(n18), .B3(n19), 
        .ZN(n14) );
  OAI21D1 U26 ( .A1(n5), .A2(n18), .B(n20), .ZN(o_v) );
  AOI33D1 U27 ( .A1(w_v), .A2(n3), .A3(n21), .B1(n8), .B2(n7), .B3(n_v), .ZN(
        n20) );
  INVD1 U28 ( .I(n_y[0]), .ZN(n8) );
  INVD1 U29 ( .I(n_y[1]), .ZN(n7) );
  INVD1 U30 ( .I(i_v), .ZN(n9) );
  NR2D1 U31 ( .A1(i_x[0]), .A2(i_x[1]), .ZN(n17) );
endmodule


module torus_xbar_1b_0 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n2, n1;

  MOAI22D1 U1 ( .A1(n2s), .A2(n2), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n2) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_575 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_574 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_573 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_572 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_571 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_570 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_569 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_568 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_567 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_566 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_565 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_564 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_563 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_562 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_561 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_560 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_559 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_558 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_557 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_556 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_555 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_554 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_553 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_552 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_551 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_550 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_549 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_548 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_547 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_546 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_545 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_544 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_543 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_542 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_541 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X0_Y0 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_0 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X0_Y0 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_0 \xbar_gen[0].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_575 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_574 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_573 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_572 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_571 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_570 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_569 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_568 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_567 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_566 \xbar_gen[10].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_565 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_564 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_563 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_562 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_561 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_560 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_559 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_558 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_557 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_556 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_555 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_554 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_553 \xbar_gen[23].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_552 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_551 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_550 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_549 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_548 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_547 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_546 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_545 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_544 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_543 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_542 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_541 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n7), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n8), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_0 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_0 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1199 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1198 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1199 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1198 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1197 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1196 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1197 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1196 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1195 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1194 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1195 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1194 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1193 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1192 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1193 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1192 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1191 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1190 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1191 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1190 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1189 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1188 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1189 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1188 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1187 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1186 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1187 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1186 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1185 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1184 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1185 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1184 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1183 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1182 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1183 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1182 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1181 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1180 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1181 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1180 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1179 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1178 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1179 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1178 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1177 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1176 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1177 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1176 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1175 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1174 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1175 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1174 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1173 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1172 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1173 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1172 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1171 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1170 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1171 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1170 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1169 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1168 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1169 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1168 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1167 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1166 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1167 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1166 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1165 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1164 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1165 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1164 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1163 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1162 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1163 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1162 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1161 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1160 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1161 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1160 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1159 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1158 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1159 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1158 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1157 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1156 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1157 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1156 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1155 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1154 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1155 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1154 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1153 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1152 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1153 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1152 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1151 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1150 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1151 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1150 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1149 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1148 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1149 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1148 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1147 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1146 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1147 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1146 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1145 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1144 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1145 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1144 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1143 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1142 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1143 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1142 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1141 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1140 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1141 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1140 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1139 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1138 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1139 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1138 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1137 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1136 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1137 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1136 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1135 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1134 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1135 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1134 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1133 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1132 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1133 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1132 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1131 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1130 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1131 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1130 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1129 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1128 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1129 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1128 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1127 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1126 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1127 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1126 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_15 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X1_Y0_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_15 regulator ( .clk(clk), .rst(rst), .consume(n15), .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_15 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U11 ( .I(i_d[35]), .ZN(n79) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U14 ( .I(i_d[34]), .ZN(n80) );
  OAI22D1 U15 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U16 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U17 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U18 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X1_Y0 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22,
         n1, n2, n3, n5, n6, n7, n8, n9, n23;
  assign n2s = n_v;

  OR3D1 U10 ( .A1(i_y[1]), .A2(i_y[0]), .A3(n18), .Z(n16) );
  OA21D1 U15 ( .A1(w_y[0]), .A2(w_y[1]), .B(n6), .Z(n15) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U4 ( .I(e_b), .Z(n1) );
  NR2D1 U5 ( .A1(n20), .A2(n15), .ZN(n11) );
  INVD1 U6 ( .I(n17), .ZN(n5) );
  INVD1 U7 ( .I(n22), .ZN(n6) );
  INVD1 U8 ( .I(n12), .ZN(w2e) );
  OAI22D1 U9 ( .A1(n9), .A2(n21), .B1(n18), .B2(n5), .ZN(i_ack) );
  NR3D0 U11 ( .A1(w2s), .A2(n_v), .A3(n9), .ZN(n17) );
  INR3D0 U12 ( .A1(w_v), .B1(n11), .B2(n_v), .ZN(w2s) );
  IND2D1 U13 ( .A1(w_x[1]), .B1(w_x[0]), .ZN(n22) );
  NR3D0 U14 ( .A1(w_y[0]), .A2(w_y[1]), .A3(n22), .ZN(n20) );
  ND3D1 U16 ( .A1(n22), .A2(n2), .A3(w_v), .ZN(n12) );
  ND3D1 U17 ( .A1(n12), .A2(n2), .A3(n18), .ZN(n21) );
  INR2D1 U18 ( .A1(w_v), .B1(n10), .ZN(w_b) );
  AOI22D1 U19 ( .A1(n1), .A2(n11), .B1(n_v), .B2(n6), .ZN(n10) );
  OAI21D1 U20 ( .A1(n9), .A2(n21), .B(n12), .ZN(e_v) );
  INVD1 U21 ( .I(n_v), .ZN(n3) );
  ND2D1 U22 ( .A1(n13), .A2(n14), .ZN(s_v) );
  OAI21D1 U23 ( .A1(n_y[0]), .A2(n_y[1]), .B(n_v), .ZN(n14) );
  AOI33D1 U24 ( .A1(w_v), .A2(n3), .A3(n15), .B1(n23), .B2(n16), .B3(n17), 
        .ZN(n13) );
  INVD1 U25 ( .I(n18), .ZN(n23) );
  OAI21D1 U26 ( .A1(n5), .A2(n16), .B(n19), .ZN(o_v) );
  AOI33D1 U27 ( .A1(w_v), .A2(n3), .A3(n20), .B1(n8), .B2(n7), .B3(n_v), .ZN(
        n19) );
  INVD1 U28 ( .I(n_y[0]), .ZN(n8) );
  INVD1 U29 ( .I(n_y[1]), .ZN(n7) );
  INVD1 U30 ( .I(i_v), .ZN(n9) );
  IND2D1 U31 ( .A1(i_x[1]), .B1(i_x[0]), .ZN(n18) );
endmodule


module torus_xbar_1b_540 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_539 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_538 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_537 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_536 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_535 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_534 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_533 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_532 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_531 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_530 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_529 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_528 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_527 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_526 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_525 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_524 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_523 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_522 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_521 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_520 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_519 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_518 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_517 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_516 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_515 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_514 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_513 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_512 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_511 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_510 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_509 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_508 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_507 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_506 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_505 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X1_Y0 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_15 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X1_Y0 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_540 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_539 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_538 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_537 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_536 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_535 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_534 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_533 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_532 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_531 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_530 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_529 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_528 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_527 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_526 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_525 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_524 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_523 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_522 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_521 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_520 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_519 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_518 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_517 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_516 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_515 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_514 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_513 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_512 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_511 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_510 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_509 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_508 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_507 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_506 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_505 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n7), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n8), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_1125 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1125 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1124 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1123 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1124 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1123 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1122 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1121 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1122 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1121 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1120 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1119 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1120 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1119 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1118 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1117 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1118 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1117 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1116 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1115 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1116 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1115 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1114 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1113 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1114 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1113 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1112 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1111 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1112 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1111 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1110 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1109 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1110 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1109 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1108 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1107 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1108 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1107 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1106 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1105 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1106 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1105 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1104 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1103 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1104 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1103 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1102 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1101 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1102 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1101 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1100 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1099 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1100 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1099 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1098 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1097 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1098 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1097 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1096 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1095 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1096 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1095 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1094 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1093 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1094 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1093 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1092 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1091 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1092 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1091 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1090 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1089 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1090 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1089 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1088 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1087 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1088 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1087 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1086 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1085 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1086 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1085 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1084 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1083 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1084 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1083 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1082 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1081 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1082 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1081 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1080 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1079 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1080 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1079 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1078 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1077 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1078 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1077 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1076 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1075 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1076 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1075 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1074 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1073 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1074 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1073 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1072 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1071 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1072 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1071 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1070 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1069 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1070 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1069 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1068 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1067 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1068 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1067 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1066 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1065 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1066 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1065 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1064 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1063 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1064 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1063 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1062 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1061 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1062 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1061 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1060 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1059 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1060 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1059 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1058 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1057 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1058 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1057 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1056 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1055 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1056 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1055 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1054 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1053 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1054 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1053 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1052 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1051 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1052 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1051 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_14 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X2_Y0_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_14 regulator ( .clk(clk), .rst(rst), .consume(n15), .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_14 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U11 ( .I(i_d[34]), .ZN(n80) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U14 ( .I(i_d[35]), .ZN(n79) );
  OAI22D1 U15 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U16 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U17 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U18 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X2_Y0 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22,
         n1, n2, n3, n5, n6, n7, n8, n9, n23;
  assign n2s = n_v;

  OR3D1 U10 ( .A1(i_y[1]), .A2(i_y[0]), .A3(n18), .Z(n16) );
  OA21D1 U15 ( .A1(w_y[0]), .A2(w_y[1]), .B(n6), .Z(n15) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U4 ( .I(e_b), .Z(n1) );
  NR2D1 U5 ( .A1(n20), .A2(n15), .ZN(n11) );
  INVD1 U6 ( .I(n17), .ZN(n5) );
  INVD1 U7 ( .I(n22), .ZN(n6) );
  INVD1 U8 ( .I(n12), .ZN(w2e) );
  OAI22D1 U9 ( .A1(n9), .A2(n21), .B1(n18), .B2(n5), .ZN(i_ack) );
  NR3D0 U11 ( .A1(w2s), .A2(n_v), .A3(n9), .ZN(n17) );
  INR3D0 U12 ( .A1(w_v), .B1(n11), .B2(n_v), .ZN(w2s) );
  IND2D1 U13 ( .A1(w_x[0]), .B1(w_x[1]), .ZN(n22) );
  NR3D0 U14 ( .A1(w_y[0]), .A2(w_y[1]), .A3(n22), .ZN(n20) );
  ND3D1 U16 ( .A1(n22), .A2(n2), .A3(w_v), .ZN(n12) );
  ND3D1 U17 ( .A1(n12), .A2(n2), .A3(n18), .ZN(n21) );
  INR2D1 U18 ( .A1(w_v), .B1(n10), .ZN(w_b) );
  AOI22D1 U19 ( .A1(n1), .A2(n11), .B1(n_v), .B2(n6), .ZN(n10) );
  OAI21D1 U20 ( .A1(n9), .A2(n21), .B(n12), .ZN(e_v) );
  INVD1 U21 ( .I(n_v), .ZN(n3) );
  ND2D1 U22 ( .A1(n13), .A2(n14), .ZN(s_v) );
  OAI21D1 U23 ( .A1(n_y[0]), .A2(n_y[1]), .B(n_v), .ZN(n14) );
  AOI33D1 U24 ( .A1(w_v), .A2(n3), .A3(n15), .B1(n23), .B2(n16), .B3(n17), 
        .ZN(n13) );
  INVD1 U25 ( .I(n18), .ZN(n23) );
  OAI21D1 U26 ( .A1(n5), .A2(n16), .B(n19), .ZN(o_v) );
  AOI33D1 U27 ( .A1(w_v), .A2(n3), .A3(n20), .B1(n8), .B2(n7), .B3(n_v), .ZN(
        n19) );
  INVD1 U28 ( .I(n_y[0]), .ZN(n8) );
  INVD1 U29 ( .I(n_y[1]), .ZN(n7) );
  INVD1 U30 ( .I(i_v), .ZN(n9) );
  IND2D1 U31 ( .A1(i_x[0]), .B1(i_x[1]), .ZN(n18) );
endmodule


module torus_xbar_1b_504 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_503 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_502 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_501 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_500 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_499 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_498 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_497 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_496 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_495 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_494 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_493 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_492 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_491 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_490 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_489 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_488 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_487 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_486 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_485 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_484 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_483 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_482 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_481 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_480 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_479 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_478 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_477 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_476 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_475 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_474 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_473 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_472 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_471 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_470 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_469 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X2_Y0 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_14 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X2_Y0 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_504 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_503 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_502 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_501 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_500 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_499 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_498 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_497 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_496 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_495 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_494 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_493 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_492 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_491 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_490 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_489 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_488 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_487 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_486 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_485 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_484 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_483 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_482 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_481 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_480 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_479 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_478 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_477 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_476 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_475 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_474 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_473 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_472 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_471 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_470 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_469 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n7), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n8), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_1050 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1050 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1049 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1048 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1049 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1048 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1047 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1046 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1047 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1046 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1045 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1044 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1045 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1044 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1043 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1042 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1043 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1042 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1041 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1040 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1041 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1040 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1039 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1038 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1039 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1038 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1037 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1036 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1037 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1036 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1035 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1034 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1035 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1034 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1033 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1032 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1033 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1032 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1031 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1030 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1031 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1030 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1029 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1028 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1029 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1028 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1027 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1026 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1027 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1026 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1025 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1024 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1025 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1024 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1023 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1022 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1023 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1022 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1021 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1020 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1021 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1020 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1019 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1018 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1019 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1018 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1017 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1016 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1017 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1016 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1015 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1014 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1015 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1014 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1013 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1012 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1013 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1012 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1011 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1010 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1011 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1010 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1009 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1008 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1009 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1008 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1007 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1006 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1007 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1006 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1005 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1004 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1005 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1004 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1003 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1002 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1003 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1002 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_1001 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1000 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_1001 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1000 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_999 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_998 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_999 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_998 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_997 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_996 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_997 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_996 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_995 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_994 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_995 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_994 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_993 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_992 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_993 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_992 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_991 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_990 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_991 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_990 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_989 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_988 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_989 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_988 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_987 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_986 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_987 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_986 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_985 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_984 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_985 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_984 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_983 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_982 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_983 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_982 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_981 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_980 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_981 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_980 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_979 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_978 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_979 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_978 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_977 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_976 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_977 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_976 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_13 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X3_Y0_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_13 regulator ( .clk(clk), .rst(rst), .consume(n15), .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_13 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U11 ( .I(i_d[34]), .ZN(n80) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U14 ( .I(i_d[35]), .ZN(n79) );
  OAI22D1 U15 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U16 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U17 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U18 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X3_Y0 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21,
         n1, n2, n3, n5, n6, n7, n8, n22;
  assign n2s = n_v;

  MAOI22D1 U4 ( .A1(n1), .A2(n10), .B1(n3), .B2(n11), .ZN(n9) );
  OR3D1 U10 ( .A1(i_y[1]), .A2(i_y[0]), .A3(n18), .Z(n16) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U5 ( .I(e_b), .Z(n1) );
  NR2D1 U6 ( .A1(n20), .A2(n15), .ZN(n10) );
  INVD1 U7 ( .I(n17), .ZN(n5) );
  INVD1 U8 ( .I(n12), .ZN(w2e) );
  OAI22D1 U9 ( .A1(n8), .A2(n21), .B1(n18), .B2(n5), .ZN(i_ack) );
  NR3D0 U11 ( .A1(w2s), .A2(n_v), .A3(n8), .ZN(n17) );
  NR3D0 U12 ( .A1(w_y[0]), .A2(w_y[1]), .A3(n11), .ZN(n20) );
  ND2D1 U13 ( .A1(w_x[1]), .A2(w_x[0]), .ZN(n11) );
  INR3D0 U14 ( .A1(w_v), .B1(n10), .B2(n_v), .ZN(w2s) );
  IAO21D1 U15 ( .A1(w_y[0]), .A2(w_y[1]), .B(n11), .ZN(n15) );
  ND3D1 U16 ( .A1(n11), .A2(n2), .A3(w_v), .ZN(n12) );
  ND3D1 U17 ( .A1(n12), .A2(n2), .A3(n18), .ZN(n21) );
  INR2D1 U18 ( .A1(w_v), .B1(n9), .ZN(w_b) );
  OAI21D1 U19 ( .A1(n8), .A2(n21), .B(n12), .ZN(e_v) );
  INVD1 U20 ( .I(n_v), .ZN(n3) );
  ND2D1 U21 ( .A1(n13), .A2(n14), .ZN(s_v) );
  OAI21D1 U22 ( .A1(n_y[0]), .A2(n_y[1]), .B(n_v), .ZN(n14) );
  AOI33D1 U23 ( .A1(w_v), .A2(n3), .A3(n15), .B1(n22), .B2(n16), .B3(n17), 
        .ZN(n13) );
  INVD1 U24 ( .I(n18), .ZN(n22) );
  OAI21D1 U25 ( .A1(n5), .A2(n16), .B(n19), .ZN(o_v) );
  AOI33D1 U26 ( .A1(w_v), .A2(n3), .A3(n20), .B1(n7), .B2(n6), .B3(n_v), .ZN(
        n19) );
  INVD1 U27 ( .I(n_y[0]), .ZN(n7) );
  INVD1 U28 ( .I(n_y[1]), .ZN(n6) );
  INVD1 U29 ( .I(i_v), .ZN(n8) );
  ND2D1 U30 ( .A1(i_x[1]), .A2(i_x[0]), .ZN(n18) );
endmodule


module torus_xbar_1b_468 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_467 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_466 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_465 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_464 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_463 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_462 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_461 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_460 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_459 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_458 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_457 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_456 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_455 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_454 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_453 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_452 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_451 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_450 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_449 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_448 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_447 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_446 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_445 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_444 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_443 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_442 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_441 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_440 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_439 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_438 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_437 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_436 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_435 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_434 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_433 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X3_Y0 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_13 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X3_Y0 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_468 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_467 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_466 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_465 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_464 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_463 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_462 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_461 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_460 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_459 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_458 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_457 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_456 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_455 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_454 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_453 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_452 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_451 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_450 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_449 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_448 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_447 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_446 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_445 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_444 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_443 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_442 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_441 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_440 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_439 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_438 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_437 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_436 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_435 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_434 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_433 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n7), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n8), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_975 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_975 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_974 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_973 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_974 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_973 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_972 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_971 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_972 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_971 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_970 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_969 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_970 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_969 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_968 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_967 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_968 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_967 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_966 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_965 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_966 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_965 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_964 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_963 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_964 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_963 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_962 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_961 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_962 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_961 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_960 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_959 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_960 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_959 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_958 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_957 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_958 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_957 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_956 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_955 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_956 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_955 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_954 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_953 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_954 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_953 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_952 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_951 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_952 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_951 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_950 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_949 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_950 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_949 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_948 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_947 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_948 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_947 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_946 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_945 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_946 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_945 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_944 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_943 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_944 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_943 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_942 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_941 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_942 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_941 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_940 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_939 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_940 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_939 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_938 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_937 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_938 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_937 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_936 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_935 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_936 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_935 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_934 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_933 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_934 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_933 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_932 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_931 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_932 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_931 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_930 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_929 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_930 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_929 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_928 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_927 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_928 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_927 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_926 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_925 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_926 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_925 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_924 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_923 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_924 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_923 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_922 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_921 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_922 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_921 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_920 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_919 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_920 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_919 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_918 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_917 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_918 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_917 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_916 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_915 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_916 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_915 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_914 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_913 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_914 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_913 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_912 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_911 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_912 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_911 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_910 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_909 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_910 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_909 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_908 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_907 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_908 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_907 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_906 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_905 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_906 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_905 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_904 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_903 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_904 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_903 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_902 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_901 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_902 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_901 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_12 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X0_Y1_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_12 regulator ( .clk(clk), .rst(rst), .consume(n15), .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_12 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U11 ( .I(i_d[35]), .ZN(n79) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U14 ( .I(i_d[34]), .ZN(n80) );
  OAI22D1 U15 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U16 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U17 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U18 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X0_Y1 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22,
         n1, n2, n3, n5, n6, n7, n8, n9, n23;
  assign n2s = n_v;

  AO21D1 U6 ( .A1(n8), .A2(n_y[0]), .B(n3), .Z(n15) );
  OA21D1 U15 ( .A1(w_y[1]), .A2(n7), .B(n12), .Z(n16) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U4 ( .I(e_b), .Z(n1) );
  NR2D1 U5 ( .A1(n21), .A2(n16), .ZN(n11) );
  INVD1 U7 ( .I(n19), .ZN(n5) );
  INVD1 U8 ( .I(n12), .ZN(n6) );
  ND3D1 U9 ( .A1(n13), .A2(n2), .A3(n23), .ZN(n22) );
  INVD1 U10 ( .I(n13), .ZN(w2e) );
  OAI22D1 U11 ( .A1(n9), .A2(n22), .B1(n23), .B2(n5), .ZN(i_ack) );
  NR3D0 U12 ( .A1(w2s), .A2(n_v), .A3(n9), .ZN(n19) );
  NR3D0 U13 ( .A1(n7), .A2(w_y[1]), .A3(n6), .ZN(n21) );
  NR2D1 U14 ( .A1(w_x[0]), .A2(w_x[1]), .ZN(n12) );
  INR3D0 U16 ( .A1(w_v), .B1(n11), .B2(n_v), .ZN(w2s) );
  INVD1 U17 ( .I(w_y[0]), .ZN(n7) );
  ND3D1 U18 ( .A1(n6), .A2(n2), .A3(w_v), .ZN(n13) );
  INR2D1 U19 ( .A1(w_v), .B1(n10), .ZN(w_b) );
  AOI22D1 U20 ( .A1(n1), .A2(n11), .B1(n_v), .B2(n12), .ZN(n10) );
  INVD1 U21 ( .I(n17), .ZN(n23) );
  OAI21D1 U22 ( .A1(n9), .A2(n22), .B(n13), .ZN(e_v) );
  INVD1 U23 ( .I(n_v), .ZN(n3) );
  ND2D1 U24 ( .A1(n14), .A2(n15), .ZN(s_v) );
  AOI33D1 U25 ( .A1(w_v), .A2(n3), .A3(n16), .B1(n17), .B2(n18), .B3(n19), 
        .ZN(n14) );
  OAI21D1 U26 ( .A1(n5), .A2(n18), .B(n20), .ZN(o_v) );
  AOI33D1 U27 ( .A1(w_v), .A2(n3), .A3(n21), .B1(n_v), .B2(n8), .B3(n_y[0]), 
        .ZN(n20) );
  INVD1 U28 ( .I(i_v), .ZN(n9) );
  NR2D1 U29 ( .A1(i_x[0]), .A2(i_x[1]), .ZN(n17) );
  IND3D1 U30 ( .A1(i_y[1]), .B1(n17), .B2(i_y[0]), .ZN(n18) );
  INVD1 U31 ( .I(n_y[1]), .ZN(n8) );
endmodule


module torus_xbar_1b_432 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_431 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_430 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_429 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_428 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_427 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_426 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_425 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_424 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_423 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_422 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_421 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_420 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_419 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_418 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_417 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_416 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_415 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_414 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_413 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_412 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_411 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_410 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_409 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_408 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_407 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_406 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_405 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_404 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_403 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_402 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_401 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_400 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_399 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_398 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_397 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X0_Y1 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_12 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X0_Y1 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_432 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_431 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_430 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_429 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_428 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_427 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_426 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_425 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_424 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_423 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_422 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_421 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_420 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_419 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_418 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_417 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_416 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_415 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_414 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_413 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_412 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_411 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_410 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_409 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_408 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_407 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_406 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_405 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_404 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_403 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_402 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_401 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_400 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_399 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_398 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_397 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n7), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n8), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_900 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_900 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_899 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_898 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_899 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_898 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_897 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_896 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_897 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_896 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_895 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_894 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_895 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_894 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_893 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_892 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_893 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_892 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_891 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_890 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_891 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_890 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_889 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_888 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_889 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_888 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_887 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_886 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_887 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_886 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_885 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_884 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_885 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_884 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_883 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_882 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_883 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_882 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_881 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_880 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_881 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_880 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_879 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_878 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_879 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_878 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_877 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_876 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_877 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_876 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_875 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_874 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_875 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_874 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_873 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_872 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_873 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_872 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_871 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_870 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_871 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_870 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_869 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_868 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_869 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_868 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_867 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_866 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_867 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_866 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_865 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_864 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_865 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_864 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_863 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_862 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_863 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_862 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_861 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_860 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_861 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_860 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_859 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_858 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_859 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_858 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_857 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_856 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_857 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_856 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_855 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_854 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_855 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_854 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_853 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_852 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_853 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_852 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_851 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_850 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_851 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_850 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_849 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_848 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_849 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_848 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_847 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_846 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_847 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_846 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_845 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_844 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_845 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_844 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_843 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_842 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_843 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_842 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_841 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_840 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_841 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_840 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_839 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_838 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_839 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_838 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_837 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_836 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_837 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_836 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_835 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_834 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_835 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_834 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_833 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_832 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_833 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_832 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_831 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_830 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_831 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_830 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_829 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_828 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_829 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_828 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_827 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_826 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_827 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_826 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_11 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X1_Y1_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_11 regulator ( .clk(clk), .rst(rst), .consume(n15), .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_11 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U11 ( .I(i_d[35]), .ZN(n79) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U14 ( .I(i_d[34]), .ZN(n80) );
  OAI22D1 U15 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U16 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U17 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U18 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X1_Y1 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22,
         n1, n2, n3, n5, n6, n7, n8, n9, n23;
  assign n2s = n_v;

  AO21D1 U6 ( .A1(n8), .A2(n_y[0]), .B(n3), .Z(n14) );
  OA21D1 U15 ( .A1(w_y[1]), .A2(n7), .B(n6), .Z(n15) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U4 ( .I(e_b), .Z(n1) );
  NR2D1 U5 ( .A1(n19), .A2(n15), .ZN(n11) );
  INVD1 U7 ( .I(n17), .ZN(n5) );
  INVD1 U8 ( .I(n22), .ZN(n6) );
  INVD1 U9 ( .I(n12), .ZN(w2e) );
  OAI22D1 U10 ( .A1(n9), .A2(n21), .B1(n20), .B2(n5), .ZN(i_ack) );
  NR3D0 U11 ( .A1(w2s), .A2(n_v), .A3(n9), .ZN(n17) );
  IND2D1 U12 ( .A1(w_x[1]), .B1(w_x[0]), .ZN(n22) );
  INR3D0 U13 ( .A1(w_v), .B1(n11), .B2(n_v), .ZN(w2s) );
  NR3D0 U14 ( .A1(n7), .A2(w_y[1]), .A3(n22), .ZN(n19) );
  INVD1 U16 ( .I(w_y[0]), .ZN(n7) );
  ND3D1 U17 ( .A1(n22), .A2(n2), .A3(w_v), .ZN(n12) );
  ND3D1 U18 ( .A1(n12), .A2(n2), .A3(n20), .ZN(n21) );
  INR2D1 U19 ( .A1(w_v), .B1(n10), .ZN(w_b) );
  AOI22D1 U20 ( .A1(n1), .A2(n11), .B1(n_v), .B2(n6), .ZN(n10) );
  OAI21D1 U21 ( .A1(n9), .A2(n21), .B(n12), .ZN(e_v) );
  INVD1 U22 ( .I(n20), .ZN(n23) );
  INVD1 U23 ( .I(n_v), .ZN(n3) );
  ND2D1 U24 ( .A1(n13), .A2(n14), .ZN(s_v) );
  AOI33D1 U25 ( .A1(w_v), .A2(n3), .A3(n15), .B1(n23), .B2(n16), .B3(n17), 
        .ZN(n13) );
  OAI21D1 U26 ( .A1(n5), .A2(n16), .B(n18), .ZN(o_v) );
  AOI33D1 U27 ( .A1(w_v), .A2(n3), .A3(n19), .B1(n_v), .B2(n8), .B3(n_y[0]), 
        .ZN(n18) );
  INVD1 U28 ( .I(i_v), .ZN(n9) );
  IND2D1 U29 ( .A1(i_x[1]), .B1(i_x[0]), .ZN(n20) );
  IND3D1 U30 ( .A1(i_y[1]), .B1(n23), .B2(i_y[0]), .ZN(n16) );
  INVD1 U31 ( .I(n_y[1]), .ZN(n8) );
endmodule


module torus_xbar_1b_396 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_395 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_394 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_393 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_392 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_391 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_390 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_389 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_388 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_387 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_386 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_385 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_384 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_383 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_382 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_381 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_380 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_379 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_378 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_377 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_376 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_375 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_374 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_373 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_372 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_371 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_370 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_369 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_368 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_367 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_366 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_365 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_364 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_363 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_362 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_361 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X1_Y1 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_11 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X1_Y1 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_396 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_395 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_394 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_393 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_392 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_391 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_390 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_389 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_388 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_387 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_386 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_385 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_384 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_383 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_382 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_381 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_380 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_379 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_378 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_377 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_376 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_375 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_374 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_373 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_372 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_371 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_370 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_369 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_368 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_367 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_366 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_365 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_364 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_363 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_362 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_361 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n7), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n8), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_825 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_825 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_824 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_823 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_824 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_823 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_822 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_821 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_822 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_821 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_820 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_819 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_820 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_819 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_818 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_817 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_818 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_817 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_816 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_815 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_816 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_815 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_814 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_813 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_814 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_813 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_812 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_811 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_812 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_811 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_810 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_809 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_810 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_809 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_808 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_807 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_808 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_807 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_806 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_805 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_806 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_805 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_804 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_803 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_804 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_803 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_802 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_801 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_802 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_801 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_800 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_799 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_800 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_799 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_798 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_797 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_798 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_797 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_796 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_795 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_796 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_795 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_794 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_793 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_794 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_793 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_792 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_791 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_792 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_791 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_790 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_789 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_790 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_789 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_788 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_787 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_788 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_787 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_786 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_785 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_786 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_785 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_784 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_783 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_784 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_783 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_782 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_781 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_782 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_781 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_780 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_779 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_780 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_779 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_778 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_777 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_778 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_777 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_776 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_775 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_776 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_775 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_774 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_773 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_774 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_773 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_772 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_771 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_772 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_771 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_770 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_769 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_770 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_769 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_768 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_767 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_768 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_767 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_766 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_765 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_766 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_765 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_764 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_763 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_764 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_763 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_762 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_761 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_762 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_761 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_760 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_759 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_760 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_759 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_758 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_757 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_758 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_757 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_756 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_755 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_756 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_755 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_754 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_753 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_754 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_753 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_752 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_751 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_752 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_751 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_10 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X2_Y1_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_10 regulator ( .clk(clk), .rst(rst), .consume(n15), .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_10 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U11 ( .I(i_d[34]), .ZN(n80) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U14 ( .I(i_d[35]), .ZN(n79) );
  OAI22D1 U15 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U16 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U17 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U18 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X2_Y1 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22,
         n1, n2, n3, n5, n6, n7, n8, n9, n23;
  assign n2s = n_v;

  AO21D1 U6 ( .A1(n8), .A2(n_y[0]), .B(n3), .Z(n14) );
  OA21D1 U15 ( .A1(w_y[1]), .A2(n7), .B(n6), .Z(n15) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U4 ( .I(e_b), .Z(n1) );
  NR2D1 U5 ( .A1(n19), .A2(n15), .ZN(n11) );
  INVD1 U7 ( .I(n17), .ZN(n5) );
  INVD1 U8 ( .I(n22), .ZN(n6) );
  INVD1 U9 ( .I(n12), .ZN(w2e) );
  OAI22D1 U10 ( .A1(n9), .A2(n21), .B1(n20), .B2(n5), .ZN(i_ack) );
  NR3D0 U11 ( .A1(w2s), .A2(n_v), .A3(n9), .ZN(n17) );
  IND2D1 U12 ( .A1(w_x[0]), .B1(w_x[1]), .ZN(n22) );
  INR3D0 U13 ( .A1(w_v), .B1(n11), .B2(n_v), .ZN(w2s) );
  NR3D0 U14 ( .A1(n7), .A2(w_y[1]), .A3(n22), .ZN(n19) );
  INVD1 U16 ( .I(w_y[0]), .ZN(n7) );
  ND3D1 U17 ( .A1(n22), .A2(n2), .A3(w_v), .ZN(n12) );
  ND3D1 U18 ( .A1(n12), .A2(n2), .A3(n20), .ZN(n21) );
  INR2D1 U19 ( .A1(w_v), .B1(n10), .ZN(w_b) );
  AOI22D1 U20 ( .A1(n1), .A2(n11), .B1(n_v), .B2(n6), .ZN(n10) );
  OAI21D1 U21 ( .A1(n9), .A2(n21), .B(n12), .ZN(e_v) );
  INVD1 U22 ( .I(n20), .ZN(n23) );
  INVD1 U23 ( .I(n_v), .ZN(n3) );
  ND2D1 U24 ( .A1(n13), .A2(n14), .ZN(s_v) );
  AOI33D1 U25 ( .A1(w_v), .A2(n3), .A3(n15), .B1(n23), .B2(n16), .B3(n17), 
        .ZN(n13) );
  OAI21D1 U26 ( .A1(n5), .A2(n16), .B(n18), .ZN(o_v) );
  AOI33D1 U27 ( .A1(w_v), .A2(n3), .A3(n19), .B1(n_v), .B2(n8), .B3(n_y[0]), 
        .ZN(n18) );
  INVD1 U28 ( .I(i_v), .ZN(n9) );
  IND2D1 U29 ( .A1(i_x[0]), .B1(i_x[1]), .ZN(n20) );
  IND3D1 U30 ( .A1(i_y[1]), .B1(n23), .B2(i_y[0]), .ZN(n16) );
  INVD1 U31 ( .I(n_y[1]), .ZN(n8) );
endmodule


module torus_xbar_1b_360 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_359 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_358 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_357 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_356 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_355 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_354 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_353 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_352 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_351 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_350 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_349 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_348 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_347 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_346 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_345 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_344 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_343 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_342 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_341 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_340 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_339 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_338 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_337 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_336 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_335 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_334 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_333 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_332 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_331 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_330 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_329 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_328 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_327 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_326 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_325 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X2_Y1 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_10 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X2_Y1 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_360 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_359 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_358 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_357 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_356 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_355 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_354 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_353 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_352 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_351 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_350 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_349 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_348 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_347 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_346 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_345 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_344 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_343 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_342 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_341 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_340 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_339 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_338 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_337 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_336 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_335 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_334 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_333 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_332 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_331 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_330 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_329 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_328 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_327 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_326 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_325 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n7), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n8), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_750 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_750 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_749 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_748 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_749 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_748 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_747 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_746 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_747 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_746 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_745 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_744 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_745 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_744 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_743 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_742 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_743 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_742 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_741 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_740 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_741 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_740 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_739 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_738 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_739 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_738 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_737 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_736 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_737 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_736 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_735 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_734 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_735 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_734 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_733 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_732 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_733 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_732 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_731 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_730 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_731 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_730 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_729 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_728 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_729 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_728 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_727 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_726 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_727 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_726 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_725 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_724 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_725 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_724 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_723 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_722 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_723 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_722 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_721 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_720 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_721 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_720 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_719 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_718 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_719 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_718 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_717 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_716 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_717 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_716 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_715 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_714 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_715 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_714 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_713 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_712 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_713 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_712 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_711 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_710 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_711 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_710 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_709 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_708 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_709 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_708 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_707 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_706 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_707 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_706 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_705 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_704 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_705 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_704 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_703 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_702 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_703 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_702 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_701 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_700 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_701 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_700 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_699 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_698 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_699 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_698 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_697 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_696 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_697 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_696 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_695 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_694 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_695 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_694 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_693 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_692 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_693 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_692 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_691 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_690 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_691 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_690 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_689 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_688 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_689 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_688 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_687 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_686 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_687 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_686 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_685 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_684 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_685 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_684 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_683 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_682 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_683 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_682 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_681 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_680 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_681 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_680 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_679 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_678 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_679 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_678 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_677 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_676 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_677 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_676 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_9 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X3_Y1_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_9 regulator ( .clk(clk), .rst(rst), .consume(n15), 
        .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_9 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U11 ( .I(i_d[34]), .ZN(n80) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U14 ( .I(i_d[35]), .ZN(n79) );
  OAI22D1 U15 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U16 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U17 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U18 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X3_Y1 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21,
         n1, n2, n3, n5, n6, n7, n8, n22;
  assign n2s = n_v;

  MAOI22D1 U4 ( .A1(n1), .A2(n10), .B1(n3), .B2(n11), .ZN(n9) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U5 ( .I(e_b), .Z(n1) );
  NR2D1 U6 ( .A1(n19), .A2(n15), .ZN(n10) );
  INVD1 U7 ( .I(n17), .ZN(n5) );
  INVD1 U8 ( .I(n12), .ZN(w2e) );
  OAI22D1 U9 ( .A1(n8), .A2(n21), .B1(n20), .B2(n5), .ZN(i_ack) );
  NR3D0 U10 ( .A1(w2s), .A2(n_v), .A3(n8), .ZN(n17) );
  NR3D0 U11 ( .A1(n6), .A2(w_y[1]), .A3(n11), .ZN(n19) );
  ND2D1 U12 ( .A1(w_x[1]), .A2(w_x[0]), .ZN(n11) );
  INR3D0 U13 ( .A1(w_v), .B1(n10), .B2(n_v), .ZN(w2s) );
  IAO21D1 U14 ( .A1(w_y[1]), .A2(n6), .B(n11), .ZN(n15) );
  INVD1 U15 ( .I(w_y[0]), .ZN(n6) );
  ND3D1 U16 ( .A1(n11), .A2(n2), .A3(w_v), .ZN(n12) );
  ND3D1 U17 ( .A1(n12), .A2(n2), .A3(n20), .ZN(n21) );
  INR2D1 U18 ( .A1(w_v), .B1(n9), .ZN(w_b) );
  OAI21D1 U19 ( .A1(n8), .A2(n21), .B(n12), .ZN(e_v) );
  INVD1 U20 ( .I(n20), .ZN(n22) );
  INVD1 U21 ( .I(n_v), .ZN(n3) );
  ND2D1 U22 ( .A1(n13), .A2(n14), .ZN(s_v) );
  IOA21D1 U23 ( .A1(n7), .A2(n_y[0]), .B(n_v), .ZN(n14) );
  AOI33D1 U24 ( .A1(w_v), .A2(n3), .A3(n15), .B1(n22), .B2(n16), .B3(n17), 
        .ZN(n13) );
  OAI21D1 U25 ( .A1(n5), .A2(n16), .B(n18), .ZN(o_v) );
  AOI33D1 U26 ( .A1(w_v), .A2(n3), .A3(n19), .B1(n_v), .B2(n7), .B3(n_y[0]), 
        .ZN(n18) );
  INVD1 U27 ( .I(i_v), .ZN(n8) );
  ND2D1 U28 ( .A1(i_x[1]), .A2(i_x[0]), .ZN(n20) );
  IND3D1 U29 ( .A1(i_y[1]), .B1(n22), .B2(i_y[0]), .ZN(n16) );
  INVD1 U30 ( .I(n_y[1]), .ZN(n7) );
endmodule


module torus_xbar_1b_324 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_323 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_322 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_321 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_320 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_319 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_318 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_317 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_316 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_315 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_314 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_313 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_312 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_311 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_310 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_309 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_308 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_307 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_306 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_305 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_304 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_303 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_302 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_301 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_300 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_299 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_298 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_297 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_296 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_295 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_294 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_293 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_292 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_291 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_290 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_289 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X3_Y1 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_9 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X3_Y1 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_324 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_323 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_322 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_321 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_320 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_319 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_318 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_317 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_316 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_315 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_314 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_313 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_312 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_311 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_310 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_309 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_308 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_307 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_306 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_305 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_304 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_303 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_302 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_301 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_300 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_299 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_298 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_297 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_296 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_295 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_294 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_293 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_292 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_291 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_290 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_289 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n7), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n8), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_675 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_675 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_674 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_673 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_674 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_673 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_672 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_671 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_672 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_671 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_670 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_669 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_670 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_669 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_668 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_667 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_668 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_667 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_666 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_665 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_666 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_665 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_664 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_663 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_664 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_663 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_662 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_661 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_662 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_661 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_660 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_659 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_660 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_659 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_658 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_657 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_658 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_657 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_656 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_655 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_656 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_655 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_654 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_653 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_654 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_653 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_652 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_651 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_652 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_651 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_650 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_649 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_650 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_649 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_648 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_647 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_648 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_647 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_646 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_645 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_646 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_645 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_644 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_643 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_644 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_643 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_642 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_641 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_642 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_641 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_640 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_639 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_640 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_639 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_638 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_637 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_638 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_637 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_636 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_635 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_636 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_635 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_634 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_633 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_634 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_633 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_632 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_631 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_632 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_631 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_630 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_629 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_630 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_629 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_628 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_627 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_628 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_627 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_626 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_625 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_626 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_625 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_624 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_623 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_624 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_623 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_622 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_621 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_622 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_621 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_620 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_619 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_620 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_619 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_618 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_617 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_618 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_617 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_616 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_615 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_616 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_615 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_614 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_613 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_614 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_613 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_612 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_611 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_612 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_611 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_610 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_609 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_610 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_609 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_608 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_607 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_608 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_607 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_606 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_605 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_606 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_605 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_604 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_603 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_604 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_603 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_602 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_601 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_602 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_601 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_8 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X0_Y2_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_8 regulator ( .clk(clk), .rst(rst), .consume(n15), 
        .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_8 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U11 ( .I(i_d[35]), .ZN(n79) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U14 ( .I(i_d[34]), .ZN(n80) );
  OAI22D1 U15 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U16 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U17 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U18 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X0_Y2 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22,
         n1, n2, n3, n5, n6, n7, n8, n9, n23;
  assign n2s = n_v;

  AO21D1 U6 ( .A1(n8), .A2(n_y[1]), .B(n3), .Z(n15) );
  OA21D1 U15 ( .A1(w_y[0]), .A2(n7), .B(n12), .Z(n16) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U4 ( .I(e_b), .Z(n1) );
  NR2D1 U5 ( .A1(n21), .A2(n16), .ZN(n11) );
  INVD1 U7 ( .I(n19), .ZN(n5) );
  INVD1 U8 ( .I(n12), .ZN(n6) );
  ND3D1 U9 ( .A1(n13), .A2(n2), .A3(n23), .ZN(n22) );
  INVD1 U10 ( .I(n13), .ZN(w2e) );
  OAI22D1 U11 ( .A1(n9), .A2(n22), .B1(n23), .B2(n5), .ZN(i_ack) );
  NR3D0 U12 ( .A1(w2s), .A2(n_v), .A3(n9), .ZN(n19) );
  NR3D0 U13 ( .A1(n7), .A2(w_y[0]), .A3(n6), .ZN(n21) );
  NR2D1 U14 ( .A1(w_x[0]), .A2(w_x[1]), .ZN(n12) );
  INR3D0 U16 ( .A1(w_v), .B1(n11), .B2(n_v), .ZN(w2s) );
  INVD1 U17 ( .I(w_y[1]), .ZN(n7) );
  ND3D1 U18 ( .A1(n6), .A2(n2), .A3(w_v), .ZN(n13) );
  INR2D1 U19 ( .A1(w_v), .B1(n10), .ZN(w_b) );
  AOI22D1 U20 ( .A1(n1), .A2(n11), .B1(n_v), .B2(n12), .ZN(n10) );
  INVD1 U21 ( .I(n17), .ZN(n23) );
  OAI21D1 U22 ( .A1(n9), .A2(n22), .B(n13), .ZN(e_v) );
  INVD1 U23 ( .I(n_v), .ZN(n3) );
  ND2D1 U24 ( .A1(n14), .A2(n15), .ZN(s_v) );
  AOI33D1 U25 ( .A1(w_v), .A2(n3), .A3(n16), .B1(n17), .B2(n18), .B3(n19), 
        .ZN(n14) );
  OAI21D1 U26 ( .A1(n5), .A2(n18), .B(n20), .ZN(o_v) );
  AOI33D1 U27 ( .A1(w_v), .A2(n3), .A3(n21), .B1(n_v), .B2(n8), .B3(n_y[1]), 
        .ZN(n20) );
  INVD1 U28 ( .I(i_v), .ZN(n9) );
  NR2D1 U29 ( .A1(i_x[0]), .A2(i_x[1]), .ZN(n17) );
  IND3D1 U30 ( .A1(i_y[0]), .B1(n17), .B2(i_y[1]), .ZN(n18) );
  INVD1 U31 ( .I(n_y[0]), .ZN(n8) );
endmodule


module torus_xbar_1b_288 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_287 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_286 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_285 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_284 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_283 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_282 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_281 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_280 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_279 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_278 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_277 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_276 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_275 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_274 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_273 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_272 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_271 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_270 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_269 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_268 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_267 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_266 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_265 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_264 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_263 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_262 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_261 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_260 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_259 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_258 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_257 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_256 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_255 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_254 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_253 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X0_Y2 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_8 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X0_Y2 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_288 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_287 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_286 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_285 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_284 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_283 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_282 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_281 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_280 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_279 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_278 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_277 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_276 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_275 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_274 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_273 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_272 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_271 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_270 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_269 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_268 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_267 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_266 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_265 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_264 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_263 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_262 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_261 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_260 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_259 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_258 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_257 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_256 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_255 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_254 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_253 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n7), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n8), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_600 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_600 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_599 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_598 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_599 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_598 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_597 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_596 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_597 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_596 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_595 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_594 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_595 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_594 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_593 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_592 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_593 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_592 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_591 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_590 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_591 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_590 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_589 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_588 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_589 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_588 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_587 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_586 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_587 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_586 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_585 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_584 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_585 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_584 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_583 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_582 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_583 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_582 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_581 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_580 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_581 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_580 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_579 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_578 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_579 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_578 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_577 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_576 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_577 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_576 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_575 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_574 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_575 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_574 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_573 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_572 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_573 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_572 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_571 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_570 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_571 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_570 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_569 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_568 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_569 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_568 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_567 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_566 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_567 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_566 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_565 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_564 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_565 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_564 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_563 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_562 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_563 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_562 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_561 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_560 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_561 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_560 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_559 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_558 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_559 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_558 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_557 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_556 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_557 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_556 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_555 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_554 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_555 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_554 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_553 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_552 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_553 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_552 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_551 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_550 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_551 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_550 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_549 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_548 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_549 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_548 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_547 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_546 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_547 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_546 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_545 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_544 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_545 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_544 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_543 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_542 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_543 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_542 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_541 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_540 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_541 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_540 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_539 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_538 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_539 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_538 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_537 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_536 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_537 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_536 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_535 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_534 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_535 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_534 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_533 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_532 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_533 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_532 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_531 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_530 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_531 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_530 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_529 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_528 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_529 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_528 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_527 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_526 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_527 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_526 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_7 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X1_Y2_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_7 regulator ( .clk(clk), .rst(rst), .consume(n15), 
        .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_7 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U11 ( .I(i_d[35]), .ZN(n79) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U14 ( .I(i_d[34]), .ZN(n80) );
  OAI22D1 U15 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U16 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U17 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U18 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X1_Y2 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22,
         n1, n2, n3, n5, n6, n7, n8, n9, n23;
  assign n2s = n_v;

  AO21D1 U6 ( .A1(n8), .A2(n_y[1]), .B(n3), .Z(n14) );
  OA21D1 U15 ( .A1(w_y[0]), .A2(n7), .B(n6), .Z(n15) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U4 ( .I(e_b), .Z(n1) );
  NR2D1 U5 ( .A1(n19), .A2(n15), .ZN(n11) );
  INVD1 U7 ( .I(n17), .ZN(n5) );
  INVD1 U8 ( .I(n22), .ZN(n6) );
  INVD1 U9 ( .I(n12), .ZN(w2e) );
  OAI22D1 U10 ( .A1(n9), .A2(n21), .B1(n20), .B2(n5), .ZN(i_ack) );
  NR3D0 U11 ( .A1(w2s), .A2(n_v), .A3(n9), .ZN(n17) );
  IND2D1 U12 ( .A1(w_x[1]), .B1(w_x[0]), .ZN(n22) );
  INR3D0 U13 ( .A1(w_v), .B1(n11), .B2(n_v), .ZN(w2s) );
  NR3D0 U14 ( .A1(n7), .A2(w_y[0]), .A3(n22), .ZN(n19) );
  INVD1 U16 ( .I(w_y[1]), .ZN(n7) );
  ND3D1 U17 ( .A1(n22), .A2(n2), .A3(w_v), .ZN(n12) );
  ND3D1 U18 ( .A1(n12), .A2(n2), .A3(n20), .ZN(n21) );
  INR2D1 U19 ( .A1(w_v), .B1(n10), .ZN(w_b) );
  AOI22D1 U20 ( .A1(n1), .A2(n11), .B1(n_v), .B2(n6), .ZN(n10) );
  OAI21D1 U21 ( .A1(n9), .A2(n21), .B(n12), .ZN(e_v) );
  INVD1 U22 ( .I(n20), .ZN(n23) );
  INVD1 U23 ( .I(n_v), .ZN(n3) );
  ND2D1 U24 ( .A1(n13), .A2(n14), .ZN(s_v) );
  AOI33D1 U25 ( .A1(w_v), .A2(n3), .A3(n15), .B1(n23), .B2(n16), .B3(n17), 
        .ZN(n13) );
  OAI21D1 U26 ( .A1(n5), .A2(n16), .B(n18), .ZN(o_v) );
  AOI33D1 U27 ( .A1(w_v), .A2(n3), .A3(n19), .B1(n_v), .B2(n8), .B3(n_y[1]), 
        .ZN(n18) );
  INVD1 U28 ( .I(i_v), .ZN(n9) );
  IND2D1 U29 ( .A1(i_x[1]), .B1(i_x[0]), .ZN(n20) );
  IND3D1 U30 ( .A1(i_y[0]), .B1(n23), .B2(i_y[1]), .ZN(n16) );
  INVD1 U31 ( .I(n_y[0]), .ZN(n8) );
endmodule


module torus_xbar_1b_252 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_251 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_250 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_249 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_248 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_247 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_246 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_245 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_244 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_243 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_242 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_241 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_240 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_239 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_238 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_237 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_236 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_235 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_234 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_233 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_232 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_231 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_230 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_229 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_228 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_227 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_226 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_225 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_224 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_223 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_222 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_221 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_220 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_219 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_218 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_217 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X1_Y2 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_7 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X1_Y2 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_252 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_251 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_250 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_249 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_248 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_247 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_246 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_245 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_244 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_243 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_242 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_241 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_240 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_239 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_238 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_237 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_236 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_235 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_234 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_233 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_232 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_231 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_230 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_229 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_228 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_227 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_226 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_225 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_224 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_223 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_222 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_221 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_220 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_219 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_218 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_217 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n7), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n8), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_525 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_525 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_524 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_523 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_524 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_523 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_522 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_521 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_522 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_521 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_520 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_519 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_520 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_519 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_518 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_517 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_518 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_517 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_516 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_515 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_516 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_515 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_514 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_513 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_514 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_513 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_512 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_511 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_512 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_511 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_510 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_509 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_510 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_509 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_508 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_507 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_508 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_507 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_506 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_505 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_506 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_505 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_504 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_503 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_504 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_503 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_502 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_501 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_502 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_501 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_500 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_499 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_500 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_499 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_498 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_497 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_498 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_497 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_496 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_495 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_496 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_495 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_494 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_493 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_494 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_493 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_492 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_491 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_492 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_491 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_490 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_489 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_490 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_489 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_488 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_487 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_488 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_487 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_486 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_485 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_486 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_485 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_484 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_483 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_484 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_483 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_482 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_481 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_482 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_481 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_480 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_479 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_480 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_479 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_478 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_477 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_478 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_477 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_476 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_475 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_476 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_475 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_474 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_473 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_474 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_473 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_472 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_471 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_472 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_471 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_470 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_469 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_470 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_469 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_468 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_467 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_468 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_467 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_466 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_465 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_466 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_465 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_464 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_463 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_464 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_463 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_462 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_461 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_462 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_461 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_460 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_459 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_460 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_459 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_458 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_457 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_458 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_457 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_456 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_455 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_456 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_455 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_454 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_453 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_454 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_453 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_452 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_451 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_452 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_451 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_6 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X2_Y2_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_6 regulator ( .clk(clk), .rst(rst), .consume(n15), 
        .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_6 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U11 ( .I(i_d[34]), .ZN(n80) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U14 ( .I(i_d[35]), .ZN(n79) );
  OAI22D1 U15 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U16 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U17 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U18 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X2_Y2 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22,
         n1, n2, n3, n5, n6, n7, n8, n9, n23;
  assign n2s = n_v;

  AO21D1 U6 ( .A1(n8), .A2(n_y[1]), .B(n3), .Z(n14) );
  OA21D1 U15 ( .A1(w_y[0]), .A2(n7), .B(n6), .Z(n15) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U4 ( .I(e_b), .Z(n1) );
  NR2D1 U5 ( .A1(n19), .A2(n15), .ZN(n11) );
  INVD1 U7 ( .I(n17), .ZN(n5) );
  INVD1 U8 ( .I(n22), .ZN(n6) );
  INVD1 U9 ( .I(n12), .ZN(w2e) );
  OAI22D1 U10 ( .A1(n9), .A2(n21), .B1(n20), .B2(n5), .ZN(i_ack) );
  NR3D0 U11 ( .A1(w2s), .A2(n_v), .A3(n9), .ZN(n17) );
  IND2D1 U12 ( .A1(w_x[0]), .B1(w_x[1]), .ZN(n22) );
  INR3D0 U13 ( .A1(w_v), .B1(n11), .B2(n_v), .ZN(w2s) );
  NR3D0 U14 ( .A1(n7), .A2(w_y[0]), .A3(n22), .ZN(n19) );
  INVD1 U16 ( .I(w_y[1]), .ZN(n7) );
  ND3D1 U17 ( .A1(n22), .A2(n2), .A3(w_v), .ZN(n12) );
  ND3D1 U18 ( .A1(n12), .A2(n2), .A3(n20), .ZN(n21) );
  INR2D1 U19 ( .A1(w_v), .B1(n10), .ZN(w_b) );
  AOI22D1 U20 ( .A1(n1), .A2(n11), .B1(n_v), .B2(n6), .ZN(n10) );
  OAI21D1 U21 ( .A1(n9), .A2(n21), .B(n12), .ZN(e_v) );
  INVD1 U22 ( .I(n20), .ZN(n23) );
  INVD1 U23 ( .I(n_v), .ZN(n3) );
  ND2D1 U24 ( .A1(n13), .A2(n14), .ZN(s_v) );
  AOI33D1 U25 ( .A1(w_v), .A2(n3), .A3(n15), .B1(n23), .B2(n16), .B3(n17), 
        .ZN(n13) );
  OAI21D1 U26 ( .A1(n5), .A2(n16), .B(n18), .ZN(o_v) );
  AOI33D1 U27 ( .A1(w_v), .A2(n3), .A3(n19), .B1(n_v), .B2(n8), .B3(n_y[1]), 
        .ZN(n18) );
  INVD1 U28 ( .I(i_v), .ZN(n9) );
  IND2D1 U29 ( .A1(i_x[0]), .B1(i_x[1]), .ZN(n20) );
  IND3D1 U30 ( .A1(i_y[0]), .B1(n23), .B2(i_y[1]), .ZN(n16) );
  INVD1 U31 ( .I(n_y[0]), .ZN(n8) );
endmodule


module torus_xbar_1b_216 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_215 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_214 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_213 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_212 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_211 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_210 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_209 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_208 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_207 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_206 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_205 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_204 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_203 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_202 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_201 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_200 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_199 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_198 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_197 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_196 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_195 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_194 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_193 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_192 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_191 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_190 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_189 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_188 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_187 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_186 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_185 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_184 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_183 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_182 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_181 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X2_Y2 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_6 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X2_Y2 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_216 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_215 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_214 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_213 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_212 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_211 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_210 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_209 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_208 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_207 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_206 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_205 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_204 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_203 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_202 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_201 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_200 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_199 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_198 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_197 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_196 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_195 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_194 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_193 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_192 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_191 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_190 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_189 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_188 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_187 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_186 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_185 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_184 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_183 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_182 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_181 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n7), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n8), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_450 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_450 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_449 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_448 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_449 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_448 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_447 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_446 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_447 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_446 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_445 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_444 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_445 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_444 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_443 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_442 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_443 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_442 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_441 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_440 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_441 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_440 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_439 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_438 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_439 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_438 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_437 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_436 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_437 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_436 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_435 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_434 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_435 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_434 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_433 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_432 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_433 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_432 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_431 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_430 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_431 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_430 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_429 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_428 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_429 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_428 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_427 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_426 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_427 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_426 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_425 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_424 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_425 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_424 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_423 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_422 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_423 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_422 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_421 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_420 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_421 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_420 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_419 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_418 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_419 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_418 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_417 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_416 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_417 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_416 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_415 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_414 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_415 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_414 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_413 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_412 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_413 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_412 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_411 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_410 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_411 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_410 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_409 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_408 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_409 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_408 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_407 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_406 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_407 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_406 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_405 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_404 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_405 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_404 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_403 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_402 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_403 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_402 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_401 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_400 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_401 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_400 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_399 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_398 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_399 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_398 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_397 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_396 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_397 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_396 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_395 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_394 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_395 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_394 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_393 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_392 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_393 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_392 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_391 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_390 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_391 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_390 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_389 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_388 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_389 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_388 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_387 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_386 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_387 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_386 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_385 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_384 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_385 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_384 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_383 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_382 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_383 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_382 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_381 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_380 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_381 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_380 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_379 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_378 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_379 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_378 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_377 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_376 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_377 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_376 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_5 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X3_Y2_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_5 regulator ( .clk(clk), .rst(rst), .consume(n15), 
        .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_5 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U11 ( .I(i_d[34]), .ZN(n80) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U14 ( .I(i_d[35]), .ZN(n79) );
  OAI22D1 U15 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U16 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U17 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U18 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X3_Y2 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21,
         n1, n2, n3, n5, n6, n7, n8, n22;
  assign n2s = n_v;

  MAOI22D1 U4 ( .A1(n1), .A2(n10), .B1(n3), .B2(n11), .ZN(n9) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U5 ( .I(e_b), .Z(n1) );
  NR2D1 U6 ( .A1(n19), .A2(n15), .ZN(n10) );
  INVD1 U7 ( .I(n17), .ZN(n5) );
  INVD1 U8 ( .I(n12), .ZN(w2e) );
  OAI22D1 U9 ( .A1(n8), .A2(n21), .B1(n20), .B2(n5), .ZN(i_ack) );
  NR3D0 U10 ( .A1(w2s), .A2(n_v), .A3(n8), .ZN(n17) );
  NR3D0 U11 ( .A1(n6), .A2(w_y[0]), .A3(n11), .ZN(n19) );
  ND2D1 U12 ( .A1(w_x[1]), .A2(w_x[0]), .ZN(n11) );
  INR3D0 U13 ( .A1(w_v), .B1(n10), .B2(n_v), .ZN(w2s) );
  IAO21D1 U14 ( .A1(w_y[0]), .A2(n6), .B(n11), .ZN(n15) );
  INVD1 U15 ( .I(w_y[1]), .ZN(n6) );
  ND3D1 U16 ( .A1(n11), .A2(n2), .A3(w_v), .ZN(n12) );
  ND3D1 U17 ( .A1(n12), .A2(n2), .A3(n20), .ZN(n21) );
  INR2D1 U18 ( .A1(w_v), .B1(n9), .ZN(w_b) );
  OAI21D1 U19 ( .A1(n8), .A2(n21), .B(n12), .ZN(e_v) );
  INVD1 U20 ( .I(n20), .ZN(n22) );
  INVD1 U21 ( .I(n_v), .ZN(n3) );
  ND2D1 U22 ( .A1(n13), .A2(n14), .ZN(s_v) );
  IOA21D1 U23 ( .A1(n7), .A2(n_y[1]), .B(n_v), .ZN(n14) );
  AOI33D1 U24 ( .A1(w_v), .A2(n3), .A3(n15), .B1(n22), .B2(n16), .B3(n17), 
        .ZN(n13) );
  OAI21D1 U25 ( .A1(n5), .A2(n16), .B(n18), .ZN(o_v) );
  AOI33D1 U26 ( .A1(w_v), .A2(n3), .A3(n19), .B1(n_v), .B2(n7), .B3(n_y[1]), 
        .ZN(n18) );
  INVD1 U27 ( .I(i_v), .ZN(n8) );
  ND2D1 U28 ( .A1(i_x[1]), .A2(i_x[0]), .ZN(n20) );
  IND3D1 U29 ( .A1(i_y[0]), .B1(n22), .B2(i_y[1]), .ZN(n16) );
  INVD1 U30 ( .I(n_y[0]), .ZN(n7) );
endmodule


module torus_xbar_1b_180 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_179 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_178 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_177 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_176 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_175 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_174 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_173 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_172 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_171 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_170 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_169 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_168 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_167 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_166 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_165 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_164 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_163 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_162 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_161 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_160 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_159 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_158 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_157 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_156 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_155 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_154 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_153 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_152 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_151 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_150 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_149 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_148 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_147 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_146 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_145 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X3_Y2 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_5 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X3_Y2 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_180 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_179 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_178 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_177 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_176 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_175 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_174 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_173 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_172 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_171 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_170 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_169 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_168 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_167 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_166 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_165 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_164 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_163 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_162 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_161 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_160 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_159 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_158 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_157 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_156 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_155 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_154 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_153 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_152 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_151 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_150 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_149 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_148 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_147 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_146 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_145 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n7), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n8), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_375 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_375 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_374 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_373 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_374 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_373 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_372 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_371 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_372 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_371 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_370 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_369 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_370 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_369 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_368 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_367 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_368 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_367 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_366 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_365 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_366 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_365 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_364 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_363 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_364 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_363 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_362 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_361 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_362 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_361 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_360 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_359 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_360 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_359 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_358 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_357 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_358 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_357 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_356 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_355 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_356 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_355 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_354 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_353 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_354 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_353 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_352 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_351 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_352 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_351 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_350 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_349 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_350 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_349 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_348 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_347 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_348 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_347 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_346 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_345 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_346 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_345 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_344 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_343 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_344 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_343 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_342 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_341 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_342 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_341 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_340 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_339 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_340 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_339 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_338 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_337 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_338 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_337 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_336 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_335 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_336 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_335 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_334 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_333 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_334 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_333 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_332 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_331 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_332 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_331 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_330 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_329 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_330 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_329 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_328 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_327 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_328 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_327 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_326 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_325 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_326 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_325 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_324 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_323 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_324 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_323 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_322 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_321 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_322 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_321 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_320 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_319 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_320 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_319 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_318 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_317 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_318 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_317 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_316 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_315 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_316 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_315 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_314 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_313 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_314 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_313 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_312 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_311 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_312 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_311 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_310 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_309 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_310 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_309 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_308 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_307 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_308 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_307 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_306 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_305 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_306 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_305 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_304 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_303 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_304 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_303 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_302 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_301 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_302 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_301 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_4 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X0_Y3_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_4 regulator ( .clk(clk), .rst(rst), .consume(n15), 
        .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_4 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U11 ( .I(i_d[35]), .ZN(n79) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U14 ( .I(i_d[34]), .ZN(n80) );
  OAI22D1 U15 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U16 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U17 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U18 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X0_Y3 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20,
         n1, n2, n3, n5, n6, n7, n21;
  assign n2s = n_v;

  AO21D1 U6 ( .A1(n_y[0]), .A2(n_y[1]), .B(n3), .Z(n13) );
  AN3XD1 U16 ( .A1(w_y[1]), .A2(w_y[0]), .A3(n10), .Z(n19) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U4 ( .I(e_b), .Z(n1) );
  NR2D1 U5 ( .A1(n19), .A2(n14), .ZN(n9) );
  INVD1 U7 ( .I(n17), .ZN(n5) );
  INVD1 U8 ( .I(n10), .ZN(n6) );
  ND3D1 U9 ( .A1(n11), .A2(n2), .A3(n21), .ZN(n20) );
  INVD1 U10 ( .I(n11), .ZN(w2e) );
  OAI22D1 U11 ( .A1(n7), .A2(n20), .B1(n21), .B2(n5), .ZN(i_ack) );
  NR3D0 U12 ( .A1(w2s), .A2(n_v), .A3(n7), .ZN(n17) );
  AOI21D1 U13 ( .A1(w_y[0]), .A2(w_y[1]), .B(n6), .ZN(n14) );
  NR2D1 U14 ( .A1(w_x[0]), .A2(w_x[1]), .ZN(n10) );
  INR3D0 U15 ( .A1(w_v), .B1(n9), .B2(n_v), .ZN(w2s) );
  ND3D1 U17 ( .A1(n6), .A2(n2), .A3(w_v), .ZN(n11) );
  INR2D1 U18 ( .A1(w_v), .B1(n8), .ZN(w_b) );
  AOI22D1 U19 ( .A1(n1), .A2(n9), .B1(n_v), .B2(n10), .ZN(n8) );
  INVD1 U20 ( .I(n15), .ZN(n21) );
  OAI21D1 U21 ( .A1(n7), .A2(n20), .B(n11), .ZN(e_v) );
  INVD1 U22 ( .I(n_v), .ZN(n3) );
  ND2D1 U23 ( .A1(n12), .A2(n13), .ZN(s_v) );
  AOI33D1 U24 ( .A1(w_v), .A2(n3), .A3(n14), .B1(n15), .B2(n16), .B3(n17), 
        .ZN(n12) );
  OAI21D1 U25 ( .A1(n5), .A2(n16), .B(n18), .ZN(o_v) );
  AOI33D1 U26 ( .A1(w_v), .A2(n3), .A3(n19), .B1(n_y[0]), .B2(n_v), .B3(n_y[1]), .ZN(n18) );
  INVD1 U27 ( .I(i_v), .ZN(n7) );
  NR2D1 U28 ( .A1(i_x[0]), .A2(i_x[1]), .ZN(n15) );
  ND3D1 U29 ( .A1(i_y[0]), .A2(n15), .A3(i_y[1]), .ZN(n16) );
endmodule


module torus_xbar_1b_144 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_143 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_142 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_141 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_140 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_139 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_138 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_137 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_136 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_135 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_134 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_133 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_132 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_131 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_130 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_129 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_128 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_127 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_126 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_125 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_124 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_123 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_122 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_121 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_120 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_119 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_118 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_117 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_116 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_115 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_114 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_113 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_112 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_111 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_110 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_109 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X0_Y3 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_4 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X0_Y3 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_144 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_143 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_142 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_141 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_140 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_139 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_138 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_137 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_136 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_135 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_134 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_133 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_132 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_131 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_130 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_129 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_128 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_127 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_126 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_125 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_124 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_123 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_122 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_121 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_120 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_119 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_118 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_117 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_116 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_115 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_114 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_113 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_112 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_111 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_110 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_109 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n7), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n8), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_300 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_300 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_299 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_298 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_299 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_298 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_297 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_296 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_297 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_296 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_295 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_294 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_295 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_294 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_293 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_292 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_293 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_292 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_291 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_290 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_291 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_290 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_289 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_288 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_289 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_288 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_287 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_286 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_287 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_286 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_285 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_284 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_285 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_284 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_283 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_282 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_283 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_282 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_281 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_280 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_281 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_280 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_279 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_278 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_279 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_278 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_277 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_276 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_277 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_276 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_275 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_274 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_275 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_274 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_273 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_272 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_273 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_272 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_271 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_270 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_271 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_270 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_269 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_268 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_269 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_268 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_267 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_266 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_267 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_266 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_265 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_264 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_265 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_264 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_263 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_262 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_263 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_262 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_261 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_260 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_261 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_260 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_259 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_258 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_259 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_258 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_257 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_256 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_257 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_256 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_255 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_254 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_255 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_254 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_253 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_252 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_253 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_252 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_251 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_250 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_251 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_250 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_249 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_248 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_249 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_248 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_247 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_246 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_247 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_246 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_245 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_244 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_245 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_244 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_243 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_242 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_243 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_242 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_241 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_240 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_241 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_240 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_239 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_238 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_239 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_238 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_237 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_236 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_237 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_236 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_235 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_234 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_235 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_234 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_233 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_232 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_233 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_232 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_231 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_230 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_231 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_230 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_229 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_228 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_229 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_228 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_227 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_226 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_227 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_226 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_3 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X1_Y3_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_3 regulator ( .clk(clk), .rst(rst), .consume(n15), 
        .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_3 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U11 ( .I(i_d[35]), .ZN(n79) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U14 ( .I(i_d[34]), .ZN(n80) );
  OAI22D1 U15 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U16 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U17 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U18 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X1_Y3 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20,
         n1, n2, n3, n5, n6, n7, n21;
  assign n2s = n_v;

  AO21D1 U6 ( .A1(n_y[0]), .A2(n_y[1]), .B(n3), .Z(n12) );
  AN3XD1 U16 ( .A1(w_y[1]), .A2(w_y[0]), .A3(n6), .Z(n17) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U4 ( .I(e_b), .Z(n1) );
  NR2D1 U5 ( .A1(n17), .A2(n13), .ZN(n9) );
  INVD1 U7 ( .I(n15), .ZN(n5) );
  INVD1 U8 ( .I(n20), .ZN(n6) );
  INVD1 U9 ( .I(n10), .ZN(w2e) );
  OAI22D1 U10 ( .A1(n7), .A2(n19), .B1(n18), .B2(n5), .ZN(i_ack) );
  NR3D0 U11 ( .A1(w2s), .A2(n_v), .A3(n7), .ZN(n15) );
  IND2D1 U12 ( .A1(w_x[1]), .B1(w_x[0]), .ZN(n20) );
  INR3D0 U13 ( .A1(w_v), .B1(n9), .B2(n_v), .ZN(w2s) );
  AOI21D1 U14 ( .A1(w_y[0]), .A2(w_y[1]), .B(n20), .ZN(n13) );
  ND3D1 U15 ( .A1(n20), .A2(n2), .A3(w_v), .ZN(n10) );
  ND3D1 U17 ( .A1(n10), .A2(n2), .A3(n18), .ZN(n19) );
  INR2D1 U18 ( .A1(w_v), .B1(n8), .ZN(w_b) );
  AOI22D1 U19 ( .A1(n1), .A2(n9), .B1(n_v), .B2(n6), .ZN(n8) );
  OAI21D1 U20 ( .A1(n7), .A2(n19), .B(n10), .ZN(e_v) );
  INVD1 U21 ( .I(n18), .ZN(n21) );
  INVD1 U22 ( .I(n_v), .ZN(n3) );
  ND2D1 U23 ( .A1(n11), .A2(n12), .ZN(s_v) );
  AOI33D1 U24 ( .A1(w_v), .A2(n3), .A3(n13), .B1(n21), .B2(n14), .B3(n15), 
        .ZN(n11) );
  OAI21D1 U25 ( .A1(n5), .A2(n14), .B(n16), .ZN(o_v) );
  AOI33D1 U26 ( .A1(w_v), .A2(n3), .A3(n17), .B1(n_y[0]), .B2(n_v), .B3(n_y[1]), .ZN(n16) );
  INVD1 U27 ( .I(i_v), .ZN(n7) );
  IND2D1 U28 ( .A1(i_x[1]), .B1(i_x[0]), .ZN(n18) );
  ND3D1 U29 ( .A1(i_y[0]), .A2(n21), .A3(i_y[1]), .ZN(n14) );
endmodule


module torus_xbar_1b_108 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_107 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_106 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_105 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_104 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_103 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_102 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_101 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_100 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_99 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_98 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_97 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_96 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_95 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_94 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_93 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_92 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_91 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_90 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_89 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_88 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_87 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_86 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_85 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_84 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_83 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_82 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_81 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_80 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_79 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_78 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_77 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_76 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_75 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_74 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_73 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X1_Y3 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_3 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X1_Y3 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_108 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_107 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_106 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_105 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_104 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_103 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_102 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_101 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_100 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_99 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_98 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_97 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_96 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_95 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_94 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_93 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_92 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_91 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_90 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_89 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_88 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_87 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_86 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_85 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_84 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_83 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_82 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_81 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_80 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_79 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_78 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_77 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_76 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_75 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_74 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_73 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n7), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n8), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_225 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_225 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_224 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_223 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_224 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_223 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_222 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_221 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_222 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_221 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_220 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_219 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_220 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_219 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_218 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_217 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_218 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_217 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_216 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_215 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_216 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_215 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_214 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_213 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_214 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_213 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_212 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_211 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_212 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_211 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_210 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_209 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_210 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_209 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_208 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_207 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_208 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_207 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_206 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_205 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_206 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_205 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_204 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_203 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_204 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_203 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_202 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_201 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_202 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_201 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_200 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_199 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_200 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_199 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_198 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_197 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_198 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_197 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_196 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_195 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_196 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_195 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_194 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_193 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_194 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_193 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_192 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_191 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_192 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_191 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_190 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_189 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_190 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_189 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_188 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_187 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_188 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_187 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_186 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_185 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_186 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_185 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_184 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_183 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_184 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_183 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_182 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_181 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_182 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_181 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_180 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_179 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_180 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_179 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_178 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_177 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_178 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_177 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_176 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_175 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_176 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_175 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_174 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_173 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_174 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_173 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_172 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_171 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_172 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_171 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_170 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_169 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_170 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_169 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_168 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_167 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_168 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_167 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_166 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_165 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_166 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_165 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_164 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_163 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_164 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_163 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_162 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_161 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_162 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_161 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_160 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_159 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_160 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_159 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_158 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_157 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_158 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_157 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_156 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_155 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_156 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_155 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_154 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_153 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_154 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_153 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_152 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_151 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_152 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_151 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_2 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X2_Y3_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_2 regulator ( .clk(clk), .rst(rst), .consume(n15), 
        .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_2 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U11 ( .I(i_d[34]), .ZN(n80) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U14 ( .I(i_d[35]), .ZN(n79) );
  OAI22D1 U15 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U16 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U17 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U18 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X2_Y3 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20,
         n1, n2, n3, n5, n6, n7, n21;
  assign n2s = n_v;

  AO21D1 U6 ( .A1(n_y[0]), .A2(n_y[1]), .B(n3), .Z(n12) );
  AN3XD1 U16 ( .A1(w_y[1]), .A2(w_y[0]), .A3(n6), .Z(n17) );
  INVD1 U3 ( .I(n1), .ZN(n2) );
  CKBD1 U4 ( .I(e_b), .Z(n1) );
  NR2D1 U5 ( .A1(n17), .A2(n13), .ZN(n9) );
  INVD1 U7 ( .I(n15), .ZN(n5) );
  INVD1 U8 ( .I(n20), .ZN(n6) );
  INVD1 U9 ( .I(n10), .ZN(w2e) );
  OAI22D1 U10 ( .A1(n7), .A2(n19), .B1(n18), .B2(n5), .ZN(i_ack) );
  NR3D0 U11 ( .A1(w2s), .A2(n_v), .A3(n7), .ZN(n15) );
  IND2D1 U12 ( .A1(w_x[0]), .B1(w_x[1]), .ZN(n20) );
  INR3D0 U13 ( .A1(w_v), .B1(n9), .B2(n_v), .ZN(w2s) );
  AOI21D1 U14 ( .A1(w_y[0]), .A2(w_y[1]), .B(n20), .ZN(n13) );
  ND3D1 U15 ( .A1(n20), .A2(n2), .A3(w_v), .ZN(n10) );
  ND3D1 U17 ( .A1(n10), .A2(n2), .A3(n18), .ZN(n19) );
  INR2D1 U18 ( .A1(w_v), .B1(n8), .ZN(w_b) );
  AOI22D1 U19 ( .A1(n1), .A2(n9), .B1(n_v), .B2(n6), .ZN(n8) );
  OAI21D1 U20 ( .A1(n7), .A2(n19), .B(n10), .ZN(e_v) );
  INVD1 U21 ( .I(n18), .ZN(n21) );
  INVD1 U22 ( .I(n_v), .ZN(n3) );
  ND2D1 U23 ( .A1(n11), .A2(n12), .ZN(s_v) );
  AOI33D1 U24 ( .A1(w_v), .A2(n3), .A3(n13), .B1(n21), .B2(n14), .B3(n15), 
        .ZN(n11) );
  OAI21D1 U25 ( .A1(n5), .A2(n14), .B(n16), .ZN(o_v) );
  AOI33D1 U26 ( .A1(w_v), .A2(n3), .A3(n17), .B1(n_y[0]), .B2(n_v), .B3(n_y[1]), .ZN(n16) );
  INVD1 U27 ( .I(i_v), .ZN(n7) );
  IND2D1 U28 ( .A1(i_x[0]), .B1(i_x[1]), .ZN(n18) );
  ND3D1 U29 ( .A1(i_y[0]), .A2(n21), .A3(i_y[1]), .ZN(n14) );
endmodule


module torus_xbar_1b_72 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_71 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_70 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_69 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_68 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_67 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_66 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_65 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_64 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_63 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_62 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_61 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_60 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_59 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_58 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_57 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_56 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_55 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_54 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_53 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_52 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_51 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_50 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_49 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_48 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_47 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_46 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_45 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_44 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_43 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_42 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_41 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_40 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_39 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_38 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_37 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X2_Y3 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_2 s0 ( .clk(clk), .rst(n12), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X2_Y3 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_72 \xbar_gen[0].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_71 \xbar_gen[1].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_70 \xbar_gen[2].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_69 \xbar_gen[3].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_68 \xbar_gen[4].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_67 \xbar_gen[5].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_66 \xbar_gen[6].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_65 \xbar_gen[7].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_64 \xbar_gen[8].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_63 \xbar_gen[9].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_62 \xbar_gen[10].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_61 \xbar_gen[11].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_60 \xbar_gen[12].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_59 \xbar_gen[13].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_58 \xbar_gen[14].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_57 \xbar_gen[15].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_56 \xbar_gen[16].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_55 \xbar_gen[17].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_54 \xbar_gen[18].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_53 \xbar_gen[19].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_52 \xbar_gen[20].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_51 \xbar_gen[21].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_50 \xbar_gen[22].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_49 \xbar_gen[23].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_48 \xbar_gen[24].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_47 \xbar_gen[25].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_46 \xbar_gen[26].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_45 \xbar_gen[27].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_44 \xbar_gen[28].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_43 \xbar_gen[29].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_42 \xbar_gen[30].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_41 \xbar_gen[31].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_40 \xbar_gen[32].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_39 \xbar_gen[33].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_38 \xbar_gen[34].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_37 \xbar_gen[35].xbar_inst  ( .w2e(n13), .w2s(n16), .n2s(n19), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n7), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n9), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n9), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n9), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n9), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n9), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n8), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n9), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n9), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n7), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n9), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n9), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n7), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n7), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n9), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n7), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n9), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n8), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n7), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n7), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n9), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n7), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n9), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n9), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n8), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n7), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n9), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n8), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n9), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n8), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n9), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n7), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n9), .D(n_in_data[31]), .CP(clk), .Q(
        n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n9), .D(n_in_data[30]), .CP(clk), .Q(
        n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n8), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n8), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n9), .D(n_in_data[27]), .CP(clk), .Q(
        n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n9), .D(n_in_data[26]), .CP(clk), .Q(
        n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n7), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n8), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n8), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n8), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n9), .D(n_in_data[21]), .CP(clk), .Q(
        n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n7), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n7), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n8), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n9), .D(n_in_data[17]), .CP(clk), .Q(
        n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n9), .D(n_in_data[16]), .CP(clk), .Q(
        n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n9), .D(n_in_data[15]), .CP(clk), .Q(
        n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n8), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n9), .D(n_in_data[13]), .CP(clk), .Q(
        n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n7), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n8), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n8), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n9), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n7), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n7), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n8), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n7), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n9), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n8), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n7), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n8), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n8), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n9), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n8), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n7), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n8), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n9), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n9), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n8), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n7), .D(e_msg[31]), .E(n1), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n9), .D(e_msg[30]), .E(n1), .CP(clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n7), .D(e_msg[29]), .E(n1), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n7), .D(e_msg[28]), .E(n1), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n7), .D(e_msg[27]), .E(n1), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n8), .D(e_msg[26]), .E(n1), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n7), .D(e_msg[25]), .E(n1), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n9), .D(e_msg[24]), .E(n1), .CP(clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n7), .D(e_msg[23]), .E(n1), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n7), .D(e_msg[22]), .E(n1), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n7), .D(e_msg[21]), .E(n1), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n8), .D(e_msg[20]), .E(n1), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n9), .D(e_msg[19]), .E(n1), .CP(clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n8), .D(e_msg[18]), .E(n1), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n7), .D(e_msg[17]), .E(n1), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n8), .D(e_msg[16]), .E(n1), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n7), .D(e_msg[15]), .E(n1), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n8), .D(e_msg[14]), .E(n1), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n8), .D(e_msg[13]), .E(n1), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n8), .D(e_msg[12]), .E(n1), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n7), .D(e_msg[11]), .E(n1), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n8), .D(e_msg[10]), .E(n1), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n7), .D(e_msg[9]), .E(n1), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n8), .D(e_msg[8]), .E(n1), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n9), .D(e_msg[7]), .E(n1), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n8), .D(e_msg[6]), .E(n1), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n7), .D(e_msg[5]), .E(n1), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n8), .D(e_msg[4]), .E(n1), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n7), .D(e_msg[3]), .E(n1), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n8), .D(e_msg[2]), .E(n1), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n8), .D(e_msg[1]), .E(n1), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n8), .D(e_msg[0]), .E(n1), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n9), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n7), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n8), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n9), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n8), .D(dor_e_v), .E(n1), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n9), .D(e_msg[32]), .E(n1), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n7), .D(e_msg[33]), .E(n1), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n7), .D(e_msg[35]), .E(n1), .CP(clk), 
        .Q(e_out_x[1]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n7), .D(e_msg[34]), .E(n1), .CP(clk), 
        .Q(e_out_x[0]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n13) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U6 ( .I(dor_w2s), .Z(n16) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  INVD1 U9 ( .I(e_b), .ZN(n1) );
  CKBD1 U10 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n19) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n21) );
  INVD1 U13 ( .I(n12), .ZN(n7) );
  INVD1 U14 ( .I(n11), .ZN(n8) );
  INVD1 U15 ( .I(n10), .ZN(n9) );
  IINR4D0 U16 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U17 ( .I(n6), .Z(n12) );
  CKBD1 U18 ( .I(n2), .Z(n10) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  INR4D0 U20 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U21 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U22 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U23 ( .I(rst), .Z(n2) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  TIEL U25 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_150 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_150 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_149 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_148 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_149 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_148 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_147 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_146 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_147 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_146 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_145 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_144 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_145 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_144 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_143 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_142 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_143 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_142 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_141 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_140 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_141 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_140 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_139 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_138 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_139 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_138 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_137 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_136 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_137 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_136 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_135 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_134 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_135 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_134 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_133 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_132 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_133 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_132 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_131 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_130 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_131 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_130 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_129 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_128 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_129 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_128 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_127 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_126 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_127 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_126 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_125 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_124 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_125 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_124 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_123 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_122 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_123 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_122 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_121 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_120 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_121 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_120 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_119 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_118 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_119 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_118 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_117 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_116 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_117 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_116 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_115 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_114 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_115 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_114 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_113 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_112 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_113 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_112 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_111 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_110 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_111 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_110 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_109 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_108 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_109 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_108 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_107 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_106 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_107 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_106 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_105 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_104 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_105 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_104 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_103 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_102 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_103 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_102 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_101 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_100 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_101 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_100 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_99 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_98 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_99 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_98 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_97 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_96 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_97 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_96 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_95 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_94 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_95 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_94 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_93 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_92 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_93 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_92 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_91 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_90 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_91 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_90 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_89 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_88 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_89 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_88 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_87 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_86 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_87 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_86 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_85 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_84 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_85 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_84 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_83 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_82 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_83 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_82 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_81 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_80 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_81 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_80 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_79 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_78 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_79 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_78 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_77 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_76 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_77 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_76 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module token_bucket_SIGMA3_RATE20_1 ( clk, rst, consume, token_available );
  input clk, rst, consume;
  output token_available;
  wire   N9, N10, N11, N12, N13, \add_31/carry[4] , \add_31/carry[3] ,
         \add_31/carry[2] , n1, n2, n3, n4, n5, n6, n7, n8, n9, n13, n15, n16,
         n17, n18;
  wire   [4:0] rate_counter;
  wire   [1:0] number_tokens;

  AO211D1 U10 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(consume), .C(
        n9), .Z(n13) );
  DFKCNQD1 \rate_counter_reg[4]  ( .CN(n8), .D(N13), .CP(clk), .Q(
        rate_counter[4]) );
  DFKCNQD1 \rate_counter_reg[1]  ( .CN(n8), .D(N10), .CP(clk), .Q(
        rate_counter[1]) );
  DFKCNQD1 \rate_counter_reg[0]  ( .CN(n8), .D(N9), .CP(clk), .Q(
        rate_counter[0]) );
  DFKCNQD1 \rate_counter_reg[3]  ( .CN(n8), .D(N12), .CP(clk), .Q(
        rate_counter[3]) );
  DFKCNQD1 \rate_counter_reg[2]  ( .CN(n8), .D(N11), .CP(clk), .Q(
        rate_counter[2]) );
  EDFD1 \number_tokens_reg[0]  ( .D(n1), .E(n16), .CP(clk), .Q(
        number_tokens[0]), .QN(n4) );
  DFD1 \number_tokens_reg[1]  ( .D(n6), .CP(clk), .Q(number_tokens[1]), .QN(n5) );
  NR2D1 U3 ( .A1(n3), .A2(rst), .ZN(n8) );
  ND2D1 U4 ( .A1(n4), .A2(n5), .ZN(token_available) );
  INVD1 U5 ( .I(n9), .ZN(n3) );
  OR2D1 U6 ( .A1(rst), .A2(n4), .Z(n1) );
  IND3D1 U7 ( .A1(rst), .B1(n15), .B2(n13), .ZN(n16) );
  OAI211D1 U8 ( .A1(number_tokens[0]), .A2(number_tokens[1]), .B(n8), .C(
        consume), .ZN(n15) );
  OAI22D1 U9 ( .A1(n18), .A2(n5), .B1(n2), .B2(n17), .ZN(n6) );
  AOI21D1 U11 ( .A1(n3), .A2(number_tokens[0]), .B(rst), .ZN(n17) );
  NR3D0 U12 ( .A1(n2), .A2(number_tokens[0]), .A3(n3), .ZN(n18) );
  INVD1 U13 ( .I(n16), .ZN(n2) );
  ND4D1 U14 ( .A1(rate_counter[4]), .A2(rate_counter[1]), .A3(n7), .A4(
        rate_counter[0]), .ZN(n9) );
  NR2D1 U15 ( .A1(rate_counter[3]), .A2(rate_counter[2]), .ZN(n7) );
  HA1D0 U16 ( .A(rate_counter[2]), .B(\add_31/carry[2] ), .CO(
        \add_31/carry[3] ), .S(N11) );
  HA1D0 U17 ( .A(rate_counter[1]), .B(rate_counter[0]), .CO(\add_31/carry[2] ), 
        .S(N10) );
  HA1D0 U18 ( .A(rate_counter[3]), .B(\add_31/carry[3] ), .CO(
        \add_31/carry[4] ), .S(N12) );
  INVD1 U19 ( .I(rate_counter[0]), .ZN(N9) );
  CKXOR2D0 U20 ( .A1(\add_31/carry[4] ), .A2(rate_counter[4]), .Z(N13) );
endmodule



    module client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X3_Y3_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 ( 
        clk, rst, i_ack, i_v, i_vc, i_x, i_y, i_data, done, o_v, o_x, o_y, 
        o_data );
  output [2:0] i_vc;
  output [1:0] i_x;
  output [1:0] i_y;
  output [31:0] i_data;
  input [1:0] o_x;
  input [1:0] o_y;
  input [31:0] o_data;
  input clk, rst, i_ack, o_v;
  output i_v, done;
  wire   \*Logic0* , token_avail, n13, n14, n17, n18, n21, n22, n23, n24, n25,
         n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39,
         n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53,
         n54, n55, n56, n57, n58, n59, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10,
         n11, n12, n15;
  assign done = \*Logic0* ;

  CKXOR2D1 U16 ( .A1(n15), .A2(o_data[0]), .Z(n21) );
  AN2XD1 U50 ( .A1(o_v), .A2(n17), .Z(n24) );
  token_bucket_SIGMA3_RATE20_1 regulator ( .clk(clk), .rst(rst), .consume(n15), 
        .token_available(token_avail) );
  DFQD1 \i_vc_r_reg[2]  ( .D(n27), .CP(clk), .Q(i_vc[2]) );
  DFQD1 \i_vc_r_reg[1]  ( .D(n26), .CP(clk), .Q(i_vc[1]) );
  DFQD1 \i_d_r_reg[31]  ( .D(n28), .CP(clk), .Q(i_data[31]) );
  DFQD1 \i_d_r_reg[30]  ( .D(n29), .CP(clk), .Q(i_data[30]) );
  DFQD1 \i_d_r_reg[29]  ( .D(n30), .CP(clk), .Q(i_data[29]) );
  DFQD1 \i_d_r_reg[28]  ( .D(n31), .CP(clk), .Q(i_data[28]) );
  DFQD1 \i_d_r_reg[27]  ( .D(n32), .CP(clk), .Q(i_data[27]) );
  DFQD1 \i_d_r_reg[26]  ( .D(n33), .CP(clk), .Q(i_data[26]) );
  DFQD1 \i_d_r_reg[25]  ( .D(n34), .CP(clk), .Q(i_data[25]) );
  DFQD1 \i_d_r_reg[24]  ( .D(n35), .CP(clk), .Q(i_data[24]) );
  DFQD1 \i_d_r_reg[23]  ( .D(n36), .CP(clk), .Q(i_data[23]) );
  DFQD1 \i_d_r_reg[22]  ( .D(n37), .CP(clk), .Q(i_data[22]) );
  DFQD1 \i_d_r_reg[21]  ( .D(n38), .CP(clk), .Q(i_data[21]) );
  DFQD1 \i_d_r_reg[20]  ( .D(n39), .CP(clk), .Q(i_data[20]) );
  DFQD1 \i_d_r_reg[19]  ( .D(n40), .CP(clk), .Q(i_data[19]) );
  DFQD1 \i_d_r_reg[18]  ( .D(n41), .CP(clk), .Q(i_data[18]) );
  DFQD1 \i_d_r_reg[17]  ( .D(n42), .CP(clk), .Q(i_data[17]) );
  DFQD1 \i_d_r_reg[16]  ( .D(n43), .CP(clk), .Q(i_data[16]) );
  DFQD1 \i_d_r_reg[15]  ( .D(n44), .CP(clk), .Q(i_data[15]) );
  DFQD1 \i_d_r_reg[14]  ( .D(n45), .CP(clk), .Q(i_data[14]) );
  DFQD1 \i_d_r_reg[13]  ( .D(n46), .CP(clk), .Q(i_data[13]) );
  DFQD1 \i_d_r_reg[12]  ( .D(n47), .CP(clk), .Q(i_data[12]) );
  DFQD1 \i_d_r_reg[11]  ( .D(n48), .CP(clk), .Q(i_data[11]) );
  DFQD1 \i_d_r_reg[10]  ( .D(n49), .CP(clk), .Q(i_data[10]) );
  DFQD1 \i_d_r_reg[9]  ( .D(n50), .CP(clk), .Q(i_data[9]) );
  DFQD1 \i_d_r_reg[8]  ( .D(n51), .CP(clk), .Q(i_data[8]) );
  DFQD1 \i_d_r_reg[7]  ( .D(n52), .CP(clk), .Q(i_data[7]) );
  DFQD1 \i_d_r_reg[6]  ( .D(n53), .CP(clk), .Q(i_data[6]) );
  DFQD1 \i_d_r_reg[5]  ( .D(n54), .CP(clk), .Q(i_data[5]) );
  DFQD1 \i_d_r_reg[4]  ( .D(n55), .CP(clk), .Q(i_data[4]) );
  DFQD1 \i_d_r_reg[3]  ( .D(n56), .CP(clk), .Q(i_data[3]) );
  DFQD1 \i_d_r_reg[2]  ( .D(n57), .CP(clk), .Q(i_data[2]) );
  DFQD1 \i_d_r_reg[1]  ( .D(n58), .CP(clk), .Q(i_data[1]) );
  DFQD1 \i_d_r_reg[0]  ( .D(n59), .CP(clk), .Q(i_data[0]) );
  EDFKCNQD1 \i_y_r_reg[0]  ( .CN(n6), .D(n3), .E(n25), .CP(clk), .Q(i_y[0]) );
  EDFKCNQD1 \i_y_r_reg[1]  ( .CN(n6), .D(n1), .E(n25), .CP(clk), .Q(i_y[1]) );
  EDFKCNQD1 \i_x_r_reg[1]  ( .CN(n6), .D(n4), .E(n25), .CP(clk), .Q(i_x[1]) );
  EDFKCNQD1 \i_x_r_reg[0]  ( .CN(n6), .D(n18), .E(n25), .CP(clk), .Q(i_x[0])
         );
  DFKCSND1 waiting_for_ack_reg ( .D(token_avail), .SN(n25), .CN(n6), .CP(clk), 
        .Q(i_v) );
  EDFKCNQD1 \i_vc_r_reg[0]  ( .CN(n6), .D(n21), .E(n25), .CP(clk), .Q(i_vc[0])
         );
  CKBD1 U3 ( .I(n23), .Z(n12) );
  CKBD1 U4 ( .I(n23), .Z(n11) );
  CKBD1 U5 ( .I(n23), .Z(n10) );
  INVD1 U6 ( .I(n14), .ZN(n15) );
  NR2D1 U7 ( .A1(rst), .A2(n17), .ZN(n23) );
  ND2D1 U8 ( .A1(token_avail), .A2(n25), .ZN(n14) );
  INR2D1 U9 ( .A1(n25), .B1(rst), .ZN(n17) );
  CKBD1 U10 ( .I(n24), .Z(n7) );
  CKBD1 U11 ( .I(n24), .Z(n8) );
  CKBD1 U12 ( .I(n24), .Z(n9) );
  OAI21D1 U13 ( .A1(n15), .A2(n21), .B(n17), .ZN(n22) );
  NR2D1 U14 ( .A1(n25), .A2(rst), .ZN(n13) );
  IND2D1 U15 ( .A1(i_ack), .B1(i_v), .ZN(n25) );
  CKXOR2D1 U17 ( .A1(o_y[1]), .A2(n2), .Z(n1) );
  AN2XD1 U18 ( .A1(n15), .A2(o_y[0]), .Z(n2) );
  AO22D0 U19 ( .A1(i_data[1]), .A2(n12), .B1(o_data[1]), .B2(n7), .Z(n58) );
  AO22D0 U20 ( .A1(i_data[2]), .A2(n12), .B1(o_data[2]), .B2(n7), .Z(n57) );
  AO22D0 U21 ( .A1(i_data[3]), .A2(n12), .B1(o_data[3]), .B2(n7), .Z(n56) );
  AO22D0 U22 ( .A1(i_data[4]), .A2(n12), .B1(o_data[4]), .B2(n7), .Z(n55) );
  AO22D0 U23 ( .A1(i_data[5]), .A2(n12), .B1(o_data[5]), .B2(n7), .Z(n54) );
  AO22D0 U24 ( .A1(i_data[6]), .A2(n12), .B1(o_data[6]), .B2(n7), .Z(n53) );
  AO22D0 U25 ( .A1(i_data[7]), .A2(n12), .B1(o_data[7]), .B2(n7), .Z(n52) );
  AO22D0 U26 ( .A1(i_data[8]), .A2(n11), .B1(o_data[8]), .B2(n7), .Z(n51) );
  AO22D0 U27 ( .A1(i_data[9]), .A2(n11), .B1(o_data[9]), .B2(n7), .Z(n50) );
  AO22D0 U28 ( .A1(i_data[10]), .A2(n11), .B1(o_data[10]), .B2(n7), .Z(n49) );
  AO22D0 U29 ( .A1(i_data[11]), .A2(n11), .B1(o_data[11]), .B2(n7), .Z(n48) );
  AO22D0 U30 ( .A1(i_data[12]), .A2(n11), .B1(o_data[12]), .B2(n7), .Z(n47) );
  AO22D0 U31 ( .A1(i_data[13]), .A2(n11), .B1(o_data[13]), .B2(n8), .Z(n46) );
  AO22D0 U32 ( .A1(i_data[14]), .A2(n11), .B1(o_data[14]), .B2(n8), .Z(n45) );
  AO22D0 U33 ( .A1(i_data[15]), .A2(n11), .B1(o_data[15]), .B2(n8), .Z(n44) );
  AO22D0 U34 ( .A1(i_data[16]), .A2(n11), .B1(o_data[16]), .B2(n8), .Z(n43) );
  AO22D0 U35 ( .A1(i_data[17]), .A2(n11), .B1(o_data[17]), .B2(n8), .Z(n42) );
  AO22D0 U36 ( .A1(i_data[18]), .A2(n11), .B1(o_data[18]), .B2(n8), .Z(n41) );
  AO22D0 U37 ( .A1(i_data[19]), .A2(n11), .B1(o_data[19]), .B2(n8), .Z(n40) );
  AO22D0 U38 ( .A1(i_data[20]), .A2(n10), .B1(o_data[20]), .B2(n8), .Z(n39) );
  AO22D0 U39 ( .A1(i_data[21]), .A2(n10), .B1(o_data[21]), .B2(n8), .Z(n38) );
  AO22D0 U40 ( .A1(i_data[22]), .A2(n10), .B1(o_data[22]), .B2(n8), .Z(n37) );
  AO22D0 U41 ( .A1(i_data[23]), .A2(n10), .B1(o_data[23]), .B2(n8), .Z(n36) );
  AO22D0 U42 ( .A1(i_data[24]), .A2(n10), .B1(o_data[24]), .B2(n8), .Z(n35) );
  AO22D0 U43 ( .A1(i_data[25]), .A2(n10), .B1(o_data[25]), .B2(n8), .Z(n34) );
  AO22D0 U44 ( .A1(i_data[26]), .A2(n10), .B1(o_data[26]), .B2(n9), .Z(n33) );
  AO22D0 U45 ( .A1(i_data[27]), .A2(n10), .B1(o_data[27]), .B2(n9), .Z(n32) );
  AO22D0 U46 ( .A1(i_data[28]), .A2(n10), .B1(o_data[28]), .B2(n9), .Z(n31) );
  AO22D0 U47 ( .A1(i_data[29]), .A2(n10), .B1(o_data[29]), .B2(n9), .Z(n30) );
  AO22D0 U48 ( .A1(i_data[30]), .A2(n10), .B1(o_data[30]), .B2(n9), .Z(n29) );
  AO22D0 U49 ( .A1(i_data[31]), .A2(n10), .B1(o_data[31]), .B2(n9), .Z(n28) );
  AO22D0 U51 ( .A1(o_data[0]), .A2(n7), .B1(i_data[0]), .B2(n12), .Z(n59) );
  XNR2D1 U52 ( .A1(n14), .A2(o_y[0]), .ZN(n3) );
  IOA21D1 U53 ( .A1(i_vc[1]), .A2(n13), .B(n22), .ZN(n26) );
  IOA21D1 U54 ( .A1(i_vc[2]), .A2(n13), .B(n22), .ZN(n27) );
  CKXOR2D1 U55 ( .A1(o_x[1]), .A2(n5), .Z(n4) );
  AN2XD1 U56 ( .A1(i_ack), .A2(o_v), .Z(n5) );
  XOR3D1 U57 ( .A1(o_x[0]), .A2(o_v), .A3(i_ack), .Z(n18) );
  INVD1 U58 ( .I(rst), .ZN(n6) );
  TIEL U59 ( .ZN(\*Logic0* ) );
endmodule


module shadow_reg_combi_D_W36_1 ( clk, rst, i_v, i_d, o_b, i_b, o_v, o_d );
  input [35:0] i_d;
  output [35:0] o_d;
  input clk, rst, i_v, o_b;
  output i_b, o_v;
  wire   n120, n1, n38, n39, n41, n42, n43, n45, n46, n47, n48, n49, n50, n51,
         n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65,
         n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79,
         n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93,
         n94, n95, n96, n97, n98, n99, n100, n101, n102, n103, n104, n105,
         n106, n107, n108, n109, n110, n111, n112, n113, n114, n115, n116,
         n117, n118, n119;

  EDFD1 \s_d_r_reg[31]  ( .D(i_d[31]), .E(n41), .CP(clk), .QN(n115) );
  EDFD1 \s_d_r_reg[30]  ( .D(i_d[30]), .E(n41), .CP(clk), .QN(n114) );
  EDFD1 \s_d_r_reg[29]  ( .D(i_d[29]), .E(n41), .CP(clk), .QN(n113) );
  EDFD1 \s_d_r_reg[28]  ( .D(i_d[28]), .E(n41), .CP(clk), .QN(n112) );
  EDFD1 \s_d_r_reg[27]  ( .D(i_d[27]), .E(n41), .CP(clk), .QN(n111) );
  EDFD1 \s_d_r_reg[26]  ( .D(i_d[26]), .E(n41), .CP(clk), .QN(n110) );
  EDFD1 \s_d_r_reg[25]  ( .D(i_d[25]), .E(n41), .CP(clk), .QN(n109) );
  EDFD1 \s_d_r_reg[24]  ( .D(i_d[24]), .E(n41), .CP(clk), .QN(n108) );
  EDFD1 \s_d_r_reg[23]  ( .D(i_d[23]), .E(n42), .CP(clk), .QN(n107) );
  EDFD1 \s_d_r_reg[22]  ( .D(i_d[22]), .E(n42), .CP(clk), .QN(n106) );
  EDFD1 \s_d_r_reg[21]  ( .D(i_d[21]), .E(n42), .CP(clk), .QN(n105) );
  EDFD1 \s_d_r_reg[20]  ( .D(i_d[20]), .E(n42), .CP(clk), .QN(n104) );
  EDFD1 \s_d_r_reg[19]  ( .D(i_d[19]), .E(n42), .CP(clk), .QN(n103) );
  EDFD1 \s_d_r_reg[18]  ( .D(i_d[18]), .E(n42), .CP(clk), .QN(n102) );
  EDFD1 \s_d_r_reg[17]  ( .D(i_d[17]), .E(n42), .CP(clk), .QN(n101) );
  EDFD1 \s_d_r_reg[16]  ( .D(i_d[16]), .E(n42), .CP(clk), .QN(n100) );
  EDFD1 \s_d_r_reg[15]  ( .D(i_d[15]), .E(n42), .CP(clk), .QN(n99) );
  EDFD1 \s_d_r_reg[14]  ( .D(i_d[14]), .E(n42), .CP(clk), .QN(n98) );
  EDFD1 \s_d_r_reg[13]  ( .D(i_d[13]), .E(n42), .CP(clk), .QN(n97) );
  EDFD1 \s_d_r_reg[12]  ( .D(i_d[12]), .E(n42), .CP(clk), .QN(n96) );
  EDFD1 \s_d_r_reg[11]  ( .D(i_d[11]), .E(n43), .CP(clk), .QN(n95) );
  EDFD1 \s_d_r_reg[10]  ( .D(i_d[10]), .E(n43), .CP(clk), .QN(n94) );
  EDFD1 \s_d_r_reg[9]  ( .D(i_d[9]), .E(n43), .CP(clk), .QN(n93) );
  EDFD1 \s_d_r_reg[8]  ( .D(i_d[8]), .E(n43), .CP(clk), .QN(n92) );
  EDFD1 \s_d_r_reg[7]  ( .D(i_d[7]), .E(n43), .CP(clk), .QN(n91) );
  EDFD1 \s_d_r_reg[6]  ( .D(i_d[6]), .E(n43), .CP(clk), .QN(n90) );
  EDFD1 \s_d_r_reg[5]  ( .D(i_d[5]), .E(n43), .CP(clk), .QN(n89) );
  EDFD1 \s_d_r_reg[4]  ( .D(i_d[4]), .E(n43), .CP(clk), .QN(n88) );
  EDFD1 \s_d_r_reg[3]  ( .D(i_d[3]), .E(n43), .CP(clk), .QN(n87) );
  EDFD1 \s_d_r_reg[2]  ( .D(i_d[2]), .E(n43), .CP(clk), .QN(n86) );
  EDFD1 \s_d_r_reg[1]  ( .D(i_d[1]), .E(n43), .CP(clk), .QN(n85) );
  EDFD1 \s_d_r_reg[0]  ( .D(i_d[0]), .E(n43), .CP(clk), .QN(n84) );
  EDFKCND1 s_v_r_reg ( .CN(n1), .D(i_v), .E(n45), .CP(clk), .QN(n83) );
  EDFD1 \s_d_r_reg[33]  ( .D(i_d[33]), .E(n41), .CP(clk), .QN(n117) );
  EDFD1 \s_d_r_reg[32]  ( .D(i_d[32]), .E(n41), .CP(clk), .QN(n116) );
  EDFD1 \s_d_r_reg[35]  ( .D(i_d[35]), .E(n41), .CP(clk), .QN(n119) );
  EDFD1 \s_d_r_reg[34]  ( .D(i_d[34]), .E(n41), .CP(clk), .QN(n118) );
  DFKCNQD1 o_b_r_reg ( .CN(o_b), .D(n39), .CP(clk), .Q(n120) );
  CKBD1 U3 ( .I(n38), .Z(n43) );
  CKBD1 U4 ( .I(n38), .Z(n42) );
  CKBD1 U5 ( .I(n38), .Z(n41) );
  AN2XD1 U6 ( .A1(n39), .A2(o_b), .Z(n1) );
  INVD1 U7 ( .I(rst), .ZN(n39) );
  INVD1 U8 ( .I(n45), .ZN(i_b) );
  AN2XD1 U9 ( .A1(n1), .A2(n45), .Z(n38) );
  OAI22D1 U10 ( .A1(n45), .A2(n118), .B1(i_b), .B2(n80), .ZN(o_d[34]) );
  INVD1 U11 ( .I(i_d[34]), .ZN(n80) );
  INVD1 U12 ( .I(n120), .ZN(n45) );
  OAI22D1 U13 ( .A1(n45), .A2(n119), .B1(i_b), .B2(n79), .ZN(o_d[35]) );
  INVD1 U14 ( .I(i_d[35]), .ZN(n79) );
  OAI22D1 U15 ( .A1(n45), .A2(n116), .B1(i_b), .B2(n82), .ZN(o_d[32]) );
  INVD1 U16 ( .I(i_d[32]), .ZN(n82) );
  OAI22D1 U17 ( .A1(n45), .A2(n117), .B1(i_b), .B2(n81), .ZN(o_d[33]) );
  INVD1 U18 ( .I(i_d[33]), .ZN(n81) );
  OAI22D1 U19 ( .A1(n45), .A2(n83), .B1(i_b), .B2(n78), .ZN(o_v) );
  INVD1 U20 ( .I(i_v), .ZN(n78) );
  OAI22D1 U21 ( .A1(n45), .A2(n84), .B1(i_b), .B2(n77), .ZN(o_d[0]) );
  INVD1 U22 ( .I(i_d[0]), .ZN(n77) );
  OAI22D1 U23 ( .A1(n45), .A2(n85), .B1(i_b), .B2(n76), .ZN(o_d[1]) );
  INVD1 U24 ( .I(i_d[1]), .ZN(n76) );
  OAI22D1 U25 ( .A1(n45), .A2(n86), .B1(i_b), .B2(n75), .ZN(o_d[2]) );
  INVD1 U26 ( .I(i_d[2]), .ZN(n75) );
  OAI22D1 U27 ( .A1(n45), .A2(n87), .B1(i_b), .B2(n74), .ZN(o_d[3]) );
  INVD1 U28 ( .I(i_d[3]), .ZN(n74) );
  OAI22D1 U29 ( .A1(n45), .A2(n88), .B1(i_b), .B2(n73), .ZN(o_d[4]) );
  INVD1 U30 ( .I(i_d[4]), .ZN(n73) );
  OAI22D1 U31 ( .A1(n45), .A2(n89), .B1(i_b), .B2(n72), .ZN(o_d[5]) );
  INVD1 U32 ( .I(i_d[5]), .ZN(n72) );
  OAI22D1 U33 ( .A1(n45), .A2(n90), .B1(i_b), .B2(n71), .ZN(o_d[6]) );
  INVD1 U34 ( .I(i_d[6]), .ZN(n71) );
  OAI22D1 U35 ( .A1(n45), .A2(n91), .B1(i_b), .B2(n70), .ZN(o_d[7]) );
  INVD1 U36 ( .I(i_d[7]), .ZN(n70) );
  OAI22D1 U37 ( .A1(n45), .A2(n92), .B1(i_b), .B2(n69), .ZN(o_d[8]) );
  INVD1 U38 ( .I(i_d[8]), .ZN(n69) );
  OAI22D1 U39 ( .A1(n45), .A2(n93), .B1(i_b), .B2(n68), .ZN(o_d[9]) );
  INVD1 U40 ( .I(i_d[9]), .ZN(n68) );
  OAI22D1 U41 ( .A1(n45), .A2(n94), .B1(i_b), .B2(n67), .ZN(o_d[10]) );
  INVD1 U42 ( .I(i_d[10]), .ZN(n67) );
  OAI22D1 U43 ( .A1(n45), .A2(n95), .B1(i_b), .B2(n66), .ZN(o_d[11]) );
  INVD1 U44 ( .I(i_d[11]), .ZN(n66) );
  OAI22D1 U45 ( .A1(n45), .A2(n96), .B1(i_b), .B2(n65), .ZN(o_d[12]) );
  INVD1 U46 ( .I(i_d[12]), .ZN(n65) );
  OAI22D1 U47 ( .A1(n45), .A2(n97), .B1(i_b), .B2(n64), .ZN(o_d[13]) );
  INVD1 U48 ( .I(i_d[13]), .ZN(n64) );
  OAI22D1 U49 ( .A1(n45), .A2(n98), .B1(i_b), .B2(n63), .ZN(o_d[14]) );
  INVD1 U50 ( .I(i_d[14]), .ZN(n63) );
  OAI22D1 U51 ( .A1(n45), .A2(n99), .B1(i_b), .B2(n62), .ZN(o_d[15]) );
  INVD1 U52 ( .I(i_d[15]), .ZN(n62) );
  OAI22D1 U53 ( .A1(n45), .A2(n100), .B1(i_b), .B2(n61), .ZN(o_d[16]) );
  INVD1 U54 ( .I(i_d[16]), .ZN(n61) );
  OAI22D1 U55 ( .A1(n45), .A2(n101), .B1(i_b), .B2(n60), .ZN(o_d[17]) );
  INVD1 U56 ( .I(i_d[17]), .ZN(n60) );
  OAI22D1 U57 ( .A1(n45), .A2(n102), .B1(i_b), .B2(n59), .ZN(o_d[18]) );
  INVD1 U58 ( .I(i_d[18]), .ZN(n59) );
  OAI22D1 U59 ( .A1(n45), .A2(n103), .B1(i_b), .B2(n58), .ZN(o_d[19]) );
  INVD1 U60 ( .I(i_d[19]), .ZN(n58) );
  OAI22D1 U61 ( .A1(n45), .A2(n104), .B1(i_b), .B2(n57), .ZN(o_d[20]) );
  INVD1 U62 ( .I(i_d[20]), .ZN(n57) );
  OAI22D1 U63 ( .A1(n45), .A2(n105), .B1(i_b), .B2(n56), .ZN(o_d[21]) );
  INVD1 U64 ( .I(i_d[21]), .ZN(n56) );
  OAI22D1 U65 ( .A1(n45), .A2(n106), .B1(i_b), .B2(n55), .ZN(o_d[22]) );
  INVD1 U66 ( .I(i_d[22]), .ZN(n55) );
  OAI22D1 U67 ( .A1(n45), .A2(n107), .B1(i_b), .B2(n54), .ZN(o_d[23]) );
  INVD1 U68 ( .I(i_d[23]), .ZN(n54) );
  OAI22D1 U69 ( .A1(n45), .A2(n108), .B1(i_b), .B2(n53), .ZN(o_d[24]) );
  INVD1 U70 ( .I(i_d[24]), .ZN(n53) );
  OAI22D1 U71 ( .A1(n45), .A2(n109), .B1(i_b), .B2(n52), .ZN(o_d[25]) );
  INVD1 U72 ( .I(i_d[25]), .ZN(n52) );
  OAI22D1 U73 ( .A1(n45), .A2(n110), .B1(i_b), .B2(n51), .ZN(o_d[26]) );
  INVD1 U74 ( .I(i_d[26]), .ZN(n51) );
  OAI22D1 U75 ( .A1(n45), .A2(n111), .B1(i_b), .B2(n50), .ZN(o_d[27]) );
  INVD1 U76 ( .I(i_d[27]), .ZN(n50) );
  OAI22D1 U77 ( .A1(n45), .A2(n112), .B1(i_b), .B2(n49), .ZN(o_d[28]) );
  INVD1 U78 ( .I(i_d[28]), .ZN(n49) );
  OAI22D1 U79 ( .A1(n45), .A2(n113), .B1(i_b), .B2(n48), .ZN(o_d[29]) );
  INVD1 U80 ( .I(i_d[29]), .ZN(n48) );
  OAI22D1 U81 ( .A1(n45), .A2(n114), .B1(i_b), .B2(n47), .ZN(o_d[30]) );
  INVD1 U82 ( .I(i_d[30]), .ZN(n47) );
  OAI22D1 U83 ( .A1(n45), .A2(n115), .B1(i_b), .B2(n46), .ZN(o_d[31]) );
  INVD1 U84 ( .I(i_d[31]), .ZN(n46) );
endmodule


module DOR_BP_X_W2_Y_W2_X3_Y3 ( n_x, n_y, n_v, w_x, w_y, w_v, i_x, i_y, i_v, 
        e_b, w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack );
  input [1:0] n_x;
  input [1:0] n_y;
  input [1:0] w_x;
  input [1:0] w_y;
  input [1:0] i_x;
  input [1:0] i_y;
  input n_v, w_v, i_v, e_b;
  output w_b, e_v, s_v, o_v, n2s, w2s, w2e, i_ack;
  wire   n_v, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20,
         n2, n3, n5, n6, n7, n21;
  assign n2s = n_v;

  MAOI22D1 U4 ( .A1(n_v), .A2(n6), .B1(n2), .B2(n9), .ZN(n8) );
  AO21D1 U6 ( .A1(n_y[0]), .A2(n_y[1]), .B(n3), .Z(n12) );
  OR2D1 U14 ( .A1(n13), .A2(n17), .Z(n9) );
  AN3XD1 U15 ( .A1(n6), .A2(w_y[1]), .A3(w_y[0]), .Z(n17) );
  AN3XD1 U3 ( .A1(n9), .A2(n3), .A3(w_v), .Z(w2s) );
  INVD1 U5 ( .I(n15), .ZN(n5) );
  INVD1 U7 ( .I(n20), .ZN(n6) );
  INVD1 U8 ( .I(e_b), .ZN(n2) );
  INVD1 U9 ( .I(n10), .ZN(w2e) );
  OAI22D1 U10 ( .A1(n7), .A2(n19), .B1(n18), .B2(n5), .ZN(i_ack) );
  NR3D0 U11 ( .A1(w2s), .A2(n_v), .A3(n7), .ZN(n15) );
  ND2D1 U12 ( .A1(w_x[1]), .A2(w_x[0]), .ZN(n20) );
  AOI21D1 U13 ( .A1(w_y[0]), .A2(w_y[1]), .B(n20), .ZN(n13) );
  ND3D1 U16 ( .A1(n20), .A2(n2), .A3(w_v), .ZN(n10) );
  ND3D1 U17 ( .A1(n10), .A2(n2), .A3(n18), .ZN(n19) );
  INR2D1 U18 ( .A1(w_v), .B1(n8), .ZN(w_b) );
  OAI21D1 U19 ( .A1(n7), .A2(n19), .B(n10), .ZN(e_v) );
  INVD1 U20 ( .I(n18), .ZN(n21) );
  INVD1 U21 ( .I(n_v), .ZN(n3) );
  ND2D1 U22 ( .A1(n11), .A2(n12), .ZN(s_v) );
  AOI33D1 U23 ( .A1(w_v), .A2(n3), .A3(n13), .B1(n21), .B2(n14), .B3(n15), 
        .ZN(n11) );
  OAI21D1 U24 ( .A1(n5), .A2(n14), .B(n16), .ZN(o_v) );
  AOI33D1 U25 ( .A1(w_v), .A2(n3), .A3(n17), .B1(n_y[0]), .B2(n_v), .B3(n_y[1]), .ZN(n16) );
  INVD1 U26 ( .I(i_v), .ZN(n7) );
  ND2D1 U27 ( .A1(i_x[1]), .A2(i_x[0]), .ZN(n18) );
  ND3D1 U28 ( .A1(i_y[0]), .A2(n21), .A3(i_y[1]), .ZN(n14) );
endmodule


module torus_xbar_1b_36 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_35 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_34 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_33 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_32 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_31 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_30 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_29 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_28 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_27 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_26 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_25 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_24 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_23 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_22 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_21 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_20 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_19 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_18 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_17 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_16 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_15 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_14 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_13 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_12 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_11 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_10 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_9 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_8 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_7 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_6 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_5 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_4 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_3 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_2 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_xbar_1b_1 ( w2e, w2s, n2s, p2s, p2e, ni, wi, pi, so, eo );
  input w2e, w2s, n2s, p2s, p2e, ni, wi, pi;
  output so, eo;
  wire   n1, n3;

  MOAI22D1 U1 ( .A1(n2s), .A2(n3), .B1(ni), .B2(n2s), .ZN(so) );
  MAOI22D1 U2 ( .A1(wi), .A2(w2s), .B1(n1), .B2(w2s), .ZN(n3) );
  MOAI22D1 U3 ( .A1(w2e), .A2(n1), .B1(wi), .B2(w2e), .ZN(eo) );
  INVD1 U4 ( .I(pi), .ZN(n1) );
endmodule


module torus_switch_bp_X_W2_Y_W2_D_W32_X3_Y3 ( clk, rst, n_in_v, n_in_x, 
        n_in_y, n_in_data, w_in_v, w_in_x, w_in_y, w_in_data, i_v, i_x, i_y, 
        i_data, e_b, w_b, i_ack, o_v, s_out_v, s_out_x, s_out_y, s_out_data, 
        e_out_v, e_out_x, e_out_y, e_out_data, done );
  input [1:0] n_in_x;
  input [1:0] n_in_y;
  input [31:0] n_in_data;
  input [1:0] w_in_x;
  input [1:0] w_in_y;
  input [31:0] w_in_data;
  input [1:0] i_x;
  input [1:0] i_y;
  input [31:0] i_data;
  output [1:0] s_out_x;
  output [1:0] s_out_y;
  output [31:0] s_out_data;
  output [1:0] e_out_x;
  output [1:0] e_out_y;
  output [31:0] e_out_data;
  input clk, rst, n_in_v, w_in_v, i_v, e_b;
  output w_b, i_ack, o_v, s_out_v, e_out_v, done;
  wire   \*Logic0* , n_in_v_reg, w_v_c, w_b_c, dor_e_v, dor_s_v, dor_o_v,
         dor_n2s, dor_w2s, dor_w2e, n3, n4, n5, n1, n2, n6, n7, n8, n9, n10,
         n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22;
  wire   [1:0] n_in_x_reg;
  wire   [1:0] n_in_y_reg;
  wire   [31:0] n_in_data_reg;
  wire   [35:0] w_d_c;
  wire   [35:0] s_msg;
  wire   [35:0] e_msg;

  shadow_reg_combi_D_W36_1 s0 ( .clk(clk), .rst(n13), .i_v(w_in_v), .i_d({
        w_in_x, w_in_y, w_in_data}), .o_b(w_b_c), .i_b(w_b), .o_v(w_v_c), 
        .o_d(w_d_c) );
  DOR_BP_X_W2_Y_W2_X3_Y3 dor_bp_inst ( .n_x(n_in_x_reg), .n_y(n_in_y_reg), 
        .n_v(n_in_v_reg), .w_x(w_d_c[35:34]), .w_y(w_d_c[33:32]), .w_v(w_v_c), 
        .i_x(i_x), .i_y(i_y), .i_v(i_v), .e_b(e_b), .w_b(w_b_c), .e_v(dor_e_v), 
        .s_v(dor_s_v), .o_v(dor_o_v), .n2s(dor_n2s), .w2s(dor_w2s), .w2e(
        dor_w2e), .i_ack(i_ack) );
  torus_xbar_1b_36 \xbar_gen[0].xbar_inst  ( .w2e(n16), .w2s(n19), .n2s(n22), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[0]), .wi(
        w_d_c[0]), .pi(i_data[0]), .so(s_msg[0]), .eo(e_msg[0]) );
  torus_xbar_1b_35 \xbar_gen[1].xbar_inst  ( .w2e(n16), .w2s(n19), .n2s(n22), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[1]), .wi(
        w_d_c[1]), .pi(i_data[1]), .so(s_msg[1]), .eo(e_msg[1]) );
  torus_xbar_1b_34 \xbar_gen[2].xbar_inst  ( .w2e(n16), .w2s(n19), .n2s(n22), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[2]), .wi(
        w_d_c[2]), .pi(i_data[2]), .so(s_msg[2]), .eo(e_msg[2]) );
  torus_xbar_1b_33 \xbar_gen[3].xbar_inst  ( .w2e(n16), .w2s(n19), .n2s(n22), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[3]), .wi(
        w_d_c[3]), .pi(i_data[3]), .so(s_msg[3]), .eo(e_msg[3]) );
  torus_xbar_1b_32 \xbar_gen[4].xbar_inst  ( .w2e(n16), .w2s(n19), .n2s(n22), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[4]), .wi(
        w_d_c[4]), .pi(i_data[4]), .so(s_msg[4]), .eo(e_msg[4]) );
  torus_xbar_1b_31 \xbar_gen[5].xbar_inst  ( .w2e(n16), .w2s(n19), .n2s(n22), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[5]), .wi(
        w_d_c[5]), .pi(i_data[5]), .so(s_msg[5]), .eo(e_msg[5]) );
  torus_xbar_1b_30 \xbar_gen[6].xbar_inst  ( .w2e(n16), .w2s(n19), .n2s(n22), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[6]), .wi(
        w_d_c[6]), .pi(i_data[6]), .so(s_msg[6]), .eo(e_msg[6]) );
  torus_xbar_1b_29 \xbar_gen[7].xbar_inst  ( .w2e(n16), .w2s(n19), .n2s(n22), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[7]), .wi(
        w_d_c[7]), .pi(i_data[7]), .so(s_msg[7]), .eo(e_msg[7]) );
  torus_xbar_1b_28 \xbar_gen[8].xbar_inst  ( .w2e(n16), .w2s(n19), .n2s(n22), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[8]), .wi(
        w_d_c[8]), .pi(i_data[8]), .so(s_msg[8]), .eo(e_msg[8]) );
  torus_xbar_1b_27 \xbar_gen[9].xbar_inst  ( .w2e(n16), .w2s(n19), .n2s(n22), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[9]), .wi(
        w_d_c[9]), .pi(i_data[9]), .so(s_msg[9]), .eo(e_msg[9]) );
  torus_xbar_1b_26 \xbar_gen[10].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[10]), .wi(
        w_d_c[10]), .pi(i_data[10]), .so(s_msg[10]), .eo(e_msg[10]) );
  torus_xbar_1b_25 \xbar_gen[11].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[11]), .wi(
        w_d_c[11]), .pi(i_data[11]), .so(s_msg[11]), .eo(e_msg[11]) );
  torus_xbar_1b_24 \xbar_gen[12].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[12]), .wi(
        w_d_c[12]), .pi(i_data[12]), .so(s_msg[12]), .eo(e_msg[12]) );
  torus_xbar_1b_23 \xbar_gen[13].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[13]), .wi(
        w_d_c[13]), .pi(i_data[13]), .so(s_msg[13]), .eo(e_msg[13]) );
  torus_xbar_1b_22 \xbar_gen[14].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[14]), .wi(
        w_d_c[14]), .pi(i_data[14]), .so(s_msg[14]), .eo(e_msg[14]) );
  torus_xbar_1b_21 \xbar_gen[15].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[15]), .wi(
        w_d_c[15]), .pi(i_data[15]), .so(s_msg[15]), .eo(e_msg[15]) );
  torus_xbar_1b_20 \xbar_gen[16].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[16]), .wi(
        w_d_c[16]), .pi(i_data[16]), .so(s_msg[16]), .eo(e_msg[16]) );
  torus_xbar_1b_19 \xbar_gen[17].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[17]), .wi(
        w_d_c[17]), .pi(i_data[17]), .so(s_msg[17]), .eo(e_msg[17]) );
  torus_xbar_1b_18 \xbar_gen[18].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[18]), .wi(
        w_d_c[18]), .pi(i_data[18]), .so(s_msg[18]), .eo(e_msg[18]) );
  torus_xbar_1b_17 \xbar_gen[19].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[19]), .wi(
        w_d_c[19]), .pi(i_data[19]), .so(s_msg[19]), .eo(e_msg[19]) );
  torus_xbar_1b_16 \xbar_gen[20].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[20]), .wi(
        w_d_c[20]), .pi(i_data[20]), .so(s_msg[20]), .eo(e_msg[20]) );
  torus_xbar_1b_15 \xbar_gen[21].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[21]), .wi(
        w_d_c[21]), .pi(i_data[21]), .so(s_msg[21]), .eo(e_msg[21]) );
  torus_xbar_1b_14 \xbar_gen[22].xbar_inst  ( .w2e(n15), .w2s(n18), .n2s(n21), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[22]), .wi(
        w_d_c[22]), .pi(i_data[22]), .so(s_msg[22]), .eo(e_msg[22]) );
  torus_xbar_1b_13 \xbar_gen[23].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[23]), .wi(
        w_d_c[23]), .pi(i_data[23]), .so(s_msg[23]), .eo(e_msg[23]) );
  torus_xbar_1b_12 \xbar_gen[24].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[24]), .wi(
        w_d_c[24]), .pi(i_data[24]), .so(s_msg[24]), .eo(e_msg[24]) );
  torus_xbar_1b_11 \xbar_gen[25].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[25]), .wi(
        w_d_c[25]), .pi(i_data[25]), .so(s_msg[25]), .eo(e_msg[25]) );
  torus_xbar_1b_10 \xbar_gen[26].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[26]), .wi(
        w_d_c[26]), .pi(i_data[26]), .so(s_msg[26]), .eo(e_msg[26]) );
  torus_xbar_1b_9 \xbar_gen[27].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[27]), .wi(
        w_d_c[27]), .pi(i_data[27]), .so(s_msg[27]), .eo(e_msg[27]) );
  torus_xbar_1b_8 \xbar_gen[28].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[28]), .wi(
        w_d_c[28]), .pi(i_data[28]), .so(s_msg[28]), .eo(e_msg[28]) );
  torus_xbar_1b_7 \xbar_gen[29].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[29]), .wi(
        w_d_c[29]), .pi(i_data[29]), .so(s_msg[29]), .eo(e_msg[29]) );
  torus_xbar_1b_6 \xbar_gen[30].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[30]), .wi(
        w_d_c[30]), .pi(i_data[30]), .so(s_msg[30]), .eo(e_msg[30]) );
  torus_xbar_1b_5 \xbar_gen[31].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_data_reg[31]), .wi(
        w_d_c[31]), .pi(i_data[31]), .so(s_msg[31]), .eo(e_msg[31]) );
  torus_xbar_1b_4 \xbar_gen[32].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[0]), .wi(w_d_c[32]), 
        .pi(i_y[0]), .so(s_msg[32]), .eo(e_msg[32]) );
  torus_xbar_1b_3 \xbar_gen[33].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_y_reg[1]), .wi(w_d_c[33]), 
        .pi(i_y[1]), .so(s_msg[33]), .eo(e_msg[33]) );
  torus_xbar_1b_2 \xbar_gen[34].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[0]), .wi(w_d_c[34]), 
        .pi(i_x[0]), .so(s_msg[34]), .eo(e_msg[34]) );
  torus_xbar_1b_1 \xbar_gen[35].xbar_inst  ( .w2e(n14), .w2s(n17), .n2s(n20), 
        .p2s(\*Logic0* ), .p2e(\*Logic0* ), .ni(n_in_x_reg[1]), .wi(w_d_c[35]), 
        .pi(i_x[1]), .so(s_msg[35]), .eo(e_msg[35]) );
  DFKCNQD1 \s_out_data_reg_reg[31]  ( .CN(n8), .D(s_msg[31]), .CP(clk), .Q(
        s_out_data[31]) );
  DFKCNQD1 \s_out_data_reg_reg[30]  ( .CN(n10), .D(s_msg[30]), .CP(clk), .Q(
        s_out_data[30]) );
  DFKCNQD1 \s_out_data_reg_reg[29]  ( .CN(n10), .D(s_msg[29]), .CP(clk), .Q(
        s_out_data[29]) );
  DFKCNQD1 \s_out_data_reg_reg[28]  ( .CN(n10), .D(s_msg[28]), .CP(clk), .Q(
        s_out_data[28]) );
  DFKCNQD1 \s_out_data_reg_reg[27]  ( .CN(n10), .D(s_msg[27]), .CP(clk), .Q(
        s_out_data[27]) );
  DFKCNQD1 \s_out_data_reg_reg[26]  ( .CN(n10), .D(s_msg[26]), .CP(clk), .Q(
        s_out_data[26]) );
  DFKCNQD1 \s_out_data_reg_reg[25]  ( .CN(n9), .D(s_msg[25]), .CP(clk), .Q(
        s_out_data[25]) );
  DFKCNQD1 \s_out_data_reg_reg[24]  ( .CN(n10), .D(s_msg[24]), .CP(clk), .Q(
        s_out_data[24]) );
  DFKCNQD1 \s_out_data_reg_reg[23]  ( .CN(n10), .D(s_msg[23]), .CP(clk), .Q(
        s_out_data[23]) );
  DFKCNQD1 \s_out_data_reg_reg[22]  ( .CN(n8), .D(s_msg[22]), .CP(clk), .Q(
        s_out_data[22]) );
  DFKCNQD1 \s_out_data_reg_reg[21]  ( .CN(n10), .D(s_msg[21]), .CP(clk), .Q(
        s_out_data[21]) );
  DFKCNQD1 \s_out_data_reg_reg[20]  ( .CN(n10), .D(s_msg[20]), .CP(clk), .Q(
        s_out_data[20]) );
  DFKCNQD1 \s_out_data_reg_reg[19]  ( .CN(n8), .D(s_msg[19]), .CP(clk), .Q(
        s_out_data[19]) );
  DFKCNQD1 \s_out_data_reg_reg[18]  ( .CN(n8), .D(s_msg[18]), .CP(clk), .Q(
        s_out_data[18]) );
  DFKCNQD1 \s_out_data_reg_reg[17]  ( .CN(n10), .D(s_msg[17]), .CP(clk), .Q(
        s_out_data[17]) );
  DFKCNQD1 \s_out_data_reg_reg[16]  ( .CN(n8), .D(s_msg[16]), .CP(clk), .Q(
        s_out_data[16]) );
  DFKCNQD1 \s_out_data_reg_reg[15]  ( .CN(n10), .D(s_msg[15]), .CP(clk), .Q(
        s_out_data[15]) );
  DFKCNQD1 \s_out_data_reg_reg[14]  ( .CN(n9), .D(s_msg[14]), .CP(clk), .Q(
        s_out_data[14]) );
  DFKCNQD1 \s_out_data_reg_reg[13]  ( .CN(n8), .D(s_msg[13]), .CP(clk), .Q(
        s_out_data[13]) );
  DFKCNQD1 \s_out_data_reg_reg[12]  ( .CN(n8), .D(s_msg[12]), .CP(clk), .Q(
        s_out_data[12]) );
  DFKCNQD1 \s_out_data_reg_reg[11]  ( .CN(n10), .D(s_msg[11]), .CP(clk), .Q(
        s_out_data[11]) );
  DFKCNQD1 \s_out_data_reg_reg[10]  ( .CN(n8), .D(s_msg[10]), .CP(clk), .Q(
        s_out_data[10]) );
  DFKCNQD1 \s_out_data_reg_reg[9]  ( .CN(n10), .D(s_msg[9]), .CP(clk), .Q(
        s_out_data[9]) );
  DFKCNQD1 \s_out_data_reg_reg[8]  ( .CN(n10), .D(s_msg[8]), .CP(clk), .Q(
        s_out_data[8]) );
  DFKCNQD1 \s_out_data_reg_reg[7]  ( .CN(n9), .D(s_msg[7]), .CP(clk), .Q(
        s_out_data[7]) );
  DFKCNQD1 \s_out_data_reg_reg[6]  ( .CN(n8), .D(s_msg[6]), .CP(clk), .Q(
        s_out_data[6]) );
  DFKCNQD1 \s_out_data_reg_reg[5]  ( .CN(n10), .D(s_msg[5]), .CP(clk), .Q(
        s_out_data[5]) );
  DFKCNQD1 \s_out_data_reg_reg[4]  ( .CN(n9), .D(s_msg[4]), .CP(clk), .Q(
        s_out_data[4]) );
  DFKCNQD1 \s_out_data_reg_reg[3]  ( .CN(n10), .D(s_msg[3]), .CP(clk), .Q(
        s_out_data[3]) );
  DFKCNQD1 \s_out_data_reg_reg[2]  ( .CN(n9), .D(s_msg[2]), .CP(clk), .Q(
        s_out_data[2]) );
  DFKCNQD1 \s_out_data_reg_reg[1]  ( .CN(n10), .D(s_msg[1]), .CP(clk), .Q(
        s_out_data[1]) );
  DFKCNQD1 s_out_v_reg_reg ( .CN(n8), .D(dor_s_v), .CP(clk), .Q(s_out_v) );
  DFKCNQD1 \n_in_data_reg_reg[31]  ( .CN(n10), .D(n_in_data[31]), .CP(clk), 
        .Q(n_in_data_reg[31]) );
  DFKCNQD1 \n_in_data_reg_reg[30]  ( .CN(n10), .D(n_in_data[30]), .CP(clk), 
        .Q(n_in_data_reg[30]) );
  DFKCNQD1 \n_in_data_reg_reg[29]  ( .CN(n9), .D(n_in_data[29]), .CP(clk), .Q(
        n_in_data_reg[29]) );
  DFKCNQD1 \n_in_data_reg_reg[28]  ( .CN(n9), .D(n_in_data[28]), .CP(clk), .Q(
        n_in_data_reg[28]) );
  DFKCNQD1 \n_in_data_reg_reg[27]  ( .CN(n10), .D(n_in_data[27]), .CP(clk), 
        .Q(n_in_data_reg[27]) );
  DFKCNQD1 \n_in_data_reg_reg[26]  ( .CN(n10), .D(n_in_data[26]), .CP(clk), 
        .Q(n_in_data_reg[26]) );
  DFKCNQD1 \n_in_data_reg_reg[25]  ( .CN(n8), .D(n_in_data[25]), .CP(clk), .Q(
        n_in_data_reg[25]) );
  DFKCNQD1 \n_in_data_reg_reg[24]  ( .CN(n9), .D(n_in_data[24]), .CP(clk), .Q(
        n_in_data_reg[24]) );
  DFKCNQD1 \n_in_data_reg_reg[23]  ( .CN(n9), .D(n_in_data[23]), .CP(clk), .Q(
        n_in_data_reg[23]) );
  DFKCNQD1 \n_in_data_reg_reg[22]  ( .CN(n9), .D(n_in_data[22]), .CP(clk), .Q(
        n_in_data_reg[22]) );
  DFKCNQD1 \n_in_data_reg_reg[21]  ( .CN(n10), .D(n_in_data[21]), .CP(clk), 
        .Q(n_in_data_reg[21]) );
  DFKCNQD1 \n_in_data_reg_reg[20]  ( .CN(n8), .D(n_in_data[20]), .CP(clk), .Q(
        n_in_data_reg[20]) );
  DFKCNQD1 \n_in_data_reg_reg[19]  ( .CN(n8), .D(n_in_data[19]), .CP(clk), .Q(
        n_in_data_reg[19]) );
  DFKCNQD1 \n_in_data_reg_reg[18]  ( .CN(n9), .D(n_in_data[18]), .CP(clk), .Q(
        n_in_data_reg[18]) );
  DFKCNQD1 \n_in_data_reg_reg[17]  ( .CN(n10), .D(n_in_data[17]), .CP(clk), 
        .Q(n_in_data_reg[17]) );
  DFKCNQD1 \n_in_data_reg_reg[16]  ( .CN(n10), .D(n_in_data[16]), .CP(clk), 
        .Q(n_in_data_reg[16]) );
  DFKCNQD1 \n_in_data_reg_reg[15]  ( .CN(n10), .D(n_in_data[15]), .CP(clk), 
        .Q(n_in_data_reg[15]) );
  DFKCNQD1 \n_in_data_reg_reg[14]  ( .CN(n9), .D(n_in_data[14]), .CP(clk), .Q(
        n_in_data_reg[14]) );
  DFKCNQD1 \n_in_data_reg_reg[13]  ( .CN(n10), .D(n_in_data[13]), .CP(clk), 
        .Q(n_in_data_reg[13]) );
  DFKCNQD1 \n_in_data_reg_reg[12]  ( .CN(n8), .D(n_in_data[12]), .CP(clk), .Q(
        n_in_data_reg[12]) );
  DFKCNQD1 \n_in_data_reg_reg[11]  ( .CN(n9), .D(n_in_data[11]), .CP(clk), .Q(
        n_in_data_reg[11]) );
  DFKCNQD1 \n_in_data_reg_reg[10]  ( .CN(n9), .D(n_in_data[10]), .CP(clk), .Q(
        n_in_data_reg[10]) );
  DFKCNQD1 \n_in_data_reg_reg[9]  ( .CN(n10), .D(n_in_data[9]), .CP(clk), .Q(
        n_in_data_reg[9]) );
  DFKCNQD1 \n_in_data_reg_reg[8]  ( .CN(n8), .D(n_in_data[8]), .CP(clk), .Q(
        n_in_data_reg[8]) );
  DFKCNQD1 \n_in_data_reg_reg[7]  ( .CN(n8), .D(n_in_data[7]), .CP(clk), .Q(
        n_in_data_reg[7]) );
  DFKCNQD1 \n_in_data_reg_reg[6]  ( .CN(n9), .D(n_in_data[6]), .CP(clk), .Q(
        n_in_data_reg[6]) );
  DFKCNQD1 \n_in_data_reg_reg[5]  ( .CN(n8), .D(n_in_data[5]), .CP(clk), .Q(
        n_in_data_reg[5]) );
  DFKCNQD1 \n_in_data_reg_reg[4]  ( .CN(n10), .D(n_in_data[4]), .CP(clk), .Q(
        n_in_data_reg[4]) );
  DFKCNQD1 \n_in_data_reg_reg[3]  ( .CN(n9), .D(n_in_data[3]), .CP(clk), .Q(
        n_in_data_reg[3]) );
  DFKCNQD1 \n_in_data_reg_reg[2]  ( .CN(n8), .D(n_in_data[2]), .CP(clk), .Q(
        n_in_data_reg[2]) );
  DFKCNQD1 \n_in_data_reg_reg[1]  ( .CN(n9), .D(n_in_data[1]), .CP(clk), .Q(
        n_in_data_reg[1]) );
  DFKCNQD1 \n_in_data_reg_reg[0]  ( .CN(n9), .D(n_in_data[0]), .CP(clk), .Q(
        n_in_data_reg[0]) );
  DFKCNQD1 \n_in_x_reg_reg[1]  ( .CN(n10), .D(n_in_x[1]), .CP(clk), .Q(
        n_in_x_reg[1]) );
  DFKCNQD1 \n_in_x_reg_reg[0]  ( .CN(n9), .D(n_in_x[0]), .CP(clk), .Q(
        n_in_x_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[0]  ( .CN(n8), .D(n_in_y[0]), .CP(clk), .Q(
        n_in_y_reg[0]) );
  DFKCNQD1 \n_in_y_reg_reg[1]  ( .CN(n9), .D(n_in_y[1]), .CP(clk), .Q(
        n_in_y_reg[1]) );
  DFKCNQD1 \s_out_x_reg_reg[1]  ( .CN(n10), .D(s_msg[35]), .CP(clk), .Q(
        s_out_x[1]) );
  DFKCNQD1 \s_out_y_reg_reg[1]  ( .CN(n10), .D(s_msg[33]), .CP(clk), .Q(
        s_out_y[1]) );
  DFKCNQD1 \s_out_data_reg_reg[0]  ( .CN(n9), .D(s_msg[0]), .CP(clk), .Q(
        s_out_data[0]) );
  EDFKCNQD1 \e_out_data_reg_reg[31]  ( .CN(n8), .D(e_msg[31]), .E(n2), .CP(clk), .Q(e_out_data[31]) );
  EDFKCNQD1 \e_out_data_reg_reg[30]  ( .CN(n10), .D(e_msg[30]), .E(n2), .CP(
        clk), .Q(e_out_data[30]) );
  EDFKCNQD1 \e_out_data_reg_reg[29]  ( .CN(n8), .D(e_msg[29]), .E(n2), .CP(clk), .Q(e_out_data[29]) );
  EDFKCNQD1 \e_out_data_reg_reg[28]  ( .CN(n8), .D(e_msg[28]), .E(n2), .CP(clk), .Q(e_out_data[28]) );
  EDFKCNQD1 \e_out_data_reg_reg[27]  ( .CN(n8), .D(e_msg[27]), .E(n2), .CP(clk), .Q(e_out_data[27]) );
  EDFKCNQD1 \e_out_data_reg_reg[26]  ( .CN(n9), .D(e_msg[26]), .E(n2), .CP(clk), .Q(e_out_data[26]) );
  EDFKCNQD1 \e_out_data_reg_reg[25]  ( .CN(n8), .D(e_msg[25]), .E(n2), .CP(clk), .Q(e_out_data[25]) );
  EDFKCNQD1 \e_out_data_reg_reg[24]  ( .CN(n10), .D(e_msg[24]), .E(n2), .CP(
        clk), .Q(e_out_data[24]) );
  EDFKCNQD1 \e_out_data_reg_reg[23]  ( .CN(n8), .D(e_msg[23]), .E(n2), .CP(clk), .Q(e_out_data[23]) );
  EDFKCNQD1 \e_out_data_reg_reg[22]  ( .CN(n8), .D(e_msg[22]), .E(n2), .CP(clk), .Q(e_out_data[22]) );
  EDFKCNQD1 \e_out_data_reg_reg[21]  ( .CN(n8), .D(e_msg[21]), .E(n2), .CP(clk), .Q(e_out_data[21]) );
  EDFKCNQD1 \e_out_data_reg_reg[20]  ( .CN(n9), .D(e_msg[20]), .E(n2), .CP(clk), .Q(e_out_data[20]) );
  EDFKCNQD1 \e_out_data_reg_reg[19]  ( .CN(n10), .D(e_msg[19]), .E(n2), .CP(
        clk), .Q(e_out_data[19]) );
  EDFKCNQD1 \e_out_data_reg_reg[18]  ( .CN(n9), .D(e_msg[18]), .E(n2), .CP(clk), .Q(e_out_data[18]) );
  EDFKCNQD1 \e_out_data_reg_reg[17]  ( .CN(n8), .D(e_msg[17]), .E(n2), .CP(clk), .Q(e_out_data[17]) );
  EDFKCNQD1 \e_out_data_reg_reg[16]  ( .CN(n9), .D(e_msg[16]), .E(n2), .CP(clk), .Q(e_out_data[16]) );
  EDFKCNQD1 \e_out_data_reg_reg[15]  ( .CN(n8), .D(e_msg[15]), .E(n2), .CP(clk), .Q(e_out_data[15]) );
  EDFKCNQD1 \e_out_data_reg_reg[14]  ( .CN(n9), .D(e_msg[14]), .E(n2), .CP(clk), .Q(e_out_data[14]) );
  EDFKCNQD1 \e_out_data_reg_reg[13]  ( .CN(n9), .D(e_msg[13]), .E(n2), .CP(clk), .Q(e_out_data[13]) );
  EDFKCNQD1 \e_out_data_reg_reg[12]  ( .CN(n9), .D(e_msg[12]), .E(n2), .CP(clk), .Q(e_out_data[12]) );
  EDFKCNQD1 \e_out_data_reg_reg[11]  ( .CN(n8), .D(e_msg[11]), .E(n2), .CP(clk), .Q(e_out_data[11]) );
  EDFKCNQD1 \e_out_data_reg_reg[10]  ( .CN(n9), .D(e_msg[10]), .E(n2), .CP(clk), .Q(e_out_data[10]) );
  EDFKCNQD1 \e_out_data_reg_reg[9]  ( .CN(n8), .D(e_msg[9]), .E(n2), .CP(clk), 
        .Q(e_out_data[9]) );
  EDFKCNQD1 \e_out_data_reg_reg[8]  ( .CN(n9), .D(e_msg[8]), .E(n2), .CP(clk), 
        .Q(e_out_data[8]) );
  EDFKCNQD1 \e_out_data_reg_reg[7]  ( .CN(n10), .D(e_msg[7]), .E(n2), .CP(clk), 
        .Q(e_out_data[7]) );
  EDFKCNQD1 \e_out_data_reg_reg[6]  ( .CN(n9), .D(e_msg[6]), .E(n2), .CP(clk), 
        .Q(e_out_data[6]) );
  EDFKCNQD1 \e_out_data_reg_reg[5]  ( .CN(n8), .D(e_msg[5]), .E(n2), .CP(clk), 
        .Q(e_out_data[5]) );
  EDFKCNQD1 \e_out_data_reg_reg[4]  ( .CN(n9), .D(e_msg[4]), .E(n2), .CP(clk), 
        .Q(e_out_data[4]) );
  EDFKCNQD1 \e_out_data_reg_reg[3]  ( .CN(n8), .D(e_msg[3]), .E(n2), .CP(clk), 
        .Q(e_out_data[3]) );
  EDFKCNQD1 \e_out_data_reg_reg[2]  ( .CN(n9), .D(e_msg[2]), .E(n2), .CP(clk), 
        .Q(e_out_data[2]) );
  EDFKCNQD1 \e_out_data_reg_reg[1]  ( .CN(n9), .D(e_msg[1]), .E(n2), .CP(clk), 
        .Q(e_out_data[1]) );
  EDFKCNQD1 \e_out_data_reg_reg[0]  ( .CN(n9), .D(e_msg[0]), .E(n2), .CP(clk), 
        .Q(e_out_data[0]) );
  DFKCNQD1 \s_out_y_reg_reg[0]  ( .CN(n10), .D(s_msg[32]), .CP(clk), .Q(
        s_out_y[0]) );
  DFKCNQD1 o_v_reg_reg ( .CN(n8), .D(dor_o_v), .CP(clk), .Q(o_v) );
  DFKCNQD1 \s_out_x_reg_reg[0]  ( .CN(n9), .D(s_msg[34]), .CP(clk), .Q(
        s_out_x[0]) );
  DFKCNQD1 n_in_v_reg_reg ( .CN(n10), .D(n_in_v), .CP(clk), .Q(n_in_v_reg) );
  EDFKCNQD1 e_out_v_reg_reg ( .CN(n9), .D(dor_e_v), .E(n2), .CP(clk), .Q(
        e_out_v) );
  EDFKCNQD1 \e_out_y_reg_reg[1]  ( .CN(n8), .D(e_msg[33]), .E(n2), .CP(clk), 
        .Q(e_out_y[1]) );
  EDFKCNQD1 \e_out_y_reg_reg[0]  ( .CN(n10), .D(e_msg[32]), .E(n2), .CP(clk), 
        .Q(e_out_y[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[0]  ( .CN(n8), .D(e_msg[34]), .E(n2), .CP(clk), 
        .Q(e_out_x[0]) );
  EDFKCNQD1 \e_out_x_reg_reg[1]  ( .CN(n8), .D(e_msg[35]), .E(n2), .CP(clk), 
        .Q(e_out_x[1]) );
  CKBD1 U3 ( .I(dor_w2e), .Z(n14) );
  CKBD1 U4 ( .I(dor_w2e), .Z(n15) );
  CKBD1 U5 ( .I(dor_w2e), .Z(n16) );
  INVD1 U6 ( .I(n1), .ZN(n2) );
  CKBD1 U7 ( .I(dor_w2s), .Z(n17) );
  CKBD1 U8 ( .I(dor_w2s), .Z(n18) );
  CKBD1 U9 ( .I(dor_w2s), .Z(n19) );
  CKBD1 U10 ( .I(e_b), .Z(n1) );
  CKBD1 U11 ( .I(dor_n2s), .Z(n21) );
  CKBD1 U12 ( .I(dor_n2s), .Z(n20) );
  CKBD1 U13 ( .I(dor_n2s), .Z(n22) );
  INVD1 U14 ( .I(n13), .ZN(n8) );
  INVD1 U15 ( .I(n12), .ZN(n9) );
  INVD1 U16 ( .I(n11), .ZN(n10) );
  IINR4D0 U17 ( .A1(n3), .A2(n4), .B1(dor_e_v), .B2(dor_o_v), .ZN(done) );
  CKBD1 U18 ( .I(n7), .Z(n13) );
  CKBD1 U19 ( .I(n6), .Z(n11) );
  CKBD1 U20 ( .I(n7), .Z(n12) );
  INR4D0 U21 ( .A1(n5), .B1(o_v), .B2(n_in_v), .B3(n_in_v_reg), .ZN(n4) );
  NR3D0 U22 ( .A1(s_out_v), .A2(w_v_c), .A3(w_in_v), .ZN(n5) );
  NR3D0 U23 ( .A1(dor_s_v), .A2(i_v), .A3(e_out_v), .ZN(n3) );
  CKBD1 U24 ( .I(rst), .Z(n6) );
  CKBD1 U25 ( .I(rst), .Z(n7) );
  TIEL U26 ( .ZN(\*Logic0* ) );
endmodule


module low_swing_rx_75 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_75 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_74 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_73 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_74 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_73 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_72 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_71 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_72 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_71 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_70 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_69 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_70 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_69 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_68 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_67 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_68 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_67 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_66 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_65 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_66 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_65 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_64 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_63 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_64 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_63 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_62 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_61 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_62 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_61 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_60 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_59 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_60 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_59 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_58 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_57 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_58 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_57 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_56 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_55 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_56 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_55 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_54 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_53 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_54 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_53 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_52 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_51 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_52 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_51 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_50 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_49 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_50 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_49 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_48 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_47 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_48 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_47 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_46 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_45 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_46 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_45 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_44 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_43 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_44 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_43 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_42 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_41 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_42 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_41 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_40 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_39 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_40 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_39 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_38 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_37 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_38 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_37 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_36 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_35 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_36 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_35 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_34 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_33 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_34 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_33 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_32 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_31 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_32 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_31 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_30 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_29 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_30 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_29 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_28 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_27 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_28 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_27 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_26 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_25 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_26 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_25 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_24 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_23 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_24 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_23 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_22 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_21 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_22 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_21 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_20 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_19 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_20 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_19 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_18 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_17 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_18 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_17 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_16 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_15 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_16 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_15 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_14 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_13 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_14 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_13 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_12 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_11 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_12 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_11 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_10 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_9 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_10 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_9 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_8 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_7 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_8 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_7 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_6 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_5 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_6 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_5 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_4 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_3 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_4 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_3 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_rx_2 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_rx_1 ( i, o );
  input i;
  output o;
  wire   i;
  assign o = i;

endmodule


module low_swing_tx_2 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module low_swing_tx_1 ( i, c );
  input i;
  output c;
  wire   i;
  assign c = i;

endmodule


module torus_bp_D_W32 ( clk, rst, out_v, out, done );
  output [31:0] out;
  input clk, rst;
  output out_v, done;
  wire   \i[0][0][36] , \i[0][0][35] , \i[0][0][34] , \i[0][0][33] ,
         \i[0][0][32] , \i[0][0][31] , \i[0][0][30] , \i[0][0][29] ,
         \i[0][0][28] , \i[0][0][27] , \i[0][0][26] , \i[0][0][25] ,
         \i[0][0][24] , \i[0][0][23] , \i[0][0][22] , \i[0][0][21] ,
         \i[0][0][20] , \i[0][0][19] , \i[0][0][18] , \i[0][0][17] ,
         \i[0][0][16] , \i[0][0][15] , \i[0][0][14] , \i[0][0][13] ,
         \i[0][0][12] , \i[0][0][11] , \i[0][0][10] , \i[0][0][9] ,
         \i[0][0][8] , \i[0][0][7] , \i[0][0][6] , \i[0][0][5] , \i[0][0][4] ,
         \i[0][0][3] , \i[0][0][2] , \i[0][0][1] , \i[0][0][0] , \i[0][1][36] ,
         \i[0][1][35] , \i[0][1][34] , \i[0][1][33] , \i[0][1][32] ,
         \i[0][1][31] , \i[0][1][30] , \i[0][1][29] , \i[0][1][28] ,
         \i[0][1][27] , \i[0][1][26] , \i[0][1][25] , \i[0][1][24] ,
         \i[0][1][23] , \i[0][1][22] , \i[0][1][21] , \i[0][1][20] ,
         \i[0][1][19] , \i[0][1][18] , \i[0][1][17] , \i[0][1][16] ,
         \i[0][1][15] , \i[0][1][14] , \i[0][1][13] , \i[0][1][12] ,
         \i[0][1][11] , \i[0][1][10] , \i[0][1][9] , \i[0][1][8] ,
         \i[0][1][7] , \i[0][1][6] , \i[0][1][5] , \i[0][1][4] , \i[0][1][3] ,
         \i[0][1][2] , \i[0][1][1] , \i[0][1][0] , \i[0][2][36] ,
         \i[0][2][35] , \i[0][2][34] , \i[0][2][33] , \i[0][2][32] ,
         \i[0][2][31] , \i[0][2][30] , \i[0][2][29] , \i[0][2][28] ,
         \i[0][2][27] , \i[0][2][26] , \i[0][2][25] , \i[0][2][24] ,
         \i[0][2][23] , \i[0][2][22] , \i[0][2][21] , \i[0][2][20] ,
         \i[0][2][19] , \i[0][2][18] , \i[0][2][17] , \i[0][2][16] ,
         \i[0][2][15] , \i[0][2][14] , \i[0][2][13] , \i[0][2][12] ,
         \i[0][2][11] , \i[0][2][10] , \i[0][2][9] , \i[0][2][8] ,
         \i[0][2][7] , \i[0][2][6] , \i[0][2][5] , \i[0][2][4] , \i[0][2][3] ,
         \i[0][2][2] , \i[0][2][1] , \i[0][2][0] , \i[0][3][36] ,
         \i[0][3][35] , \i[0][3][34] , \i[0][3][33] , \i[0][3][32] ,
         \i[0][3][31] , \i[0][3][30] , \i[0][3][29] , \i[0][3][28] ,
         \i[0][3][27] , \i[0][3][26] , \i[0][3][25] , \i[0][3][24] ,
         \i[0][3][23] , \i[0][3][22] , \i[0][3][21] , \i[0][3][20] ,
         \i[0][3][19] , \i[0][3][18] , \i[0][3][17] , \i[0][3][16] ,
         \i[0][3][15] , \i[0][3][14] , \i[0][3][13] , \i[0][3][12] ,
         \i[0][3][11] , \i[0][3][10] , \i[0][3][9] , \i[0][3][8] ,
         \i[0][3][7] , \i[0][3][6] , \i[0][3][5] , \i[0][3][4] , \i[0][3][3] ,
         \i[0][3][2] , \i[0][3][1] , \i[0][3][0] , \i[1][0][36] ,
         \i[1][0][35] , \i[1][0][34] , \i[1][0][33] , \i[1][0][32] ,
         \i[1][0][31] , \i[1][0][30] , \i[1][0][29] , \i[1][0][28] ,
         \i[1][0][27] , \i[1][0][26] , \i[1][0][25] , \i[1][0][24] ,
         \i[1][0][23] , \i[1][0][22] , \i[1][0][21] , \i[1][0][20] ,
         \i[1][0][19] , \i[1][0][18] , \i[1][0][17] , \i[1][0][16] ,
         \i[1][0][15] , \i[1][0][14] , \i[1][0][13] , \i[1][0][12] ,
         \i[1][0][11] , \i[1][0][10] , \i[1][0][9] , \i[1][0][8] ,
         \i[1][0][7] , \i[1][0][6] , \i[1][0][5] , \i[1][0][4] , \i[1][0][3] ,
         \i[1][0][2] , \i[1][0][1] , \i[1][0][0] , \i[1][1][36] ,
         \i[1][1][35] , \i[1][1][34] , \i[1][1][33] , \i[1][1][32] ,
         \i[1][1][31] , \i[1][1][30] , \i[1][1][29] , \i[1][1][28] ,
         \i[1][1][27] , \i[1][1][26] , \i[1][1][25] , \i[1][1][24] ,
         \i[1][1][23] , \i[1][1][22] , \i[1][1][21] , \i[1][1][20] ,
         \i[1][1][19] , \i[1][1][18] , \i[1][1][17] , \i[1][1][16] ,
         \i[1][1][15] , \i[1][1][14] , \i[1][1][13] , \i[1][1][12] ,
         \i[1][1][11] , \i[1][1][10] , \i[1][1][9] , \i[1][1][8] ,
         \i[1][1][7] , \i[1][1][6] , \i[1][1][5] , \i[1][1][4] , \i[1][1][3] ,
         \i[1][1][2] , \i[1][1][1] , \i[1][1][0] , \i[1][2][36] ,
         \i[1][2][35] , \i[1][2][34] , \i[1][2][33] , \i[1][2][32] ,
         \i[1][2][31] , \i[1][2][30] , \i[1][2][29] , \i[1][2][28] ,
         \i[1][2][27] , \i[1][2][26] , \i[1][2][25] , \i[1][2][24] ,
         \i[1][2][23] , \i[1][2][22] , \i[1][2][21] , \i[1][2][20] ,
         \i[1][2][19] , \i[1][2][18] , \i[1][2][17] , \i[1][2][16] ,
         \i[1][2][15] , \i[1][2][14] , \i[1][2][13] , \i[1][2][12] ,
         \i[1][2][11] , \i[1][2][10] , \i[1][2][9] , \i[1][2][8] ,
         \i[1][2][7] , \i[1][2][6] , \i[1][2][5] , \i[1][2][4] , \i[1][2][3] ,
         \i[1][2][2] , \i[1][2][1] , \i[1][2][0] , \i[1][3][36] ,
         \i[1][3][35] , \i[1][3][34] , \i[1][3][33] , \i[1][3][32] ,
         \i[1][3][31] , \i[1][3][30] , \i[1][3][29] , \i[1][3][28] ,
         \i[1][3][27] , \i[1][3][26] , \i[1][3][25] , \i[1][3][24] ,
         \i[1][3][23] , \i[1][3][22] , \i[1][3][21] , \i[1][3][20] ,
         \i[1][3][19] , \i[1][3][18] , \i[1][3][17] , \i[1][3][16] ,
         \i[1][3][15] , \i[1][3][14] , \i[1][3][13] , \i[1][3][12] ,
         \i[1][3][11] , \i[1][3][10] , \i[1][3][9] , \i[1][3][8] ,
         \i[1][3][7] , \i[1][3][6] , \i[1][3][5] , \i[1][3][4] , \i[1][3][3] ,
         \i[1][3][2] , \i[1][3][1] , \i[1][3][0] , \i[2][0][36] ,
         \i[2][0][35] , \i[2][0][34] , \i[2][0][33] , \i[2][0][32] ,
         \i[2][0][31] , \i[2][0][30] , \i[2][0][29] , \i[2][0][28] ,
         \i[2][0][27] , \i[2][0][26] , \i[2][0][25] , \i[2][0][24] ,
         \i[2][0][23] , \i[2][0][22] , \i[2][0][21] , \i[2][0][20] ,
         \i[2][0][19] , \i[2][0][18] , \i[2][0][17] , \i[2][0][16] ,
         \i[2][0][15] , \i[2][0][14] , \i[2][0][13] , \i[2][0][12] ,
         \i[2][0][11] , \i[2][0][10] , \i[2][0][9] , \i[2][0][8] ,
         \i[2][0][7] , \i[2][0][6] , \i[2][0][5] , \i[2][0][4] , \i[2][0][3] ,
         \i[2][0][2] , \i[2][0][1] , \i[2][0][0] , \i[2][1][36] ,
         \i[2][1][35] , \i[2][1][34] , \i[2][1][33] , \i[2][1][32] ,
         \i[2][1][31] , \i[2][1][30] , \i[2][1][29] , \i[2][1][28] ,
         \i[2][1][27] , \i[2][1][26] , \i[2][1][25] , \i[2][1][24] ,
         \i[2][1][23] , \i[2][1][22] , \i[2][1][21] , \i[2][1][20] ,
         \i[2][1][19] , \i[2][1][18] , \i[2][1][17] , \i[2][1][16] ,
         \i[2][1][15] , \i[2][1][14] , \i[2][1][13] , \i[2][1][12] ,
         \i[2][1][11] , \i[2][1][10] , \i[2][1][9] , \i[2][1][8] ,
         \i[2][1][7] , \i[2][1][6] , \i[2][1][5] , \i[2][1][4] , \i[2][1][3] ,
         \i[2][1][2] , \i[2][1][1] , \i[2][1][0] , \i[2][2][36] ,
         \i[2][2][35] , \i[2][2][34] , \i[2][2][33] , \i[2][2][32] ,
         \i[2][2][31] , \i[2][2][30] , \i[2][2][29] , \i[2][2][28] ,
         \i[2][2][27] , \i[2][2][26] , \i[2][2][25] , \i[2][2][24] ,
         \i[2][2][23] , \i[2][2][22] , \i[2][2][21] , \i[2][2][20] ,
         \i[2][2][19] , \i[2][2][18] , \i[2][2][17] , \i[2][2][16] ,
         \i[2][2][15] , \i[2][2][14] , \i[2][2][13] , \i[2][2][12] ,
         \i[2][2][11] , \i[2][2][10] , \i[2][2][9] , \i[2][2][8] ,
         \i[2][2][7] , \i[2][2][6] , \i[2][2][5] , \i[2][2][4] , \i[2][2][3] ,
         \i[2][2][2] , \i[2][2][1] , \i[2][2][0] , \i[2][3][36] ,
         \i[2][3][35] , \i[2][3][34] , \i[2][3][33] , \i[2][3][32] ,
         \i[2][3][31] , \i[2][3][30] , \i[2][3][29] , \i[2][3][28] ,
         \i[2][3][27] , \i[2][3][26] , \i[2][3][25] , \i[2][3][24] ,
         \i[2][3][23] , \i[2][3][22] , \i[2][3][21] , \i[2][3][20] ,
         \i[2][3][19] , \i[2][3][18] , \i[2][3][17] , \i[2][3][16] ,
         \i[2][3][15] , \i[2][3][14] , \i[2][3][13] , \i[2][3][12] ,
         \i[2][3][11] , \i[2][3][10] , \i[2][3][9] , \i[2][3][8] ,
         \i[2][3][7] , \i[2][3][6] , \i[2][3][5] , \i[2][3][4] , \i[2][3][3] ,
         \i[2][3][2] , \i[2][3][1] , \i[2][3][0] , \i[3][0][36] ,
         \i[3][0][35] , \i[3][0][34] , \i[3][0][33] , \i[3][0][32] ,
         \i[3][0][31] , \i[3][0][30] , \i[3][0][29] , \i[3][0][28] ,
         \i[3][0][27] , \i[3][0][26] , \i[3][0][25] , \i[3][0][24] ,
         \i[3][0][23] , \i[3][0][22] , \i[3][0][21] , \i[3][0][20] ,
         \i[3][0][19] , \i[3][0][18] , \i[3][0][17] , \i[3][0][16] ,
         \i[3][0][15] , \i[3][0][14] , \i[3][0][13] , \i[3][0][12] ,
         \i[3][0][11] , \i[3][0][10] , \i[3][0][9] , \i[3][0][8] ,
         \i[3][0][7] , \i[3][0][6] , \i[3][0][5] , \i[3][0][4] , \i[3][0][3] ,
         \i[3][0][2] , \i[3][0][1] , \i[3][0][0] , \i[3][1][36] ,
         \i[3][1][35] , \i[3][1][34] , \i[3][1][33] , \i[3][1][32] ,
         \i[3][1][31] , \i[3][1][30] , \i[3][1][29] , \i[3][1][28] ,
         \i[3][1][27] , \i[3][1][26] , \i[3][1][25] , \i[3][1][24] ,
         \i[3][1][23] , \i[3][1][22] , \i[3][1][21] , \i[3][1][20] ,
         \i[3][1][19] , \i[3][1][18] , \i[3][1][17] , \i[3][1][16] ,
         \i[3][1][15] , \i[3][1][14] , \i[3][1][13] , \i[3][1][12] ,
         \i[3][1][11] , \i[3][1][10] , \i[3][1][9] , \i[3][1][8] ,
         \i[3][1][7] , \i[3][1][6] , \i[3][1][5] , \i[3][1][4] , \i[3][1][3] ,
         \i[3][1][2] , \i[3][1][1] , \i[3][1][0] , \i[3][2][36] ,
         \i[3][2][35] , \i[3][2][34] , \i[3][2][33] , \i[3][2][32] ,
         \i[3][2][31] , \i[3][2][30] , \i[3][2][29] , \i[3][2][28] ,
         \i[3][2][27] , \i[3][2][26] , \i[3][2][25] , \i[3][2][24] ,
         \i[3][2][23] , \i[3][2][22] , \i[3][2][21] , \i[3][2][20] ,
         \i[3][2][19] , \i[3][2][18] , \i[3][2][17] , \i[3][2][16] ,
         \i[3][2][15] , \i[3][2][14] , \i[3][2][13] , \i[3][2][12] ,
         \i[3][2][11] , \i[3][2][10] , \i[3][2][9] , \i[3][2][8] ,
         \i[3][2][7] , \i[3][2][6] , \i[3][2][5] , \i[3][2][4] , \i[3][2][3] ,
         \i[3][2][2] , \i[3][2][1] , \i[3][2][0] , \i[3][3][36] ,
         \i[3][3][35] , \i[3][3][34] , \i[3][3][33] , \i[3][3][32] ,
         \i[3][3][31] , \i[3][3][30] , \i[3][3][29] , \i[3][3][28] ,
         \i[3][3][27] , \i[3][3][26] , \i[3][3][25] , \i[3][3][24] ,
         \i[3][3][23] , \i[3][3][22] , \i[3][3][21] , \i[3][3][20] ,
         \i[3][3][19] , \i[3][3][18] , \i[3][3][17] , \i[3][3][16] ,
         \i[3][3][15] , \i[3][3][14] , \i[3][3][13] , \i[3][3][12] ,
         \i[3][3][11] , \i[3][3][10] , \i[3][3][9] , \i[3][3][8] ,
         \i[3][3][7] , \i[3][3][6] , \i[3][3][5] , \i[3][3][4] , \i[3][3][3] ,
         \i[3][3][2] , \i[3][3][1] , \i[3][3][0] , \s[0][0][36] ,
         \s[0][0][35] , \s[0][0][34] , \s[0][0][33] , \s[0][0][32] ,
         \s[0][1][36] , \s[0][1][35] , \s[0][1][34] , \s[0][1][33] ,
         \s[0][1][32] , \s[0][1][31] , \s[0][1][30] , \s[0][1][29] ,
         \s[0][1][28] , \s[0][1][27] , \s[0][1][26] , \s[0][1][25] ,
         \s[0][1][24] , \s[0][1][23] , \s[0][1][22] , \s[0][1][21] ,
         \s[0][1][20] , \s[0][1][19] , \s[0][1][18] , \s[0][1][17] ,
         \s[0][1][16] , \s[0][1][15] , \s[0][1][14] , \s[0][1][13] ,
         \s[0][1][12] , \s[0][1][11] , \s[0][1][10] , \s[0][1][9] ,
         \s[0][1][8] , \s[0][1][7] , \s[0][1][6] , \s[0][1][5] , \s[0][1][4] ,
         \s[0][1][3] , \s[0][1][2] , \s[0][1][1] , \s[0][1][0] , \s[0][2][36] ,
         \s[0][2][35] , \s[0][2][34] , \s[0][2][33] , \s[0][2][32] ,
         \s[0][2][31] , \s[0][2][30] , \s[0][2][29] , \s[0][2][28] ,
         \s[0][2][27] , \s[0][2][26] , \s[0][2][25] , \s[0][2][24] ,
         \s[0][2][23] , \s[0][2][22] , \s[0][2][21] , \s[0][2][20] ,
         \s[0][2][19] , \s[0][2][18] , \s[0][2][17] , \s[0][2][16] ,
         \s[0][2][15] , \s[0][2][14] , \s[0][2][13] , \s[0][2][12] ,
         \s[0][2][11] , \s[0][2][10] , \s[0][2][9] , \s[0][2][8] ,
         \s[0][2][7] , \s[0][2][6] , \s[0][2][5] , \s[0][2][4] , \s[0][2][3] ,
         \s[0][2][2] , \s[0][2][1] , \s[0][2][0] , \s[0][3][36] ,
         \s[0][3][35] , \s[0][3][34] , \s[0][3][33] , \s[0][3][32] ,
         \s[0][3][31] , \s[0][3][30] , \s[0][3][29] , \s[0][3][28] ,
         \s[0][3][27] , \s[0][3][26] , \s[0][3][25] , \s[0][3][24] ,
         \s[0][3][23] , \s[0][3][22] , \s[0][3][21] , \s[0][3][20] ,
         \s[0][3][19] , \s[0][3][18] , \s[0][3][17] , \s[0][3][16] ,
         \s[0][3][15] , \s[0][3][14] , \s[0][3][13] , \s[0][3][12] ,
         \s[0][3][11] , \s[0][3][10] , \s[0][3][9] , \s[0][3][8] ,
         \s[0][3][7] , \s[0][3][6] , \s[0][3][5] , \s[0][3][4] , \s[0][3][3] ,
         \s[0][3][2] , \s[0][3][1] , \s[0][3][0] , \s[1][0][36] ,
         \s[1][0][35] , \s[1][0][34] , \s[1][0][33] , \s[1][0][32] ,
         \s[1][0][31] , \s[1][0][30] , \s[1][0][29] , \s[1][0][28] ,
         \s[1][0][27] , \s[1][0][26] , \s[1][0][25] , \s[1][0][24] ,
         \s[1][0][23] , \s[1][0][22] , \s[1][0][21] , \s[1][0][20] ,
         \s[1][0][19] , \s[1][0][18] , \s[1][0][17] , \s[1][0][16] ,
         \s[1][0][15] , \s[1][0][14] , \s[1][0][13] , \s[1][0][12] ,
         \s[1][0][11] , \s[1][0][10] , \s[1][0][9] , \s[1][0][8] ,
         \s[1][0][7] , \s[1][0][6] , \s[1][0][5] , \s[1][0][4] , \s[1][0][3] ,
         \s[1][0][2] , \s[1][0][1] , \s[1][0][0] , \s[1][1][36] ,
         \s[1][1][35] , \s[1][1][34] , \s[1][1][33] , \s[1][1][32] ,
         \s[1][1][31] , \s[1][1][30] , \s[1][1][29] , \s[1][1][28] ,
         \s[1][1][27] , \s[1][1][26] , \s[1][1][25] , \s[1][1][24] ,
         \s[1][1][23] , \s[1][1][22] , \s[1][1][21] , \s[1][1][20] ,
         \s[1][1][19] , \s[1][1][18] , \s[1][1][17] , \s[1][1][16] ,
         \s[1][1][15] , \s[1][1][14] , \s[1][1][13] , \s[1][1][12] ,
         \s[1][1][11] , \s[1][1][10] , \s[1][1][9] , \s[1][1][8] ,
         \s[1][1][7] , \s[1][1][6] , \s[1][1][5] , \s[1][1][4] , \s[1][1][3] ,
         \s[1][1][2] , \s[1][1][1] , \s[1][1][0] , \s[1][2][36] ,
         \s[1][2][35] , \s[1][2][34] , \s[1][2][33] , \s[1][2][32] ,
         \s[1][2][31] , \s[1][2][30] , \s[1][2][29] , \s[1][2][28] ,
         \s[1][2][27] , \s[1][2][26] , \s[1][2][25] , \s[1][2][24] ,
         \s[1][2][23] , \s[1][2][22] , \s[1][2][21] , \s[1][2][20] ,
         \s[1][2][19] , \s[1][2][18] , \s[1][2][17] , \s[1][2][16] ,
         \s[1][2][15] , \s[1][2][14] , \s[1][2][13] , \s[1][2][12] ,
         \s[1][2][11] , \s[1][2][10] , \s[1][2][9] , \s[1][2][8] ,
         \s[1][2][7] , \s[1][2][6] , \s[1][2][5] , \s[1][2][4] , \s[1][2][3] ,
         \s[1][2][2] , \s[1][2][1] , \s[1][2][0] , \s[1][3][36] ,
         \s[1][3][35] , \s[1][3][34] , \s[1][3][33] , \s[1][3][32] ,
         \s[1][3][31] , \s[1][3][30] , \s[1][3][29] , \s[1][3][28] ,
         \s[1][3][27] , \s[1][3][26] , \s[1][3][25] , \s[1][3][24] ,
         \s[1][3][23] , \s[1][3][22] , \s[1][3][21] , \s[1][3][20] ,
         \s[1][3][19] , \s[1][3][18] , \s[1][3][17] , \s[1][3][16] ,
         \s[1][3][15] , \s[1][3][14] , \s[1][3][13] , \s[1][3][12] ,
         \s[1][3][11] , \s[1][3][10] , \s[1][3][9] , \s[1][3][8] ,
         \s[1][3][7] , \s[1][3][6] , \s[1][3][5] , \s[1][3][4] , \s[1][3][3] ,
         \s[1][3][2] , \s[1][3][1] , \s[1][3][0] , \s[2][0][36] ,
         \s[2][0][35] , \s[2][0][34] , \s[2][0][33] , \s[2][0][32] ,
         \s[2][0][31] , \s[2][0][30] , \s[2][0][29] , \s[2][0][28] ,
         \s[2][0][27] , \s[2][0][26] , \s[2][0][25] , \s[2][0][24] ,
         \s[2][0][23] , \s[2][0][22] , \s[2][0][21] , \s[2][0][20] ,
         \s[2][0][19] , \s[2][0][18] , \s[2][0][17] , \s[2][0][16] ,
         \s[2][0][15] , \s[2][0][14] , \s[2][0][13] , \s[2][0][12] ,
         \s[2][0][11] , \s[2][0][10] , \s[2][0][9] , \s[2][0][8] ,
         \s[2][0][7] , \s[2][0][6] , \s[2][0][5] , \s[2][0][4] , \s[2][0][3] ,
         \s[2][0][2] , \s[2][0][1] , \s[2][0][0] , \s[2][1][36] ,
         \s[2][1][35] , \s[2][1][34] , \s[2][1][33] , \s[2][1][32] ,
         \s[2][1][31] , \s[2][1][30] , \s[2][1][29] , \s[2][1][28] ,
         \s[2][1][27] , \s[2][1][26] , \s[2][1][25] , \s[2][1][24] ,
         \s[2][1][23] , \s[2][1][22] , \s[2][1][21] , \s[2][1][20] ,
         \s[2][1][19] , \s[2][1][18] , \s[2][1][17] , \s[2][1][16] ,
         \s[2][1][15] , \s[2][1][14] , \s[2][1][13] , \s[2][1][12] ,
         \s[2][1][11] , \s[2][1][10] , \s[2][1][9] , \s[2][1][8] ,
         \s[2][1][7] , \s[2][1][6] , \s[2][1][5] , \s[2][1][4] , \s[2][1][3] ,
         \s[2][1][2] , \s[2][1][1] , \s[2][1][0] , \s[2][2][36] ,
         \s[2][2][35] , \s[2][2][34] , \s[2][2][33] , \s[2][2][32] ,
         \s[2][2][31] , \s[2][2][30] , \s[2][2][29] , \s[2][2][28] ,
         \s[2][2][27] , \s[2][2][26] , \s[2][2][25] , \s[2][2][24] ,
         \s[2][2][23] , \s[2][2][22] , \s[2][2][21] , \s[2][2][20] ,
         \s[2][2][19] , \s[2][2][18] , \s[2][2][17] , \s[2][2][16] ,
         \s[2][2][15] , \s[2][2][14] , \s[2][2][13] , \s[2][2][12] ,
         \s[2][2][11] , \s[2][2][10] , \s[2][2][9] , \s[2][2][8] ,
         \s[2][2][7] , \s[2][2][6] , \s[2][2][5] , \s[2][2][4] , \s[2][2][3] ,
         \s[2][2][2] , \s[2][2][1] , \s[2][2][0] , \s[2][3][36] ,
         \s[2][3][35] , \s[2][3][34] , \s[2][3][33] , \s[2][3][32] ,
         \s[2][3][31] , \s[2][3][30] , \s[2][3][29] , \s[2][3][28] ,
         \s[2][3][27] , \s[2][3][26] , \s[2][3][25] , \s[2][3][24] ,
         \s[2][3][23] , \s[2][3][22] , \s[2][3][21] , \s[2][3][20] ,
         \s[2][3][19] , \s[2][3][18] , \s[2][3][17] , \s[2][3][16] ,
         \s[2][3][15] , \s[2][3][14] , \s[2][3][13] , \s[2][3][12] ,
         \s[2][3][11] , \s[2][3][10] , \s[2][3][9] , \s[2][3][8] ,
         \s[2][3][7] , \s[2][3][6] , \s[2][3][5] , \s[2][3][4] , \s[2][3][3] ,
         \s[2][3][2] , \s[2][3][1] , \s[2][3][0] , \s[3][0][36] ,
         \s[3][0][35] , \s[3][0][34] , \s[3][0][33] , \s[3][0][32] ,
         \s[3][0][31] , \s[3][0][30] , \s[3][0][29] , \s[3][0][28] ,
         \s[3][0][27] , \s[3][0][26] , \s[3][0][25] , \s[3][0][24] ,
         \s[3][0][23] , \s[3][0][22] , \s[3][0][21] , \s[3][0][20] ,
         \s[3][0][19] , \s[3][0][18] , \s[3][0][17] , \s[3][0][16] ,
         \s[3][0][15] , \s[3][0][14] , \s[3][0][13] , \s[3][0][12] ,
         \s[3][0][11] , \s[3][0][10] , \s[3][0][9] , \s[3][0][8] ,
         \s[3][0][7] , \s[3][0][6] , \s[3][0][5] , \s[3][0][4] , \s[3][0][3] ,
         \s[3][0][2] , \s[3][0][1] , \s[3][0][0] , \s[3][1][36] ,
         \s[3][1][35] , \s[3][1][34] , \s[3][1][33] , \s[3][1][32] ,
         \s[3][1][31] , \s[3][1][30] , \s[3][1][29] , \s[3][1][28] ,
         \s[3][1][27] , \s[3][1][26] , \s[3][1][25] , \s[3][1][24] ,
         \s[3][1][23] , \s[3][1][22] , \s[3][1][21] , \s[3][1][20] ,
         \s[3][1][19] , \s[3][1][18] , \s[3][1][17] , \s[3][1][16] ,
         \s[3][1][15] , \s[3][1][14] , \s[3][1][13] , \s[3][1][12] ,
         \s[3][1][11] , \s[3][1][10] , \s[3][1][9] , \s[3][1][8] ,
         \s[3][1][7] , \s[3][1][6] , \s[3][1][5] , \s[3][1][4] , \s[3][1][3] ,
         \s[3][1][2] , \s[3][1][1] , \s[3][1][0] , \s[3][2][36] ,
         \s[3][2][35] , \s[3][2][34] , \s[3][2][33] , \s[3][2][32] ,
         \s[3][2][31] , \s[3][2][30] , \s[3][2][29] , \s[3][2][28] ,
         \s[3][2][27] , \s[3][2][26] , \s[3][2][25] , \s[3][2][24] ,
         \s[3][2][23] , \s[3][2][22] , \s[3][2][21] , \s[3][2][20] ,
         \s[3][2][19] , \s[3][2][18] , \s[3][2][17] , \s[3][2][16] ,
         \s[3][2][15] , \s[3][2][14] , \s[3][2][13] , \s[3][2][12] ,
         \s[3][2][11] , \s[3][2][10] , \s[3][2][9] , \s[3][2][8] ,
         \s[3][2][7] , \s[3][2][6] , \s[3][2][5] , \s[3][2][4] , \s[3][2][3] ,
         \s[3][2][2] , \s[3][2][1] , \s[3][2][0] , \s[3][3][36] ,
         \s[3][3][35] , \s[3][3][34] , \s[3][3][33] , \s[3][3][32] ,
         \s[3][3][31] , \s[3][3][30] , \s[3][3][29] , \s[3][3][28] ,
         \s[3][3][27] , \s[3][3][26] , \s[3][3][25] , \s[3][3][24] ,
         \s[3][3][23] , \s[3][3][22] , \s[3][3][21] , \s[3][3][20] ,
         \s[3][3][19] , \s[3][3][18] , \s[3][3][17] , \s[3][3][16] ,
         \s[3][3][15] , \s[3][3][14] , \s[3][3][13] , \s[3][3][12] ,
         \s[3][3][11] , \s[3][3][10] , \s[3][3][9] , \s[3][3][8] ,
         \s[3][3][7] , \s[3][3][6] , \s[3][3][5] , \s[3][3][4] , \s[3][3][3] ,
         \s[3][3][2] , \s[3][3][1] , \s[3][3][0] , \o_v[0][1] , \o_v[0][2] ,
         \o_v[0][3] , \o_v[1][0] , \o_v[1][1] , \o_v[1][2] , \o_v[1][3] ,
         \o_v[2][0] , \o_v[2][1] , \o_v[2][2] , \o_v[2][3] , \o_v[3][0] ,
         \o_v[3][1] , \o_v[3][2] , \o_v[3][3] , \i_ack[0][0] , \i_ack[0][1] ,
         \i_ack[0][2] , \i_ack[0][3] , \i_ack[1][0] , \i_ack[1][1] ,
         \i_ack[1][2] , \i_ack[1][3] , \i_ack[2][0] , \i_ack[2][1] ,
         \i_ack[2][2] , \i_ack[2][3] , \i_ack[3][0] , \i_ack[3][1] ,
         \i_ack[3][2] , \i_ack[3][3] , \e[0][0][36] , \e[0][0][35] ,
         \e[0][0][34] , \e[0][0][33] , \e[0][0][32] , \e[0][0][31] ,
         \e[0][0][30] , \e[0][0][29] , \e[0][0][28] , \e[0][0][27] ,
         \e[0][0][26] , \e[0][0][25] , \e[0][0][24] , \e[0][0][23] ,
         \e[0][0][22] , \e[0][0][21] , \e[0][0][20] , \e[0][0][19] ,
         \e[0][0][18] , \e[0][0][17] , \e[0][0][16] , \e[0][0][15] ,
         \e[0][0][14] , \e[0][0][13] , \e[0][0][12] , \e[0][0][11] ,
         \e[0][0][10] , \e[0][0][9] , \e[0][0][8] , \e[0][0][7] , \e[0][0][6] ,
         \e[0][0][5] , \e[0][0][4] , \e[0][0][3] , \e[0][0][2] , \e[0][0][1] ,
         \e[0][0][0] , \e[0][1][36] , \e[0][1][35] , \e[0][1][34] ,
         \e[0][1][33] , \e[0][1][32] , \e[0][1][31] , \e[0][1][30] ,
         \e[0][1][29] , \e[0][1][28] , \e[0][1][27] , \e[0][1][26] ,
         \e[0][1][25] , \e[0][1][24] , \e[0][1][23] , \e[0][1][22] ,
         \e[0][1][21] , \e[0][1][20] , \e[0][1][19] , \e[0][1][18] ,
         \e[0][1][17] , \e[0][1][16] , \e[0][1][15] , \e[0][1][14] ,
         \e[0][1][13] , \e[0][1][12] , \e[0][1][11] , \e[0][1][10] ,
         \e[0][1][9] , \e[0][1][8] , \e[0][1][7] , \e[0][1][6] , \e[0][1][5] ,
         \e[0][1][4] , \e[0][1][3] , \e[0][1][2] , \e[0][1][1] , \e[0][1][0] ,
         \e[0][2][36] , \e[0][2][35] , \e[0][2][34] , \e[0][2][33] ,
         \e[0][2][32] , \e[0][2][31] , \e[0][2][30] , \e[0][2][29] ,
         \e[0][2][28] , \e[0][2][27] , \e[0][2][26] , \e[0][2][25] ,
         \e[0][2][24] , \e[0][2][23] , \e[0][2][22] , \e[0][2][21] ,
         \e[0][2][20] , \e[0][2][19] , \e[0][2][18] , \e[0][2][17] ,
         \e[0][2][16] , \e[0][2][15] , \e[0][2][14] , \e[0][2][13] ,
         \e[0][2][12] , \e[0][2][11] , \e[0][2][10] , \e[0][2][9] ,
         \e[0][2][8] , \e[0][2][7] , \e[0][2][6] , \e[0][2][5] , \e[0][2][4] ,
         \e[0][2][3] , \e[0][2][2] , \e[0][2][1] , \e[0][2][0] , \e[0][3][36] ,
         \e[0][3][35] , \e[0][3][34] , \e[0][3][33] , \e[0][3][32] ,
         \e[0][3][31] , \e[0][3][30] , \e[0][3][29] , \e[0][3][28] ,
         \e[0][3][27] , \e[0][3][26] , \e[0][3][25] , \e[0][3][24] ,
         \e[0][3][23] , \e[0][3][22] , \e[0][3][21] , \e[0][3][20] ,
         \e[0][3][19] , \e[0][3][18] , \e[0][3][17] , \e[0][3][16] ,
         \e[0][3][15] , \e[0][3][14] , \e[0][3][13] , \e[0][3][12] ,
         \e[0][3][11] , \e[0][3][10] , \e[0][3][9] , \e[0][3][8] ,
         \e[0][3][7] , \e[0][3][6] , \e[0][3][5] , \e[0][3][4] , \e[0][3][3] ,
         \e[0][3][2] , \e[0][3][1] , \e[0][3][0] , \e[1][0][36] ,
         \e[1][0][35] , \e[1][0][34] , \e[1][0][33] , \e[1][0][32] ,
         \e[1][0][31] , \e[1][0][30] , \e[1][0][29] , \e[1][0][28] ,
         \e[1][0][27] , \e[1][0][26] , \e[1][0][25] , \e[1][0][24] ,
         \e[1][0][23] , \e[1][0][22] , \e[1][0][21] , \e[1][0][20] ,
         \e[1][0][19] , \e[1][0][18] , \e[1][0][17] , \e[1][0][16] ,
         \e[1][0][15] , \e[1][0][14] , \e[1][0][13] , \e[1][0][12] ,
         \e[1][0][11] , \e[1][0][10] , \e[1][0][9] , \e[1][0][8] ,
         \e[1][0][7] , \e[1][0][6] , \e[1][0][5] , \e[1][0][4] , \e[1][0][3] ,
         \e[1][0][2] , \e[1][0][1] , \e[1][0][0] , \e[1][1][36] ,
         \e[1][1][35] , \e[1][1][34] , \e[1][1][33] , \e[1][1][32] ,
         \e[1][1][31] , \e[1][1][30] , \e[1][1][29] , \e[1][1][28] ,
         \e[1][1][27] , \e[1][1][26] , \e[1][1][25] , \e[1][1][24] ,
         \e[1][1][23] , \e[1][1][22] , \e[1][1][21] , \e[1][1][20] ,
         \e[1][1][19] , \e[1][1][18] , \e[1][1][17] , \e[1][1][16] ,
         \e[1][1][15] , \e[1][1][14] , \e[1][1][13] , \e[1][1][12] ,
         \e[1][1][11] , \e[1][1][10] , \e[1][1][9] , \e[1][1][8] ,
         \e[1][1][7] , \e[1][1][6] , \e[1][1][5] , \e[1][1][4] , \e[1][1][3] ,
         \e[1][1][2] , \e[1][1][1] , \e[1][1][0] , \e[1][2][36] ,
         \e[1][2][35] , \e[1][2][34] , \e[1][2][33] , \e[1][2][32] ,
         \e[1][2][31] , \e[1][2][30] , \e[1][2][29] , \e[1][2][28] ,
         \e[1][2][27] , \e[1][2][26] , \e[1][2][25] , \e[1][2][24] ,
         \e[1][2][23] , \e[1][2][22] , \e[1][2][21] , \e[1][2][20] ,
         \e[1][2][19] , \e[1][2][18] , \e[1][2][17] , \e[1][2][16] ,
         \e[1][2][15] , \e[1][2][14] , \e[1][2][13] , \e[1][2][12] ,
         \e[1][2][11] , \e[1][2][10] , \e[1][2][9] , \e[1][2][8] ,
         \e[1][2][7] , \e[1][2][6] , \e[1][2][5] , \e[1][2][4] , \e[1][2][3] ,
         \e[1][2][2] , \e[1][2][1] , \e[1][2][0] , \e[1][3][36] ,
         \e[1][3][35] , \e[1][3][34] , \e[1][3][33] , \e[1][3][32] ,
         \e[1][3][31] , \e[1][3][30] , \e[1][3][29] , \e[1][3][28] ,
         \e[1][3][27] , \e[1][3][26] , \e[1][3][25] , \e[1][3][24] ,
         \e[1][3][23] , \e[1][3][22] , \e[1][3][21] , \e[1][3][20] ,
         \e[1][3][19] , \e[1][3][18] , \e[1][3][17] , \e[1][3][16] ,
         \e[1][3][15] , \e[1][3][14] , \e[1][3][13] , \e[1][3][12] ,
         \e[1][3][11] , \e[1][3][10] , \e[1][3][9] , \e[1][3][8] ,
         \e[1][3][7] , \e[1][3][6] , \e[1][3][5] , \e[1][3][4] , \e[1][3][3] ,
         \e[1][3][2] , \e[1][3][1] , \e[1][3][0] , \e[2][0][36] ,
         \e[2][0][35] , \e[2][0][34] , \e[2][0][33] , \e[2][0][32] ,
         \e[2][0][31] , \e[2][0][30] , \e[2][0][29] , \e[2][0][28] ,
         \e[2][0][27] , \e[2][0][26] , \e[2][0][25] , \e[2][0][24] ,
         \e[2][0][23] , \e[2][0][22] , \e[2][0][21] , \e[2][0][20] ,
         \e[2][0][19] , \e[2][0][18] , \e[2][0][17] , \e[2][0][16] ,
         \e[2][0][15] , \e[2][0][14] , \e[2][0][13] , \e[2][0][12] ,
         \e[2][0][11] , \e[2][0][10] , \e[2][0][9] , \e[2][0][8] ,
         \e[2][0][7] , \e[2][0][6] , \e[2][0][5] , \e[2][0][4] , \e[2][0][3] ,
         \e[2][0][2] , \e[2][0][1] , \e[2][0][0] , \e[2][1][36] ,
         \e[2][1][35] , \e[2][1][34] , \e[2][1][33] , \e[2][1][32] ,
         \e[2][1][31] , \e[2][1][30] , \e[2][1][29] , \e[2][1][28] ,
         \e[2][1][27] , \e[2][1][26] , \e[2][1][25] , \e[2][1][24] ,
         \e[2][1][23] , \e[2][1][22] , \e[2][1][21] , \e[2][1][20] ,
         \e[2][1][19] , \e[2][1][18] , \e[2][1][17] , \e[2][1][16] ,
         \e[2][1][15] , \e[2][1][14] , \e[2][1][13] , \e[2][1][12] ,
         \e[2][1][11] , \e[2][1][10] , \e[2][1][9] , \e[2][1][8] ,
         \e[2][1][7] , \e[2][1][6] , \e[2][1][5] , \e[2][1][4] , \e[2][1][3] ,
         \e[2][1][2] , \e[2][1][1] , \e[2][1][0] , \e[2][2][36] ,
         \e[2][2][35] , \e[2][2][34] , \e[2][2][33] , \e[2][2][32] ,
         \e[2][2][31] , \e[2][2][30] , \e[2][2][29] , \e[2][2][28] ,
         \e[2][2][27] , \e[2][2][26] , \e[2][2][25] , \e[2][2][24] ,
         \e[2][2][23] , \e[2][2][22] , \e[2][2][21] , \e[2][2][20] ,
         \e[2][2][19] , \e[2][2][18] , \e[2][2][17] , \e[2][2][16] ,
         \e[2][2][15] , \e[2][2][14] , \e[2][2][13] , \e[2][2][12] ,
         \e[2][2][11] , \e[2][2][10] , \e[2][2][9] , \e[2][2][8] ,
         \e[2][2][7] , \e[2][2][6] , \e[2][2][5] , \e[2][2][4] , \e[2][2][3] ,
         \e[2][2][2] , \e[2][2][1] , \e[2][2][0] , \e[2][3][36] ,
         \e[2][3][35] , \e[2][3][34] , \e[2][3][33] , \e[2][3][32] ,
         \e[2][3][31] , \e[2][3][30] , \e[2][3][29] , \e[2][3][28] ,
         \e[2][3][27] , \e[2][3][26] , \e[2][3][25] , \e[2][3][24] ,
         \e[2][3][23] , \e[2][3][22] , \e[2][3][21] , \e[2][3][20] ,
         \e[2][3][19] , \e[2][3][18] , \e[2][3][17] , \e[2][3][16] ,
         \e[2][3][15] , \e[2][3][14] , \e[2][3][13] , \e[2][3][12] ,
         \e[2][3][11] , \e[2][3][10] , \e[2][3][9] , \e[2][3][8] ,
         \e[2][3][7] , \e[2][3][6] , \e[2][3][5] , \e[2][3][4] , \e[2][3][3] ,
         \e[2][3][2] , \e[2][3][1] , \e[2][3][0] , \e[3][0][36] ,
         \e[3][0][35] , \e[3][0][34] , \e[3][0][33] , \e[3][0][32] ,
         \e[3][0][31] , \e[3][0][30] , \e[3][0][29] , \e[3][0][28] ,
         \e[3][0][27] , \e[3][0][26] , \e[3][0][25] , \e[3][0][24] ,
         \e[3][0][23] , \e[3][0][22] , \e[3][0][21] , \e[3][0][20] ,
         \e[3][0][19] , \e[3][0][18] , \e[3][0][17] , \e[3][0][16] ,
         \e[3][0][15] , \e[3][0][14] , \e[3][0][13] , \e[3][0][12] ,
         \e[3][0][11] , \e[3][0][10] , \e[3][0][9] , \e[3][0][8] ,
         \e[3][0][7] , \e[3][0][6] , \e[3][0][5] , \e[3][0][4] , \e[3][0][3] ,
         \e[3][0][2] , \e[3][0][1] , \e[3][0][0] , \e[3][1][36] ,
         \e[3][1][35] , \e[3][1][34] , \e[3][1][33] , \e[3][1][32] ,
         \e[3][1][31] , \e[3][1][30] , \e[3][1][29] , \e[3][1][28] ,
         \e[3][1][27] , \e[3][1][26] , \e[3][1][25] , \e[3][1][24] ,
         \e[3][1][23] , \e[3][1][22] , \e[3][1][21] , \e[3][1][20] ,
         \e[3][1][19] , \e[3][1][18] , \e[3][1][17] , \e[3][1][16] ,
         \e[3][1][15] , \e[3][1][14] , \e[3][1][13] , \e[3][1][12] ,
         \e[3][1][11] , \e[3][1][10] , \e[3][1][9] , \e[3][1][8] ,
         \e[3][1][7] , \e[3][1][6] , \e[3][1][5] , \e[3][1][4] , \e[3][1][3] ,
         \e[3][1][2] , \e[3][1][1] , \e[3][1][0] , \e[3][2][36] ,
         \e[3][2][35] , \e[3][2][34] , \e[3][2][33] , \e[3][2][32] ,
         \e[3][2][31] , \e[3][2][30] , \e[3][2][29] , \e[3][2][28] ,
         \e[3][2][27] , \e[3][2][26] , \e[3][2][25] , \e[3][2][24] ,
         \e[3][2][23] , \e[3][2][22] , \e[3][2][21] , \e[3][2][20] ,
         \e[3][2][19] , \e[3][2][18] , \e[3][2][17] , \e[3][2][16] ,
         \e[3][2][15] , \e[3][2][14] , \e[3][2][13] , \e[3][2][12] ,
         \e[3][2][11] , \e[3][2][10] , \e[3][2][9] , \e[3][2][8] ,
         \e[3][2][7] , \e[3][2][6] , \e[3][2][5] , \e[3][2][4] , \e[3][2][3] ,
         \e[3][2][2] , \e[3][2][1] , \e[3][2][0] , \e[3][3][36] ,
         \e[3][3][35] , \e[3][3][34] , \e[3][3][33] , \e[3][3][32] ,
         \e[3][3][31] , \e[3][3][30] , \e[3][3][29] , \e[3][3][28] ,
         \e[3][3][27] , \e[3][3][26] , \e[3][3][25] , \e[3][3][24] ,
         \e[3][3][23] , \e[3][3][22] , \e[3][3][21] , \e[3][3][20] ,
         \e[3][3][19] , \e[3][3][18] , \e[3][3][17] , \e[3][3][16] ,
         \e[3][3][15] , \e[3][3][14] , \e[3][3][13] , \e[3][3][12] ,
         \e[3][3][11] , \e[3][3][10] , \e[3][3][9] , \e[3][3][8] ,
         \e[3][3][7] , \e[3][3][6] , \e[3][3][5] , \e[3][3][4] , \e[3][3][3] ,
         \e[3][3][2] , \e[3][3][1] , \e[3][3][0] , \w_b[0][0] , \w_b[0][1] ,
         \w_b[0][2] , \w_b[0][3] , \w_b[1][0] , \w_b[1][1] , \w_b[1][2] ,
         \w_b[1][3] , \w_b[2][0] , \w_b[2][1] , \w_b[2][2] , \w_b[2][3] ,
         \w_b[3][0] , \w_b[3][1] , \w_b[3][2] , \w_b[3][3] , \e_b[0][0] ,
         \e_b[0][1] , \e_b[0][2] , \e_b[0][3] , \e_b[1][0] , \e_b[1][1] ,
         \e_b[1][2] , \e_b[1][3] , \e_b[2][0] , \e_b[2][1] , \e_b[2][2] ,
         \e_b[2][3] , \e_b[3][0] , \e_b[3][1] , \e_b[3][2] , \e_b[3][3] ,
         \w[0][0][36] , \w[0][0][35] , \w[0][0][34] , \w[0][0][33] ,
         \w[0][0][32] , \w[0][0][31] , \w[0][0][30] , \w[0][0][29] ,
         \w[0][0][28] , \w[0][0][27] , \w[0][0][26] , \w[0][0][25] ,
         \w[0][0][24] , \w[0][0][23] , \w[0][0][22] , \w[0][0][21] ,
         \w[0][0][20] , \w[0][0][19] , \w[0][0][18] , \w[0][0][17] ,
         \w[0][0][16] , \w[0][0][15] , \w[0][0][14] , \w[0][0][13] ,
         \w[0][0][12] , \w[0][0][11] , \w[0][0][10] , \w[0][0][9] ,
         \w[0][0][8] , \w[0][0][7] , \w[0][0][6] , \w[0][0][5] , \w[0][0][4] ,
         \w[0][0][3] , \w[0][0][2] , \w[0][0][1] , \w[0][0][0] , \w[0][1][36] ,
         \w[0][1][35] , \w[0][1][34] , \w[0][1][33] , \w[0][1][32] ,
         \w[0][1][31] , \w[0][1][30] , \w[0][1][29] , \w[0][1][28] ,
         \w[0][1][27] , \w[0][1][26] , \w[0][1][25] , \w[0][1][24] ,
         \w[0][1][23] , \w[0][1][22] , \w[0][1][21] , \w[0][1][20] ,
         \w[0][1][19] , \w[0][1][18] , \w[0][1][17] , \w[0][1][16] ,
         \w[0][1][15] , \w[0][1][14] , \w[0][1][13] , \w[0][1][12] ,
         \w[0][1][11] , \w[0][1][10] , \w[0][1][9] , \w[0][1][8] ,
         \w[0][1][7] , \w[0][1][6] , \w[0][1][5] , \w[0][1][4] , \w[0][1][3] ,
         \w[0][1][2] , \w[0][1][1] , \w[0][1][0] , \w[0][2][36] ,
         \w[0][2][35] , \w[0][2][34] , \w[0][2][33] , \w[0][2][32] ,
         \w[0][2][31] , \w[0][2][30] , \w[0][2][29] , \w[0][2][28] ,
         \w[0][2][27] , \w[0][2][26] , \w[0][2][25] , \w[0][2][24] ,
         \w[0][2][23] , \w[0][2][22] , \w[0][2][21] , \w[0][2][20] ,
         \w[0][2][19] , \w[0][2][18] , \w[0][2][17] , \w[0][2][16] ,
         \w[0][2][15] , \w[0][2][14] , \w[0][2][13] , \w[0][2][12] ,
         \w[0][2][11] , \w[0][2][10] , \w[0][2][9] , \w[0][2][8] ,
         \w[0][2][7] , \w[0][2][6] , \w[0][2][5] , \w[0][2][4] , \w[0][2][3] ,
         \w[0][2][2] , \w[0][2][1] , \w[0][2][0] , \w[0][3][36] ,
         \w[0][3][35] , \w[0][3][34] , \w[0][3][33] , \w[0][3][32] ,
         \w[0][3][31] , \w[0][3][30] , \w[0][3][29] , \w[0][3][28] ,
         \w[0][3][27] , \w[0][3][26] , \w[0][3][25] , \w[0][3][24] ,
         \w[0][3][23] , \w[0][3][22] , \w[0][3][21] , \w[0][3][20] ,
         \w[0][3][19] , \w[0][3][18] , \w[0][3][17] , \w[0][3][16] ,
         \w[0][3][15] , \w[0][3][14] , \w[0][3][13] , \w[0][3][12] ,
         \w[0][3][11] , \w[0][3][10] , \w[0][3][9] , \w[0][3][8] ,
         \w[0][3][7] , \w[0][3][6] , \w[0][3][5] , \w[0][3][4] , \w[0][3][3] ,
         \w[0][3][2] , \w[0][3][1] , \w[0][3][0] , \w[1][0][36] ,
         \w[1][0][35] , \w[1][0][34] , \w[1][0][33] , \w[1][0][32] ,
         \w[1][0][31] , \w[1][0][30] , \w[1][0][29] , \w[1][0][28] ,
         \w[1][0][27] , \w[1][0][26] , \w[1][0][25] , \w[1][0][24] ,
         \w[1][0][23] , \w[1][0][22] , \w[1][0][21] , \w[1][0][20] ,
         \w[1][0][19] , \w[1][0][18] , \w[1][0][17] , \w[1][0][16] ,
         \w[1][0][15] , \w[1][0][14] , \w[1][0][13] , \w[1][0][12] ,
         \w[1][0][11] , \w[1][0][10] , \w[1][0][9] , \w[1][0][8] ,
         \w[1][0][7] , \w[1][0][6] , \w[1][0][5] , \w[1][0][4] , \w[1][0][3] ,
         \w[1][0][2] , \w[1][0][1] , \w[1][0][0] , \w[1][1][36] ,
         \w[1][1][35] , \w[1][1][34] , \w[1][1][33] , \w[1][1][32] ,
         \w[1][1][31] , \w[1][1][30] , \w[1][1][29] , \w[1][1][28] ,
         \w[1][1][27] , \w[1][1][26] , \w[1][1][25] , \w[1][1][24] ,
         \w[1][1][23] , \w[1][1][22] , \w[1][1][21] , \w[1][1][20] ,
         \w[1][1][19] , \w[1][1][18] , \w[1][1][17] , \w[1][1][16] ,
         \w[1][1][15] , \w[1][1][14] , \w[1][1][13] , \w[1][1][12] ,
         \w[1][1][11] , \w[1][1][10] , \w[1][1][9] , \w[1][1][8] ,
         \w[1][1][7] , \w[1][1][6] , \w[1][1][5] , \w[1][1][4] , \w[1][1][3] ,
         \w[1][1][2] , \w[1][1][1] , \w[1][1][0] , \w[1][2][36] ,
         \w[1][2][35] , \w[1][2][34] , \w[1][2][33] , \w[1][2][32] ,
         \w[1][2][31] , \w[1][2][30] , \w[1][2][29] , \w[1][2][28] ,
         \w[1][2][27] , \w[1][2][26] , \w[1][2][25] , \w[1][2][24] ,
         \w[1][2][23] , \w[1][2][22] , \w[1][2][21] , \w[1][2][20] ,
         \w[1][2][19] , \w[1][2][18] , \w[1][2][17] , \w[1][2][16] ,
         \w[1][2][15] , \w[1][2][14] , \w[1][2][13] , \w[1][2][12] ,
         \w[1][2][11] , \w[1][2][10] , \w[1][2][9] , \w[1][2][8] ,
         \w[1][2][7] , \w[1][2][6] , \w[1][2][5] , \w[1][2][4] , \w[1][2][3] ,
         \w[1][2][2] , \w[1][2][1] , \w[1][2][0] , \w[1][3][36] ,
         \w[1][3][35] , \w[1][3][34] , \w[1][3][33] , \w[1][3][32] ,
         \w[1][3][31] , \w[1][3][30] , \w[1][3][29] , \w[1][3][28] ,
         \w[1][3][27] , \w[1][3][26] , \w[1][3][25] , \w[1][3][24] ,
         \w[1][3][23] , \w[1][3][22] , \w[1][3][21] , \w[1][3][20] ,
         \w[1][3][19] , \w[1][3][18] , \w[1][3][17] , \w[1][3][16] ,
         \w[1][3][15] , \w[1][3][14] , \w[1][3][13] , \w[1][3][12] ,
         \w[1][3][11] , \w[1][3][10] , \w[1][3][9] , \w[1][3][8] ,
         \w[1][3][7] , \w[1][3][6] , \w[1][3][5] , \w[1][3][4] , \w[1][3][3] ,
         \w[1][3][2] , \w[1][3][1] , \w[1][3][0] , \w[2][0][36] ,
         \w[2][0][35] , \w[2][0][34] , \w[2][0][33] , \w[2][0][32] ,
         \w[2][0][31] , \w[2][0][30] , \w[2][0][29] , \w[2][0][28] ,
         \w[2][0][27] , \w[2][0][26] , \w[2][0][25] , \w[2][0][24] ,
         \w[2][0][23] , \w[2][0][22] , \w[2][0][21] , \w[2][0][20] ,
         \w[2][0][19] , \w[2][0][18] , \w[2][0][17] , \w[2][0][16] ,
         \w[2][0][15] , \w[2][0][14] , \w[2][0][13] , \w[2][0][12] ,
         \w[2][0][11] , \w[2][0][10] , \w[2][0][9] , \w[2][0][8] ,
         \w[2][0][7] , \w[2][0][6] , \w[2][0][5] , \w[2][0][4] , \w[2][0][3] ,
         \w[2][0][2] , \w[2][0][1] , \w[2][0][0] , \w[2][1][36] ,
         \w[2][1][35] , \w[2][1][34] , \w[2][1][33] , \w[2][1][32] ,
         \w[2][1][31] , \w[2][1][30] , \w[2][1][29] , \w[2][1][28] ,
         \w[2][1][27] , \w[2][1][26] , \w[2][1][25] , \w[2][1][24] ,
         \w[2][1][23] , \w[2][1][22] , \w[2][1][21] , \w[2][1][20] ,
         \w[2][1][19] , \w[2][1][18] , \w[2][1][17] , \w[2][1][16] ,
         \w[2][1][15] , \w[2][1][14] , \w[2][1][13] , \w[2][1][12] ,
         \w[2][1][11] , \w[2][1][10] , \w[2][1][9] , \w[2][1][8] ,
         \w[2][1][7] , \w[2][1][6] , \w[2][1][5] , \w[2][1][4] , \w[2][1][3] ,
         \w[2][1][2] , \w[2][1][1] , \w[2][1][0] , \w[2][2][36] ,
         \w[2][2][35] , \w[2][2][34] , \w[2][2][33] , \w[2][2][32] ,
         \w[2][2][31] , \w[2][2][30] , \w[2][2][29] , \w[2][2][28] ,
         \w[2][2][27] , \w[2][2][26] , \w[2][2][25] , \w[2][2][24] ,
         \w[2][2][23] , \w[2][2][22] , \w[2][2][21] , \w[2][2][20] ,
         \w[2][2][19] , \w[2][2][18] , \w[2][2][17] , \w[2][2][16] ,
         \w[2][2][15] , \w[2][2][14] , \w[2][2][13] , \w[2][2][12] ,
         \w[2][2][11] , \w[2][2][10] , \w[2][2][9] , \w[2][2][8] ,
         \w[2][2][7] , \w[2][2][6] , \w[2][2][5] , \w[2][2][4] , \w[2][2][3] ,
         \w[2][2][2] , \w[2][2][1] , \w[2][2][0] , \w[2][3][36] ,
         \w[2][3][35] , \w[2][3][34] , \w[2][3][33] , \w[2][3][32] ,
         \w[2][3][31] , \w[2][3][30] , \w[2][3][29] , \w[2][3][28] ,
         \w[2][3][27] , \w[2][3][26] , \w[2][3][25] , \w[2][3][24] ,
         \w[2][3][23] , \w[2][3][22] , \w[2][3][21] , \w[2][3][20] ,
         \w[2][3][19] , \w[2][3][18] , \w[2][3][17] , \w[2][3][16] ,
         \w[2][3][15] , \w[2][3][14] , \w[2][3][13] , \w[2][3][12] ,
         \w[2][3][11] , \w[2][3][10] , \w[2][3][9] , \w[2][3][8] ,
         \w[2][3][7] , \w[2][3][6] , \w[2][3][5] , \w[2][3][4] , \w[2][3][3] ,
         \w[2][3][2] , \w[2][3][1] , \w[2][3][0] , \w[3][0][36] ,
         \w[3][0][35] , \w[3][0][34] , \w[3][0][33] , \w[3][0][32] ,
         \w[3][0][31] , \w[3][0][30] , \w[3][0][29] , \w[3][0][28] ,
         \w[3][0][27] , \w[3][0][26] , \w[3][0][25] , \w[3][0][24] ,
         \w[3][0][23] , \w[3][0][22] , \w[3][0][21] , \w[3][0][20] ,
         \w[3][0][19] , \w[3][0][18] , \w[3][0][17] , \w[3][0][16] ,
         \w[3][0][15] , \w[3][0][14] , \w[3][0][13] , \w[3][0][12] ,
         \w[3][0][11] , \w[3][0][10] , \w[3][0][9] , \w[3][0][8] ,
         \w[3][0][7] , \w[3][0][6] , \w[3][0][5] , \w[3][0][4] , \w[3][0][3] ,
         \w[3][0][2] , \w[3][0][1] , \w[3][0][0] , \w[3][1][36] ,
         \w[3][1][35] , \w[3][1][34] , \w[3][1][33] , \w[3][1][32] ,
         \w[3][1][31] , \w[3][1][30] , \w[3][1][29] , \w[3][1][28] ,
         \w[3][1][27] , \w[3][1][26] , \w[3][1][25] , \w[3][1][24] ,
         \w[3][1][23] , \w[3][1][22] , \w[3][1][21] , \w[3][1][20] ,
         \w[3][1][19] , \w[3][1][18] , \w[3][1][17] , \w[3][1][16] ,
         \w[3][1][15] , \w[3][1][14] , \w[3][1][13] , \w[3][1][12] ,
         \w[3][1][11] , \w[3][1][10] , \w[3][1][9] , \w[3][1][8] ,
         \w[3][1][7] , \w[3][1][6] , \w[3][1][5] , \w[3][1][4] , \w[3][1][3] ,
         \w[3][1][2] , \w[3][1][1] , \w[3][1][0] , \w[3][2][36] ,
         \w[3][2][35] , \w[3][2][34] , \w[3][2][33] , \w[3][2][32] ,
         \w[3][2][31] , \w[3][2][30] , \w[3][2][29] , \w[3][2][28] ,
         \w[3][2][27] , \w[3][2][26] , \w[3][2][25] , \w[3][2][24] ,
         \w[3][2][23] , \w[3][2][22] , \w[3][2][21] , \w[3][2][20] ,
         \w[3][2][19] , \w[3][2][18] , \w[3][2][17] , \w[3][2][16] ,
         \w[3][2][15] , \w[3][2][14] , \w[3][2][13] , \w[3][2][12] ,
         \w[3][2][11] , \w[3][2][10] , \w[3][2][9] , \w[3][2][8] ,
         \w[3][2][7] , \w[3][2][6] , \w[3][2][5] , \w[3][2][4] , \w[3][2][3] ,
         \w[3][2][2] , \w[3][2][1] , \w[3][2][0] , \w[3][3][36] ,
         \w[3][3][35] , \w[3][3][34] , \w[3][3][33] , \w[3][3][32] ,
         \w[3][3][31] , \w[3][3][30] , \w[3][3][29] , \w[3][3][28] ,
         \w[3][3][27] , \w[3][3][26] , \w[3][3][25] , \w[3][3][24] ,
         \w[3][3][23] , \w[3][3][22] , \w[3][3][21] , \w[3][3][20] ,
         \w[3][3][19] , \w[3][3][18] , \w[3][3][17] , \w[3][3][16] ,
         \w[3][3][15] , \w[3][3][14] , \w[3][3][13] , \w[3][3][12] ,
         \w[3][3][11] , \w[3][3][10] , \w[3][3][9] , \w[3][3][8] ,
         \w[3][3][7] , \w[3][3][6] , \w[3][3][5] , \w[3][3][4] , \w[3][3][3] ,
         \w[3][3][2] , \w[3][3][1] , \w[3][3][0] , \n[0][0][36] ,
         \n[0][0][35] , \n[0][0][34] , \n[0][0][33] , \n[0][0][32] ,
         \n[0][0][31] , \n[0][0][30] , \n[0][0][29] , \n[0][0][28] ,
         \n[0][0][27] , \n[0][0][26] , \n[0][0][25] , \n[0][0][24] ,
         \n[0][0][23] , \n[0][0][22] , \n[0][0][21] , \n[0][0][20] ,
         \n[0][0][19] , \n[0][0][18] , \n[0][0][17] , \n[0][0][16] ,
         \n[0][0][15] , \n[0][0][14] , \n[0][0][13] , \n[0][0][12] ,
         \n[0][0][11] , \n[0][0][10] , \n[0][0][9] , \n[0][0][8] ,
         \n[0][0][7] , \n[0][0][6] , \n[0][0][5] , \n[0][0][4] , \n[0][0][3] ,
         \n[0][0][2] , \n[0][0][1] , \n[0][0][0] , \n[0][1][36] ,
         \n[0][1][35] , \n[0][1][34] , \n[0][1][33] , \n[0][1][32] ,
         \n[0][1][31] , \n[0][1][30] , \n[0][1][29] , \n[0][1][28] ,
         \n[0][1][27] , \n[0][1][26] , \n[0][1][25] , \n[0][1][24] ,
         \n[0][1][23] , \n[0][1][22] , \n[0][1][21] , \n[0][1][20] ,
         \n[0][1][19] , \n[0][1][18] , \n[0][1][17] , \n[0][1][16] ,
         \n[0][1][15] , \n[0][1][14] , \n[0][1][13] , \n[0][1][12] ,
         \n[0][1][11] , \n[0][1][10] , \n[0][1][9] , \n[0][1][8] ,
         \n[0][1][7] , \n[0][1][6] , \n[0][1][5] , \n[0][1][4] , \n[0][1][3] ,
         \n[0][1][2] , \n[0][1][1] , \n[0][1][0] , \n[0][2][36] ,
         \n[0][2][35] , \n[0][2][34] , \n[0][2][33] , \n[0][2][32] ,
         \n[0][2][31] , \n[0][2][30] , \n[0][2][29] , \n[0][2][28] ,
         \n[0][2][27] , \n[0][2][26] , \n[0][2][25] , \n[0][2][24] ,
         \n[0][2][23] , \n[0][2][22] , \n[0][2][21] , \n[0][2][20] ,
         \n[0][2][19] , \n[0][2][18] , \n[0][2][17] , \n[0][2][16] ,
         \n[0][2][15] , \n[0][2][14] , \n[0][2][13] , \n[0][2][12] ,
         \n[0][2][11] , \n[0][2][10] , \n[0][2][9] , \n[0][2][8] ,
         \n[0][2][7] , \n[0][2][6] , \n[0][2][5] , \n[0][2][4] , \n[0][2][3] ,
         \n[0][2][2] , \n[0][2][1] , \n[0][2][0] , \n[0][3][36] ,
         \n[0][3][35] , \n[0][3][34] , \n[0][3][33] , \n[0][3][32] ,
         \n[0][3][31] , \n[0][3][30] , \n[0][3][29] , \n[0][3][28] ,
         \n[0][3][27] , \n[0][3][26] , \n[0][3][25] , \n[0][3][24] ,
         \n[0][3][23] , \n[0][3][22] , \n[0][3][21] , \n[0][3][20] ,
         \n[0][3][19] , \n[0][3][18] , \n[0][3][17] , \n[0][3][16] ,
         \n[0][3][15] , \n[0][3][14] , \n[0][3][13] , \n[0][3][12] ,
         \n[0][3][11] , \n[0][3][10] , \n[0][3][9] , \n[0][3][8] ,
         \n[0][3][7] , \n[0][3][6] , \n[0][3][5] , \n[0][3][4] , \n[0][3][3] ,
         \n[0][3][2] , \n[0][3][1] , \n[0][3][0] , \n[1][0][36] ,
         \n[1][0][35] , \n[1][0][34] , \n[1][0][33] , \n[1][0][32] ,
         \n[1][0][31] , \n[1][0][30] , \n[1][0][29] , \n[1][0][28] ,
         \n[1][0][27] , \n[1][0][26] , \n[1][0][25] , \n[1][0][24] ,
         \n[1][0][23] , \n[1][0][22] , \n[1][0][21] , \n[1][0][20] ,
         \n[1][0][19] , \n[1][0][18] , \n[1][0][17] , \n[1][0][16] ,
         \n[1][0][15] , \n[1][0][14] , \n[1][0][13] , \n[1][0][12] ,
         \n[1][0][11] , \n[1][0][10] , \n[1][0][9] , \n[1][0][8] ,
         \n[1][0][7] , \n[1][0][6] , \n[1][0][5] , \n[1][0][4] , \n[1][0][3] ,
         \n[1][0][2] , \n[1][0][1] , \n[1][0][0] , \n[1][1][36] ,
         \n[1][1][35] , \n[1][1][34] , \n[1][1][33] , \n[1][1][32] ,
         \n[1][1][31] , \n[1][1][30] , \n[1][1][29] , \n[1][1][28] ,
         \n[1][1][27] , \n[1][1][26] , \n[1][1][25] , \n[1][1][24] ,
         \n[1][1][23] , \n[1][1][22] , \n[1][1][21] , \n[1][1][20] ,
         \n[1][1][19] , \n[1][1][18] , \n[1][1][17] , \n[1][1][16] ,
         \n[1][1][15] , \n[1][1][14] , \n[1][1][13] , \n[1][1][12] ,
         \n[1][1][11] , \n[1][1][10] , \n[1][1][9] , \n[1][1][8] ,
         \n[1][1][7] , \n[1][1][6] , \n[1][1][5] , \n[1][1][4] , \n[1][1][3] ,
         \n[1][1][2] , \n[1][1][1] , \n[1][1][0] , \n[1][2][36] ,
         \n[1][2][35] , \n[1][2][34] , \n[1][2][33] , \n[1][2][32] ,
         \n[1][2][31] , \n[1][2][30] , \n[1][2][29] , \n[1][2][28] ,
         \n[1][2][27] , \n[1][2][26] , \n[1][2][25] , \n[1][2][24] ,
         \n[1][2][23] , \n[1][2][22] , \n[1][2][21] , \n[1][2][20] ,
         \n[1][2][19] , \n[1][2][18] , \n[1][2][17] , \n[1][2][16] ,
         \n[1][2][15] , \n[1][2][14] , \n[1][2][13] , \n[1][2][12] ,
         \n[1][2][11] , \n[1][2][10] , \n[1][2][9] , \n[1][2][8] ,
         \n[1][2][7] , \n[1][2][6] , \n[1][2][5] , \n[1][2][4] , \n[1][2][3] ,
         \n[1][2][2] , \n[1][2][1] , \n[1][2][0] , \n[1][3][36] ,
         \n[1][3][35] , \n[1][3][34] , \n[1][3][33] , \n[1][3][32] ,
         \n[1][3][31] , \n[1][3][30] , \n[1][3][29] , \n[1][3][28] ,
         \n[1][3][27] , \n[1][3][26] , \n[1][3][25] , \n[1][3][24] ,
         \n[1][3][23] , \n[1][3][22] , \n[1][3][21] , \n[1][3][20] ,
         \n[1][3][19] , \n[1][3][18] , \n[1][3][17] , \n[1][3][16] ,
         \n[1][3][15] , \n[1][3][14] , \n[1][3][13] , \n[1][3][12] ,
         \n[1][3][11] , \n[1][3][10] , \n[1][3][9] , \n[1][3][8] ,
         \n[1][3][7] , \n[1][3][6] , \n[1][3][5] , \n[1][3][4] , \n[1][3][3] ,
         \n[1][3][2] , \n[1][3][1] , \n[1][3][0] , \n[2][0][36] ,
         \n[2][0][35] , \n[2][0][34] , \n[2][0][33] , \n[2][0][32] ,
         \n[2][0][31] , \n[2][0][30] , \n[2][0][29] , \n[2][0][28] ,
         \n[2][0][27] , \n[2][0][26] , \n[2][0][25] , \n[2][0][24] ,
         \n[2][0][23] , \n[2][0][22] , \n[2][0][21] , \n[2][0][20] ,
         \n[2][0][19] , \n[2][0][18] , \n[2][0][17] , \n[2][0][16] ,
         \n[2][0][15] , \n[2][0][14] , \n[2][0][13] , \n[2][0][12] ,
         \n[2][0][11] , \n[2][0][10] , \n[2][0][9] , \n[2][0][8] ,
         \n[2][0][7] , \n[2][0][6] , \n[2][0][5] , \n[2][0][4] , \n[2][0][3] ,
         \n[2][0][2] , \n[2][0][1] , \n[2][0][0] , \n[2][1][36] ,
         \n[2][1][35] , \n[2][1][34] , \n[2][1][33] , \n[2][1][32] ,
         \n[2][1][31] , \n[2][1][30] , \n[2][1][29] , \n[2][1][28] ,
         \n[2][1][27] , \n[2][1][26] , \n[2][1][25] , \n[2][1][24] ,
         \n[2][1][23] , \n[2][1][22] , \n[2][1][21] , \n[2][1][20] ,
         \n[2][1][19] , \n[2][1][18] , \n[2][1][17] , \n[2][1][16] ,
         \n[2][1][15] , \n[2][1][14] , \n[2][1][13] , \n[2][1][12] ,
         \n[2][1][11] , \n[2][1][10] , \n[2][1][9] , \n[2][1][8] ,
         \n[2][1][7] , \n[2][1][6] , \n[2][1][5] , \n[2][1][4] , \n[2][1][3] ,
         \n[2][1][2] , \n[2][1][1] , \n[2][1][0] , \n[2][2][36] ,
         \n[2][2][35] , \n[2][2][34] , \n[2][2][33] , \n[2][2][32] ,
         \n[2][2][31] , \n[2][2][30] , \n[2][2][29] , \n[2][2][28] ,
         \n[2][2][27] , \n[2][2][26] , \n[2][2][25] , \n[2][2][24] ,
         \n[2][2][23] , \n[2][2][22] , \n[2][2][21] , \n[2][2][20] ,
         \n[2][2][19] , \n[2][2][18] , \n[2][2][17] , \n[2][2][16] ,
         \n[2][2][15] , \n[2][2][14] , \n[2][2][13] , \n[2][2][12] ,
         \n[2][2][11] , \n[2][2][10] , \n[2][2][9] , \n[2][2][8] ,
         \n[2][2][7] , \n[2][2][6] , \n[2][2][5] , \n[2][2][4] , \n[2][2][3] ,
         \n[2][2][2] , \n[2][2][1] , \n[2][2][0] , \n[2][3][36] ,
         \n[2][3][35] , \n[2][3][34] , \n[2][3][33] , \n[2][3][32] ,
         \n[2][3][31] , \n[2][3][30] , \n[2][3][29] , \n[2][3][28] ,
         \n[2][3][27] , \n[2][3][26] , \n[2][3][25] , \n[2][3][24] ,
         \n[2][3][23] , \n[2][3][22] , \n[2][3][21] , \n[2][3][20] ,
         \n[2][3][19] , \n[2][3][18] , \n[2][3][17] , \n[2][3][16] ,
         \n[2][3][15] , \n[2][3][14] , \n[2][3][13] , \n[2][3][12] ,
         \n[2][3][11] , \n[2][3][10] , \n[2][3][9] , \n[2][3][8] ,
         \n[2][3][7] , \n[2][3][6] , \n[2][3][5] , \n[2][3][4] , \n[2][3][3] ,
         \n[2][3][2] , \n[2][3][1] , \n[2][3][0] , \n[3][0][36] ,
         \n[3][0][35] , \n[3][0][34] , \n[3][0][33] , \n[3][0][32] ,
         \n[3][0][31] , \n[3][0][30] , \n[3][0][29] , \n[3][0][28] ,
         \n[3][0][27] , \n[3][0][26] , \n[3][0][25] , \n[3][0][24] ,
         \n[3][0][23] , \n[3][0][22] , \n[3][0][21] , \n[3][0][20] ,
         \n[3][0][19] , \n[3][0][18] , \n[3][0][17] , \n[3][0][16] ,
         \n[3][0][15] , \n[3][0][14] , \n[3][0][13] , \n[3][0][12] ,
         \n[3][0][11] , \n[3][0][10] , \n[3][0][9] , \n[3][0][8] ,
         \n[3][0][7] , \n[3][0][6] , \n[3][0][5] , \n[3][0][4] , \n[3][0][3] ,
         \n[3][0][2] , \n[3][0][1] , \n[3][0][0] , \n[3][1][36] ,
         \n[3][1][35] , \n[3][1][34] , \n[3][1][33] , \n[3][1][32] ,
         \n[3][1][31] , \n[3][1][30] , \n[3][1][29] , \n[3][1][28] ,
         \n[3][1][27] , \n[3][1][26] , \n[3][1][25] , \n[3][1][24] ,
         \n[3][1][23] , \n[3][1][22] , \n[3][1][21] , \n[3][1][20] ,
         \n[3][1][19] , \n[3][1][18] , \n[3][1][17] , \n[3][1][16] ,
         \n[3][1][15] , \n[3][1][14] , \n[3][1][13] , \n[3][1][12] ,
         \n[3][1][11] , \n[3][1][10] , \n[3][1][9] , \n[3][1][8] ,
         \n[3][1][7] , \n[3][1][6] , \n[3][1][5] , \n[3][1][4] , \n[3][1][3] ,
         \n[3][1][2] , \n[3][1][1] , \n[3][1][0] , \n[3][2][36] ,
         \n[3][2][35] , \n[3][2][34] , \n[3][2][33] , \n[3][2][32] ,
         \n[3][2][31] , \n[3][2][30] , \n[3][2][29] , \n[3][2][28] ,
         \n[3][2][27] , \n[3][2][26] , \n[3][2][25] , \n[3][2][24] ,
         \n[3][2][23] , \n[3][2][22] , \n[3][2][21] , \n[3][2][20] ,
         \n[3][2][19] , \n[3][2][18] , \n[3][2][17] , \n[3][2][16] ,
         \n[3][2][15] , \n[3][2][14] , \n[3][2][13] , \n[3][2][12] ,
         \n[3][2][11] , \n[3][2][10] , \n[3][2][9] , \n[3][2][8] ,
         \n[3][2][7] , \n[3][2][6] , \n[3][2][5] , \n[3][2][4] , \n[3][2][3] ,
         \n[3][2][2] , \n[3][2][1] , \n[3][2][0] , \n[3][3][36] ,
         \n[3][3][35] , \n[3][3][34] , \n[3][3][33] , \n[3][3][32] ,
         \n[3][3][31] , \n[3][3][30] , \n[3][3][29] , \n[3][3][28] ,
         \n[3][3][27] , \n[3][3][26] , \n[3][3][25] , \n[3][3][24] ,
         \n[3][3][23] , \n[3][3][22] , \n[3][3][21] , \n[3][3][20] ,
         \n[3][3][19] , \n[3][3][18] , \n[3][3][17] , \n[3][3][16] ,
         \n[3][3][15] , \n[3][3][14] , \n[3][3][13] , \n[3][3][12] ,
         \n[3][3][11] , \n[3][3][10] , \n[3][3][9] , \n[3][3][8] ,
         \n[3][3][7] , \n[3][3][6] , \n[3][3][5] , \n[3][3][4] , \n[3][3][3] ,
         \n[3][3][2] , \n[3][3][1] , \n[3][3][0] , \w_b_tx[0][0] ,
         \w_b_tx[0][1] , \w_b_tx[0][2] , \w_b_tx[0][3] , \w_b_tx[1][0] ,
         \w_b_tx[1][1] , \w_b_tx[1][2] , \w_b_tx[1][3] , \w_b_tx[2][0] ,
         \w_b_tx[2][1] , \w_b_tx[2][2] , \w_b_tx[2][3] , \w_b_tx[3][0] ,
         \w_b_tx[3][1] , \w_b_tx[3][2] , \w_b_tx[3][3] , \s_tx[0][0][36] ,
         \s_tx[0][0][35] , \s_tx[0][0][34] , \s_tx[0][0][33] ,
         \s_tx[0][0][32] , \s_tx[0][0][31] , \s_tx[0][0][30] ,
         \s_tx[0][0][29] , \s_tx[0][0][28] , \s_tx[0][0][27] ,
         \s_tx[0][0][26] , \s_tx[0][0][25] , \s_tx[0][0][24] ,
         \s_tx[0][0][23] , \s_tx[0][0][22] , \s_tx[0][0][21] ,
         \s_tx[0][0][20] , \s_tx[0][0][19] , \s_tx[0][0][18] ,
         \s_tx[0][0][17] , \s_tx[0][0][16] , \s_tx[0][0][15] ,
         \s_tx[0][0][14] , \s_tx[0][0][13] , \s_tx[0][0][12] ,
         \s_tx[0][0][11] , \s_tx[0][0][10] , \s_tx[0][0][9] , \s_tx[0][0][8] ,
         \s_tx[0][0][7] , \s_tx[0][0][6] , \s_tx[0][0][5] , \s_tx[0][0][4] ,
         \s_tx[0][0][3] , \s_tx[0][0][2] , \s_tx[0][0][1] , \s_tx[0][0][0] ,
         \s_tx[0][1][36] , \s_tx[0][1][35] , \s_tx[0][1][34] ,
         \s_tx[0][1][33] , \s_tx[0][1][32] , \s_tx[0][1][31] ,
         \s_tx[0][1][30] , \s_tx[0][1][29] , \s_tx[0][1][28] ,
         \s_tx[0][1][27] , \s_tx[0][1][26] , \s_tx[0][1][25] ,
         \s_tx[0][1][24] , \s_tx[0][1][23] , \s_tx[0][1][22] ,
         \s_tx[0][1][21] , \s_tx[0][1][20] , \s_tx[0][1][19] ,
         \s_tx[0][1][18] , \s_tx[0][1][17] , \s_tx[0][1][16] ,
         \s_tx[0][1][15] , \s_tx[0][1][14] , \s_tx[0][1][13] ,
         \s_tx[0][1][12] , \s_tx[0][1][11] , \s_tx[0][1][10] , \s_tx[0][1][9] ,
         \s_tx[0][1][8] , \s_tx[0][1][7] , \s_tx[0][1][6] , \s_tx[0][1][5] ,
         \s_tx[0][1][4] , \s_tx[0][1][3] , \s_tx[0][1][2] , \s_tx[0][1][1] ,
         \s_tx[0][1][0] , \s_tx[0][2][36] , \s_tx[0][2][35] , \s_tx[0][2][34] ,
         \s_tx[0][2][33] , \s_tx[0][2][32] , \s_tx[0][2][31] ,
         \s_tx[0][2][30] , \s_tx[0][2][29] , \s_tx[0][2][28] ,
         \s_tx[0][2][27] , \s_tx[0][2][26] , \s_tx[0][2][25] ,
         \s_tx[0][2][24] , \s_tx[0][2][23] , \s_tx[0][2][22] ,
         \s_tx[0][2][21] , \s_tx[0][2][20] , \s_tx[0][2][19] ,
         \s_tx[0][2][18] , \s_tx[0][2][17] , \s_tx[0][2][16] ,
         \s_tx[0][2][15] , \s_tx[0][2][14] , \s_tx[0][2][13] ,
         \s_tx[0][2][12] , \s_tx[0][2][11] , \s_tx[0][2][10] , \s_tx[0][2][9] ,
         \s_tx[0][2][8] , \s_tx[0][2][7] , \s_tx[0][2][6] , \s_tx[0][2][5] ,
         \s_tx[0][2][4] , \s_tx[0][2][3] , \s_tx[0][2][2] , \s_tx[0][2][1] ,
         \s_tx[0][2][0] , \s_tx[0][3][36] , \s_tx[0][3][35] , \s_tx[0][3][34] ,
         \s_tx[0][3][33] , \s_tx[0][3][32] , \s_tx[0][3][31] ,
         \s_tx[0][3][30] , \s_tx[0][3][29] , \s_tx[0][3][28] ,
         \s_tx[0][3][27] , \s_tx[0][3][26] , \s_tx[0][3][25] ,
         \s_tx[0][3][24] , \s_tx[0][3][23] , \s_tx[0][3][22] ,
         \s_tx[0][3][21] , \s_tx[0][3][20] , \s_tx[0][3][19] ,
         \s_tx[0][3][18] , \s_tx[0][3][17] , \s_tx[0][3][16] ,
         \s_tx[0][3][15] , \s_tx[0][3][14] , \s_tx[0][3][13] ,
         \s_tx[0][3][12] , \s_tx[0][3][11] , \s_tx[0][3][10] , \s_tx[0][3][9] ,
         \s_tx[0][3][8] , \s_tx[0][3][7] , \s_tx[0][3][6] , \s_tx[0][3][5] ,
         \s_tx[0][3][4] , \s_tx[0][3][3] , \s_tx[0][3][2] , \s_tx[0][3][1] ,
         \s_tx[0][3][0] , \s_tx[1][0][36] , \s_tx[1][0][35] , \s_tx[1][0][34] ,
         \s_tx[1][0][33] , \s_tx[1][0][32] , \s_tx[1][0][31] ,
         \s_tx[1][0][30] , \s_tx[1][0][29] , \s_tx[1][0][28] ,
         \s_tx[1][0][27] , \s_tx[1][0][26] , \s_tx[1][0][25] ,
         \s_tx[1][0][24] , \s_tx[1][0][23] , \s_tx[1][0][22] ,
         \s_tx[1][0][21] , \s_tx[1][0][20] , \s_tx[1][0][19] ,
         \s_tx[1][0][18] , \s_tx[1][0][17] , \s_tx[1][0][16] ,
         \s_tx[1][0][15] , \s_tx[1][0][14] , \s_tx[1][0][13] ,
         \s_tx[1][0][12] , \s_tx[1][0][11] , \s_tx[1][0][10] , \s_tx[1][0][9] ,
         \s_tx[1][0][8] , \s_tx[1][0][7] , \s_tx[1][0][6] , \s_tx[1][0][5] ,
         \s_tx[1][0][4] , \s_tx[1][0][3] , \s_tx[1][0][2] , \s_tx[1][0][1] ,
         \s_tx[1][0][0] , \s_tx[1][1][36] , \s_tx[1][1][35] , \s_tx[1][1][34] ,
         \s_tx[1][1][33] , \s_tx[1][1][32] , \s_tx[1][1][31] ,
         \s_tx[1][1][30] , \s_tx[1][1][29] , \s_tx[1][1][28] ,
         \s_tx[1][1][27] , \s_tx[1][1][26] , \s_tx[1][1][25] ,
         \s_tx[1][1][24] , \s_tx[1][1][23] , \s_tx[1][1][22] ,
         \s_tx[1][1][21] , \s_tx[1][1][20] , \s_tx[1][1][19] ,
         \s_tx[1][1][18] , \s_tx[1][1][17] , \s_tx[1][1][16] ,
         \s_tx[1][1][15] , \s_tx[1][1][14] , \s_tx[1][1][13] ,
         \s_tx[1][1][12] , \s_tx[1][1][11] , \s_tx[1][1][10] , \s_tx[1][1][9] ,
         \s_tx[1][1][8] , \s_tx[1][1][7] , \s_tx[1][1][6] , \s_tx[1][1][5] ,
         \s_tx[1][1][4] , \s_tx[1][1][3] , \s_tx[1][1][2] , \s_tx[1][1][1] ,
         \s_tx[1][1][0] , \s_tx[1][2][36] , \s_tx[1][2][35] , \s_tx[1][2][34] ,
         \s_tx[1][2][33] , \s_tx[1][2][32] , \s_tx[1][2][31] ,
         \s_tx[1][2][30] , \s_tx[1][2][29] , \s_tx[1][2][28] ,
         \s_tx[1][2][27] , \s_tx[1][2][26] , \s_tx[1][2][25] ,
         \s_tx[1][2][24] , \s_tx[1][2][23] , \s_tx[1][2][22] ,
         \s_tx[1][2][21] , \s_tx[1][2][20] , \s_tx[1][2][19] ,
         \s_tx[1][2][18] , \s_tx[1][2][17] , \s_tx[1][2][16] ,
         \s_tx[1][2][15] , \s_tx[1][2][14] , \s_tx[1][2][13] ,
         \s_tx[1][2][12] , \s_tx[1][2][11] , \s_tx[1][2][10] , \s_tx[1][2][9] ,
         \s_tx[1][2][8] , \s_tx[1][2][7] , \s_tx[1][2][6] , \s_tx[1][2][5] ,
         \s_tx[1][2][4] , \s_tx[1][2][3] , \s_tx[1][2][2] , \s_tx[1][2][1] ,
         \s_tx[1][2][0] , \s_tx[1][3][36] , \s_tx[1][3][35] , \s_tx[1][3][34] ,
         \s_tx[1][3][33] , \s_tx[1][3][32] , \s_tx[1][3][31] ,
         \s_tx[1][3][30] , \s_tx[1][3][29] , \s_tx[1][3][28] ,
         \s_tx[1][3][27] , \s_tx[1][3][26] , \s_tx[1][3][25] ,
         \s_tx[1][3][24] , \s_tx[1][3][23] , \s_tx[1][3][22] ,
         \s_tx[1][3][21] , \s_tx[1][3][20] , \s_tx[1][3][19] ,
         \s_tx[1][3][18] , \s_tx[1][3][17] , \s_tx[1][3][16] ,
         \s_tx[1][3][15] , \s_tx[1][3][14] , \s_tx[1][3][13] ,
         \s_tx[1][3][12] , \s_tx[1][3][11] , \s_tx[1][3][10] , \s_tx[1][3][9] ,
         \s_tx[1][3][8] , \s_tx[1][3][7] , \s_tx[1][3][6] , \s_tx[1][3][5] ,
         \s_tx[1][3][4] , \s_tx[1][3][3] , \s_tx[1][3][2] , \s_tx[1][3][1] ,
         \s_tx[1][3][0] , \s_tx[2][0][36] , \s_tx[2][0][35] , \s_tx[2][0][34] ,
         \s_tx[2][0][33] , \s_tx[2][0][32] , \s_tx[2][0][31] ,
         \s_tx[2][0][30] , \s_tx[2][0][29] , \s_tx[2][0][28] ,
         \s_tx[2][0][27] , \s_tx[2][0][26] , \s_tx[2][0][25] ,
         \s_tx[2][0][24] , \s_tx[2][0][23] , \s_tx[2][0][22] ,
         \s_tx[2][0][21] , \s_tx[2][0][20] , \s_tx[2][0][19] ,
         \s_tx[2][0][18] , \s_tx[2][0][17] , \s_tx[2][0][16] ,
         \s_tx[2][0][15] , \s_tx[2][0][14] , \s_tx[2][0][13] ,
         \s_tx[2][0][12] , \s_tx[2][0][11] , \s_tx[2][0][10] , \s_tx[2][0][9] ,
         \s_tx[2][0][8] , \s_tx[2][0][7] , \s_tx[2][0][6] , \s_tx[2][0][5] ,
         \s_tx[2][0][4] , \s_tx[2][0][3] , \s_tx[2][0][2] , \s_tx[2][0][1] ,
         \s_tx[2][0][0] , \s_tx[2][1][36] , \s_tx[2][1][35] , \s_tx[2][1][34] ,
         \s_tx[2][1][33] , \s_tx[2][1][32] , \s_tx[2][1][31] ,
         \s_tx[2][1][30] , \s_tx[2][1][29] , \s_tx[2][1][28] ,
         \s_tx[2][1][27] , \s_tx[2][1][26] , \s_tx[2][1][25] ,
         \s_tx[2][1][24] , \s_tx[2][1][23] , \s_tx[2][1][22] ,
         \s_tx[2][1][21] , \s_tx[2][1][20] , \s_tx[2][1][19] ,
         \s_tx[2][1][18] , \s_tx[2][1][17] , \s_tx[2][1][16] ,
         \s_tx[2][1][15] , \s_tx[2][1][14] , \s_tx[2][1][13] ,
         \s_tx[2][1][12] , \s_tx[2][1][11] , \s_tx[2][1][10] , \s_tx[2][1][9] ,
         \s_tx[2][1][8] , \s_tx[2][1][7] , \s_tx[2][1][6] , \s_tx[2][1][5] ,
         \s_tx[2][1][4] , \s_tx[2][1][3] , \s_tx[2][1][2] , \s_tx[2][1][1] ,
         \s_tx[2][1][0] , \s_tx[2][2][36] , \s_tx[2][2][35] , \s_tx[2][2][34] ,
         \s_tx[2][2][33] , \s_tx[2][2][32] , \s_tx[2][2][31] ,
         \s_tx[2][2][30] , \s_tx[2][2][29] , \s_tx[2][2][28] ,
         \s_tx[2][2][27] , \s_tx[2][2][26] , \s_tx[2][2][25] ,
         \s_tx[2][2][24] , \s_tx[2][2][23] , \s_tx[2][2][22] ,
         \s_tx[2][2][21] , \s_tx[2][2][20] , \s_tx[2][2][19] ,
         \s_tx[2][2][18] , \s_tx[2][2][17] , \s_tx[2][2][16] ,
         \s_tx[2][2][15] , \s_tx[2][2][14] , \s_tx[2][2][13] ,
         \s_tx[2][2][12] , \s_tx[2][2][11] , \s_tx[2][2][10] , \s_tx[2][2][9] ,
         \s_tx[2][2][8] , \s_tx[2][2][7] , \s_tx[2][2][6] , \s_tx[2][2][5] ,
         \s_tx[2][2][4] , \s_tx[2][2][3] , \s_tx[2][2][2] , \s_tx[2][2][1] ,
         \s_tx[2][2][0] , \s_tx[2][3][36] , \s_tx[2][3][35] , \s_tx[2][3][34] ,
         \s_tx[2][3][33] , \s_tx[2][3][32] , \s_tx[2][3][31] ,
         \s_tx[2][3][30] , \s_tx[2][3][29] , \s_tx[2][3][28] ,
         \s_tx[2][3][27] , \s_tx[2][3][26] , \s_tx[2][3][25] ,
         \s_tx[2][3][24] , \s_tx[2][3][23] , \s_tx[2][3][22] ,
         \s_tx[2][3][21] , \s_tx[2][3][20] , \s_tx[2][3][19] ,
         \s_tx[2][3][18] , \s_tx[2][3][17] , \s_tx[2][3][16] ,
         \s_tx[2][3][15] , \s_tx[2][3][14] , \s_tx[2][3][13] ,
         \s_tx[2][3][12] , \s_tx[2][3][11] , \s_tx[2][3][10] , \s_tx[2][3][9] ,
         \s_tx[2][3][8] , \s_tx[2][3][7] , \s_tx[2][3][6] , \s_tx[2][3][5] ,
         \s_tx[2][3][4] , \s_tx[2][3][3] , \s_tx[2][3][2] , \s_tx[2][3][1] ,
         \s_tx[2][3][0] , \s_tx[3][0][36] , \s_tx[3][0][35] , \s_tx[3][0][34] ,
         \s_tx[3][0][33] , \s_tx[3][0][32] , \s_tx[3][0][31] ,
         \s_tx[3][0][30] , \s_tx[3][0][29] , \s_tx[3][0][28] ,
         \s_tx[3][0][27] , \s_tx[3][0][26] , \s_tx[3][0][25] ,
         \s_tx[3][0][24] , \s_tx[3][0][23] , \s_tx[3][0][22] ,
         \s_tx[3][0][21] , \s_tx[3][0][20] , \s_tx[3][0][19] ,
         \s_tx[3][0][18] , \s_tx[3][0][17] , \s_tx[3][0][16] ,
         \s_tx[3][0][15] , \s_tx[3][0][14] , \s_tx[3][0][13] ,
         \s_tx[3][0][12] , \s_tx[3][0][11] , \s_tx[3][0][10] , \s_tx[3][0][9] ,
         \s_tx[3][0][8] , \s_tx[3][0][7] , \s_tx[3][0][6] , \s_tx[3][0][5] ,
         \s_tx[3][0][4] , \s_tx[3][0][3] , \s_tx[3][0][2] , \s_tx[3][0][1] ,
         \s_tx[3][0][0] , \s_tx[3][1][36] , \s_tx[3][1][35] , \s_tx[3][1][34] ,
         \s_tx[3][1][33] , \s_tx[3][1][32] , \s_tx[3][1][31] ,
         \s_tx[3][1][30] , \s_tx[3][1][29] , \s_tx[3][1][28] ,
         \s_tx[3][1][27] , \s_tx[3][1][26] , \s_tx[3][1][25] ,
         \s_tx[3][1][24] , \s_tx[3][1][23] , \s_tx[3][1][22] ,
         \s_tx[3][1][21] , \s_tx[3][1][20] , \s_tx[3][1][19] ,
         \s_tx[3][1][18] , \s_tx[3][1][17] , \s_tx[3][1][16] ,
         \s_tx[3][1][15] , \s_tx[3][1][14] , \s_tx[3][1][13] ,
         \s_tx[3][1][12] , \s_tx[3][1][11] , \s_tx[3][1][10] , \s_tx[3][1][9] ,
         \s_tx[3][1][8] , \s_tx[3][1][7] , \s_tx[3][1][6] , \s_tx[3][1][5] ,
         \s_tx[3][1][4] , \s_tx[3][1][3] , \s_tx[3][1][2] , \s_tx[3][1][1] ,
         \s_tx[3][1][0] , \s_tx[3][2][36] , \s_tx[3][2][35] , \s_tx[3][2][34] ,
         \s_tx[3][2][33] , \s_tx[3][2][32] , \s_tx[3][2][31] ,
         \s_tx[3][2][30] , \s_tx[3][2][29] , \s_tx[3][2][28] ,
         \s_tx[3][2][27] , \s_tx[3][2][26] , \s_tx[3][2][25] ,
         \s_tx[3][2][24] , \s_tx[3][2][23] , \s_tx[3][2][22] ,
         \s_tx[3][2][21] , \s_tx[3][2][20] , \s_tx[3][2][19] ,
         \s_tx[3][2][18] , \s_tx[3][2][17] , \s_tx[3][2][16] ,
         \s_tx[3][2][15] , \s_tx[3][2][14] , \s_tx[3][2][13] ,
         \s_tx[3][2][12] , \s_tx[3][2][11] , \s_tx[3][2][10] , \s_tx[3][2][9] ,
         \s_tx[3][2][8] , \s_tx[3][2][7] , \s_tx[3][2][6] , \s_tx[3][2][5] ,
         \s_tx[3][2][4] , \s_tx[3][2][3] , \s_tx[3][2][2] , \s_tx[3][2][1] ,
         \s_tx[3][2][0] , \s_tx[3][3][36] , \s_tx[3][3][35] , \s_tx[3][3][34] ,
         \s_tx[3][3][33] , \s_tx[3][3][32] , \s_tx[3][3][31] ,
         \s_tx[3][3][30] , \s_tx[3][3][29] , \s_tx[3][3][28] ,
         \s_tx[3][3][27] , \s_tx[3][3][26] , \s_tx[3][3][25] ,
         \s_tx[3][3][24] , \s_tx[3][3][23] , \s_tx[3][3][22] ,
         \s_tx[3][3][21] , \s_tx[3][3][20] , \s_tx[3][3][19] ,
         \s_tx[3][3][18] , \s_tx[3][3][17] , \s_tx[3][3][16] ,
         \s_tx[3][3][15] , \s_tx[3][3][14] , \s_tx[3][3][13] ,
         \s_tx[3][3][12] , \s_tx[3][3][11] , \s_tx[3][3][10] , \s_tx[3][3][9] ,
         \s_tx[3][3][8] , \s_tx[3][3][7] , \s_tx[3][3][6] , \s_tx[3][3][5] ,
         \s_tx[3][3][4] , \s_tx[3][3][3] , \s_tx[3][3][2] , \s_tx[3][3][1] ,
         \s_tx[3][3][0] , \e_tx[0][0][36] , \e_tx[0][0][35] , \e_tx[0][0][34] ,
         \e_tx[0][0][33] , \e_tx[0][0][32] , \e_tx[0][0][31] ,
         \e_tx[0][0][30] , \e_tx[0][0][29] , \e_tx[0][0][28] ,
         \e_tx[0][0][27] , \e_tx[0][0][26] , \e_tx[0][0][25] ,
         \e_tx[0][0][24] , \e_tx[0][0][23] , \e_tx[0][0][22] ,
         \e_tx[0][0][21] , \e_tx[0][0][20] , \e_tx[0][0][19] ,
         \e_tx[0][0][18] , \e_tx[0][0][17] , \e_tx[0][0][16] ,
         \e_tx[0][0][15] , \e_tx[0][0][14] , \e_tx[0][0][13] ,
         \e_tx[0][0][12] , \e_tx[0][0][11] , \e_tx[0][0][10] , \e_tx[0][0][9] ,
         \e_tx[0][0][8] , \e_tx[0][0][7] , \e_tx[0][0][6] , \e_tx[0][0][5] ,
         \e_tx[0][0][4] , \e_tx[0][0][3] , \e_tx[0][0][2] , \e_tx[0][0][1] ,
         \e_tx[0][0][0] , \e_tx[0][1][36] , \e_tx[0][1][35] , \e_tx[0][1][34] ,
         \e_tx[0][1][33] , \e_tx[0][1][32] , \e_tx[0][1][31] ,
         \e_tx[0][1][30] , \e_tx[0][1][29] , \e_tx[0][1][28] ,
         \e_tx[0][1][27] , \e_tx[0][1][26] , \e_tx[0][1][25] ,
         \e_tx[0][1][24] , \e_tx[0][1][23] , \e_tx[0][1][22] ,
         \e_tx[0][1][21] , \e_tx[0][1][20] , \e_tx[0][1][19] ,
         \e_tx[0][1][18] , \e_tx[0][1][17] , \e_tx[0][1][16] ,
         \e_tx[0][1][15] , \e_tx[0][1][14] , \e_tx[0][1][13] ,
         \e_tx[0][1][12] , \e_tx[0][1][11] , \e_tx[0][1][10] , \e_tx[0][1][9] ,
         \e_tx[0][1][8] , \e_tx[0][1][7] , \e_tx[0][1][6] , \e_tx[0][1][5] ,
         \e_tx[0][1][4] , \e_tx[0][1][3] , \e_tx[0][1][2] , \e_tx[0][1][1] ,
         \e_tx[0][1][0] , \e_tx[0][2][36] , \e_tx[0][2][35] , \e_tx[0][2][34] ,
         \e_tx[0][2][33] , \e_tx[0][2][32] , \e_tx[0][2][31] ,
         \e_tx[0][2][30] , \e_tx[0][2][29] , \e_tx[0][2][28] ,
         \e_tx[0][2][27] , \e_tx[0][2][26] , \e_tx[0][2][25] ,
         \e_tx[0][2][24] , \e_tx[0][2][23] , \e_tx[0][2][22] ,
         \e_tx[0][2][21] , \e_tx[0][2][20] , \e_tx[0][2][19] ,
         \e_tx[0][2][18] , \e_tx[0][2][17] , \e_tx[0][2][16] ,
         \e_tx[0][2][15] , \e_tx[0][2][14] , \e_tx[0][2][13] ,
         \e_tx[0][2][12] , \e_tx[0][2][11] , \e_tx[0][2][10] , \e_tx[0][2][9] ,
         \e_tx[0][2][8] , \e_tx[0][2][7] , \e_tx[0][2][6] , \e_tx[0][2][5] ,
         \e_tx[0][2][4] , \e_tx[0][2][3] , \e_tx[0][2][2] , \e_tx[0][2][1] ,
         \e_tx[0][2][0] , \e_tx[0][3][36] , \e_tx[0][3][35] , \e_tx[0][3][34] ,
         \e_tx[0][3][33] , \e_tx[0][3][32] , \e_tx[0][3][31] ,
         \e_tx[0][3][30] , \e_tx[0][3][29] , \e_tx[0][3][28] ,
         \e_tx[0][3][27] , \e_tx[0][3][26] , \e_tx[0][3][25] ,
         \e_tx[0][3][24] , \e_tx[0][3][23] , \e_tx[0][3][22] ,
         \e_tx[0][3][21] , \e_tx[0][3][20] , \e_tx[0][3][19] ,
         \e_tx[0][3][18] , \e_tx[0][3][17] , \e_tx[0][3][16] ,
         \e_tx[0][3][15] , \e_tx[0][3][14] , \e_tx[0][3][13] ,
         \e_tx[0][3][12] , \e_tx[0][3][11] , \e_tx[0][3][10] , \e_tx[0][3][9] ,
         \e_tx[0][3][8] , \e_tx[0][3][7] , \e_tx[0][3][6] , \e_tx[0][3][5] ,
         \e_tx[0][3][4] , \e_tx[0][3][3] , \e_tx[0][3][2] , \e_tx[0][3][1] ,
         \e_tx[0][3][0] , \e_tx[1][0][36] , \e_tx[1][0][35] , \e_tx[1][0][34] ,
         \e_tx[1][0][33] , \e_tx[1][0][32] , \e_tx[1][0][31] ,
         \e_tx[1][0][30] , \e_tx[1][0][29] , \e_tx[1][0][28] ,
         \e_tx[1][0][27] , \e_tx[1][0][26] , \e_tx[1][0][25] ,
         \e_tx[1][0][24] , \e_tx[1][0][23] , \e_tx[1][0][22] ,
         \e_tx[1][0][21] , \e_tx[1][0][20] , \e_tx[1][0][19] ,
         \e_tx[1][0][18] , \e_tx[1][0][17] , \e_tx[1][0][16] ,
         \e_tx[1][0][15] , \e_tx[1][0][14] , \e_tx[1][0][13] ,
         \e_tx[1][0][12] , \e_tx[1][0][11] , \e_tx[1][0][10] , \e_tx[1][0][9] ,
         \e_tx[1][0][8] , \e_tx[1][0][7] , \e_tx[1][0][6] , \e_tx[1][0][5] ,
         \e_tx[1][0][4] , \e_tx[1][0][3] , \e_tx[1][0][2] , \e_tx[1][0][1] ,
         \e_tx[1][0][0] , \e_tx[1][1][36] , \e_tx[1][1][35] , \e_tx[1][1][34] ,
         \e_tx[1][1][33] , \e_tx[1][1][32] , \e_tx[1][1][31] ,
         \e_tx[1][1][30] , \e_tx[1][1][29] , \e_tx[1][1][28] ,
         \e_tx[1][1][27] , \e_tx[1][1][26] , \e_tx[1][1][25] ,
         \e_tx[1][1][24] , \e_tx[1][1][23] , \e_tx[1][1][22] ,
         \e_tx[1][1][21] , \e_tx[1][1][20] , \e_tx[1][1][19] ,
         \e_tx[1][1][18] , \e_tx[1][1][17] , \e_tx[1][1][16] ,
         \e_tx[1][1][15] , \e_tx[1][1][14] , \e_tx[1][1][13] ,
         \e_tx[1][1][12] , \e_tx[1][1][11] , \e_tx[1][1][10] , \e_tx[1][1][9] ,
         \e_tx[1][1][8] , \e_tx[1][1][7] , \e_tx[1][1][6] , \e_tx[1][1][5] ,
         \e_tx[1][1][4] , \e_tx[1][1][3] , \e_tx[1][1][2] , \e_tx[1][1][1] ,
         \e_tx[1][1][0] , \e_tx[1][2][36] , \e_tx[1][2][35] , \e_tx[1][2][34] ,
         \e_tx[1][2][33] , \e_tx[1][2][32] , \e_tx[1][2][31] ,
         \e_tx[1][2][30] , \e_tx[1][2][29] , \e_tx[1][2][28] ,
         \e_tx[1][2][27] , \e_tx[1][2][26] , \e_tx[1][2][25] ,
         \e_tx[1][2][24] , \e_tx[1][2][23] , \e_tx[1][2][22] ,
         \e_tx[1][2][21] , \e_tx[1][2][20] , \e_tx[1][2][19] ,
         \e_tx[1][2][18] , \e_tx[1][2][17] , \e_tx[1][2][16] ,
         \e_tx[1][2][15] , \e_tx[1][2][14] , \e_tx[1][2][13] ,
         \e_tx[1][2][12] , \e_tx[1][2][11] , \e_tx[1][2][10] , \e_tx[1][2][9] ,
         \e_tx[1][2][8] , \e_tx[1][2][7] , \e_tx[1][2][6] , \e_tx[1][2][5] ,
         \e_tx[1][2][4] , \e_tx[1][2][3] , \e_tx[1][2][2] , \e_tx[1][2][1] ,
         \e_tx[1][2][0] , \e_tx[1][3][36] , \e_tx[1][3][35] , \e_tx[1][3][34] ,
         \e_tx[1][3][33] , \e_tx[1][3][32] , \e_tx[1][3][31] ,
         \e_tx[1][3][30] , \e_tx[1][3][29] , \e_tx[1][3][28] ,
         \e_tx[1][3][27] , \e_tx[1][3][26] , \e_tx[1][3][25] ,
         \e_tx[1][3][24] , \e_tx[1][3][23] , \e_tx[1][3][22] ,
         \e_tx[1][3][21] , \e_tx[1][3][20] , \e_tx[1][3][19] ,
         \e_tx[1][3][18] , \e_tx[1][3][17] , \e_tx[1][3][16] ,
         \e_tx[1][3][15] , \e_tx[1][3][14] , \e_tx[1][3][13] ,
         \e_tx[1][3][12] , \e_tx[1][3][11] , \e_tx[1][3][10] , \e_tx[1][3][9] ,
         \e_tx[1][3][8] , \e_tx[1][3][7] , \e_tx[1][3][6] , \e_tx[1][3][5] ,
         \e_tx[1][3][4] , \e_tx[1][3][3] , \e_tx[1][3][2] , \e_tx[1][3][1] ,
         \e_tx[1][3][0] , \e_tx[2][0][36] , \e_tx[2][0][35] , \e_tx[2][0][34] ,
         \e_tx[2][0][33] , \e_tx[2][0][32] , \e_tx[2][0][31] ,
         \e_tx[2][0][30] , \e_tx[2][0][29] , \e_tx[2][0][28] ,
         \e_tx[2][0][27] , \e_tx[2][0][26] , \e_tx[2][0][25] ,
         \e_tx[2][0][24] , \e_tx[2][0][23] , \e_tx[2][0][22] ,
         \e_tx[2][0][21] , \e_tx[2][0][20] , \e_tx[2][0][19] ,
         \e_tx[2][0][18] , \e_tx[2][0][17] , \e_tx[2][0][16] ,
         \e_tx[2][0][15] , \e_tx[2][0][14] , \e_tx[2][0][13] ,
         \e_tx[2][0][12] , \e_tx[2][0][11] , \e_tx[2][0][10] , \e_tx[2][0][9] ,
         \e_tx[2][0][8] , \e_tx[2][0][7] , \e_tx[2][0][6] , \e_tx[2][0][5] ,
         \e_tx[2][0][4] , \e_tx[2][0][3] , \e_tx[2][0][2] , \e_tx[2][0][1] ,
         \e_tx[2][0][0] , \e_tx[2][1][36] , \e_tx[2][1][35] , \e_tx[2][1][34] ,
         \e_tx[2][1][33] , \e_tx[2][1][32] , \e_tx[2][1][31] ,
         \e_tx[2][1][30] , \e_tx[2][1][29] , \e_tx[2][1][28] ,
         \e_tx[2][1][27] , \e_tx[2][1][26] , \e_tx[2][1][25] ,
         \e_tx[2][1][24] , \e_tx[2][1][23] , \e_tx[2][1][22] ,
         \e_tx[2][1][21] , \e_tx[2][1][20] , \e_tx[2][1][19] ,
         \e_tx[2][1][18] , \e_tx[2][1][17] , \e_tx[2][1][16] ,
         \e_tx[2][1][15] , \e_tx[2][1][14] , \e_tx[2][1][13] ,
         \e_tx[2][1][12] , \e_tx[2][1][11] , \e_tx[2][1][10] , \e_tx[2][1][9] ,
         \e_tx[2][1][8] , \e_tx[2][1][7] , \e_tx[2][1][6] , \e_tx[2][1][5] ,
         \e_tx[2][1][4] , \e_tx[2][1][3] , \e_tx[2][1][2] , \e_tx[2][1][1] ,
         \e_tx[2][1][0] , \e_tx[2][2][36] , \e_tx[2][2][35] , \e_tx[2][2][34] ,
         \e_tx[2][2][33] , \e_tx[2][2][32] , \e_tx[2][2][31] ,
         \e_tx[2][2][30] , \e_tx[2][2][29] , \e_tx[2][2][28] ,
         \e_tx[2][2][27] , \e_tx[2][2][26] , \e_tx[2][2][25] ,
         \e_tx[2][2][24] , \e_tx[2][2][23] , \e_tx[2][2][22] ,
         \e_tx[2][2][21] , \e_tx[2][2][20] , \e_tx[2][2][19] ,
         \e_tx[2][2][18] , \e_tx[2][2][17] , \e_tx[2][2][16] ,
         \e_tx[2][2][15] , \e_tx[2][2][14] , \e_tx[2][2][13] ,
         \e_tx[2][2][12] , \e_tx[2][2][11] , \e_tx[2][2][10] , \e_tx[2][2][9] ,
         \e_tx[2][2][8] , \e_tx[2][2][7] , \e_tx[2][2][6] , \e_tx[2][2][5] ,
         \e_tx[2][2][4] , \e_tx[2][2][3] , \e_tx[2][2][2] , \e_tx[2][2][1] ,
         \e_tx[2][2][0] , \e_tx[2][3][36] , \e_tx[2][3][35] , \e_tx[2][3][34] ,
         \e_tx[2][3][33] , \e_tx[2][3][32] , \e_tx[2][3][31] ,
         \e_tx[2][3][30] , \e_tx[2][3][29] , \e_tx[2][3][28] ,
         \e_tx[2][3][27] , \e_tx[2][3][26] , \e_tx[2][3][25] ,
         \e_tx[2][3][24] , \e_tx[2][3][23] , \e_tx[2][3][22] ,
         \e_tx[2][3][21] , \e_tx[2][3][20] , \e_tx[2][3][19] ,
         \e_tx[2][3][18] , \e_tx[2][3][17] , \e_tx[2][3][16] ,
         \e_tx[2][3][15] , \e_tx[2][3][14] , \e_tx[2][3][13] ,
         \e_tx[2][3][12] , \e_tx[2][3][11] , \e_tx[2][3][10] , \e_tx[2][3][9] ,
         \e_tx[2][3][8] , \e_tx[2][3][7] , \e_tx[2][3][6] , \e_tx[2][3][5] ,
         \e_tx[2][3][4] , \e_tx[2][3][3] , \e_tx[2][3][2] , \e_tx[2][3][1] ,
         \e_tx[2][3][0] , \e_tx[3][0][36] , \e_tx[3][0][35] , \e_tx[3][0][34] ,
         \e_tx[3][0][33] , \e_tx[3][0][32] , \e_tx[3][0][31] ,
         \e_tx[3][0][30] , \e_tx[3][0][29] , \e_tx[3][0][28] ,
         \e_tx[3][0][27] , \e_tx[3][0][26] , \e_tx[3][0][25] ,
         \e_tx[3][0][24] , \e_tx[3][0][23] , \e_tx[3][0][22] ,
         \e_tx[3][0][21] , \e_tx[3][0][20] , \e_tx[3][0][19] ,
         \e_tx[3][0][18] , \e_tx[3][0][17] , \e_tx[3][0][16] ,
         \e_tx[3][0][15] , \e_tx[3][0][14] , \e_tx[3][0][13] ,
         \e_tx[3][0][12] , \e_tx[3][0][11] , \e_tx[3][0][10] , \e_tx[3][0][9] ,
         \e_tx[3][0][8] , \e_tx[3][0][7] , \e_tx[3][0][6] , \e_tx[3][0][5] ,
         \e_tx[3][0][4] , \e_tx[3][0][3] , \e_tx[3][0][2] , \e_tx[3][0][1] ,
         \e_tx[3][0][0] , \e_tx[3][1][36] , \e_tx[3][1][35] , \e_tx[3][1][34] ,
         \e_tx[3][1][33] , \e_tx[3][1][32] , \e_tx[3][1][31] ,
         \e_tx[3][1][30] , \e_tx[3][1][29] , \e_tx[3][1][28] ,
         \e_tx[3][1][27] , \e_tx[3][1][26] , \e_tx[3][1][25] ,
         \e_tx[3][1][24] , \e_tx[3][1][23] , \e_tx[3][1][22] ,
         \e_tx[3][1][21] , \e_tx[3][1][20] , \e_tx[3][1][19] ,
         \e_tx[3][1][18] , \e_tx[3][1][17] , \e_tx[3][1][16] ,
         \e_tx[3][1][15] , \e_tx[3][1][14] , \e_tx[3][1][13] ,
         \e_tx[3][1][12] , \e_tx[3][1][11] , \e_tx[3][1][10] , \e_tx[3][1][9] ,
         \e_tx[3][1][8] , \e_tx[3][1][7] , \e_tx[3][1][6] , \e_tx[3][1][5] ,
         \e_tx[3][1][4] , \e_tx[3][1][3] , \e_tx[3][1][2] , \e_tx[3][1][1] ,
         \e_tx[3][1][0] , \e_tx[3][2][36] , \e_tx[3][2][35] , \e_tx[3][2][34] ,
         \e_tx[3][2][33] , \e_tx[3][2][32] , \e_tx[3][2][31] ,
         \e_tx[3][2][30] , \e_tx[3][2][29] , \e_tx[3][2][28] ,
         \e_tx[3][2][27] , \e_tx[3][2][26] , \e_tx[3][2][25] ,
         \e_tx[3][2][24] , \e_tx[3][2][23] , \e_tx[3][2][22] ,
         \e_tx[3][2][21] , \e_tx[3][2][20] , \e_tx[3][2][19] ,
         \e_tx[3][2][18] , \e_tx[3][2][17] , \e_tx[3][2][16] ,
         \e_tx[3][2][15] , \e_tx[3][2][14] , \e_tx[3][2][13] ,
         \e_tx[3][2][12] , \e_tx[3][2][11] , \e_tx[3][2][10] , \e_tx[3][2][9] ,
         \e_tx[3][2][8] , \e_tx[3][2][7] , \e_tx[3][2][6] , \e_tx[3][2][5] ,
         \e_tx[3][2][4] , \e_tx[3][2][3] , \e_tx[3][2][2] , \e_tx[3][2][1] ,
         \e_tx[3][2][0] , \e_tx[3][3][36] , \e_tx[3][3][35] , \e_tx[3][3][34] ,
         \e_tx[3][3][33] , \e_tx[3][3][32] , \e_tx[3][3][31] ,
         \e_tx[3][3][30] , \e_tx[3][3][29] , \e_tx[3][3][28] ,
         \e_tx[3][3][27] , \e_tx[3][3][26] , \e_tx[3][3][25] ,
         \e_tx[3][3][24] , \e_tx[3][3][23] , \e_tx[3][3][22] ,
         \e_tx[3][3][21] , \e_tx[3][3][20] , \e_tx[3][3][19] ,
         \e_tx[3][3][18] , \e_tx[3][3][17] , \e_tx[3][3][16] ,
         \e_tx[3][3][15] , \e_tx[3][3][14] , \e_tx[3][3][13] ,
         \e_tx[3][3][12] , \e_tx[3][3][11] , \e_tx[3][3][10] , \e_tx[3][3][9] ,
         \e_tx[3][3][8] , \e_tx[3][3][7] , \e_tx[3][3][6] , \e_tx[3][3][5] ,
         \e_tx[3][3][4] , \e_tx[3][3][3] , \e_tx[3][3][2] , \e_tx[3][3][1] ,
         \e_tx[3][3][0] ;

  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X0_Y0_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[0].xs[0].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[0][0] ), .i_v(\i[0][0][36] ), 
        .i_x({\i[0][0][35] , \i[0][0][34] }), .i_y({\i[0][0][33] , 
        \i[0][0][32] }), .i_data({\i[0][0][31] , \i[0][0][30] , \i[0][0][29] , 
        \i[0][0][28] , \i[0][0][27] , \i[0][0][26] , \i[0][0][25] , 
        \i[0][0][24] , \i[0][0][23] , \i[0][0][22] , \i[0][0][21] , 
        \i[0][0][20] , \i[0][0][19] , \i[0][0][18] , \i[0][0][17] , 
        \i[0][0][16] , \i[0][0][15] , \i[0][0][14] , \i[0][0][13] , 
        \i[0][0][12] , \i[0][0][11] , \i[0][0][10] , \i[0][0][9] , 
        \i[0][0][8] , \i[0][0][7] , \i[0][0][6] , \i[0][0][5] , \i[0][0][4] , 
        \i[0][0][3] , \i[0][0][2] , \i[0][0][1] , \i[0][0][0] }), .o_v(out_v), 
        .o_x({\s[0][0][35] , \s[0][0][34] }), .o_y({\s[0][0][33] , 
        \s[0][0][32] }), .o_data(out) );
  torus_switch_bp_X_W2_Y_W2_D_W32_X0_Y0 \ys[0].xs[0].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[0][0][36] ), .n_in_x({\n[0][0][35] , 
        \n[0][0][34] }), .n_in_y({\n[0][0][33] , \n[0][0][32] }), .n_in_data({
        \n[0][0][31] , \n[0][0][30] , \n[0][0][29] , \n[0][0][28] , 
        \n[0][0][27] , \n[0][0][26] , \n[0][0][25] , \n[0][0][24] , 
        \n[0][0][23] , \n[0][0][22] , \n[0][0][21] , \n[0][0][20] , 
        \n[0][0][19] , \n[0][0][18] , \n[0][0][17] , \n[0][0][16] , 
        \n[0][0][15] , \n[0][0][14] , \n[0][0][13] , \n[0][0][12] , 
        \n[0][0][11] , \n[0][0][10] , \n[0][0][9] , \n[0][0][8] , \n[0][0][7] , 
        \n[0][0][6] , \n[0][0][5] , \n[0][0][4] , \n[0][0][3] , \n[0][0][2] , 
        \n[0][0][1] , \n[0][0][0] }), .w_in_v(\w[0][0][36] ), .w_in_x({
        \w[0][0][35] , \w[0][0][34] }), .w_in_y({\w[0][0][33] , \w[0][0][32] }), .w_in_data({\w[0][0][31] , \w[0][0][30] , \w[0][0][29] , \w[0][0][28] , 
        \w[0][0][27] , \w[0][0][26] , \w[0][0][25] , \w[0][0][24] , 
        \w[0][0][23] , \w[0][0][22] , \w[0][0][21] , \w[0][0][20] , 
        \w[0][0][19] , \w[0][0][18] , \w[0][0][17] , \w[0][0][16] , 
        \w[0][0][15] , \w[0][0][14] , \w[0][0][13] , \w[0][0][12] , 
        \w[0][0][11] , \w[0][0][10] , \w[0][0][9] , \w[0][0][8] , \w[0][0][7] , 
        \w[0][0][6] , \w[0][0][5] , \w[0][0][4] , \w[0][0][3] , \w[0][0][2] , 
        \w[0][0][1] , \w[0][0][0] }), .i_v(\i[0][0][36] ), .i_x({\i[0][0][35] , 
        \i[0][0][34] }), .i_y({\i[0][0][33] , \i[0][0][32] }), .i_data({
        \i[0][0][31] , \i[0][0][30] , \i[0][0][29] , \i[0][0][28] , 
        \i[0][0][27] , \i[0][0][26] , \i[0][0][25] , \i[0][0][24] , 
        \i[0][0][23] , \i[0][0][22] , \i[0][0][21] , \i[0][0][20] , 
        \i[0][0][19] , \i[0][0][18] , \i[0][0][17] , \i[0][0][16] , 
        \i[0][0][15] , \i[0][0][14] , \i[0][0][13] , \i[0][0][12] , 
        \i[0][0][11] , \i[0][0][10] , \i[0][0][9] , \i[0][0][8] , \i[0][0][7] , 
        \i[0][0][6] , \i[0][0][5] , \i[0][0][4] , \i[0][0][3] , \i[0][0][2] , 
        \i[0][0][1] , \i[0][0][0] }), .e_b(\e_b[0][0] ), .w_b(\w_b[0][0] ), 
        .i_ack(\i_ack[0][0] ), .o_v(out_v), .s_out_v(\s[0][0][36] ), .s_out_x(
        {\s[0][0][35] , \s[0][0][34] }), .s_out_y({\s[0][0][33] , 
        \s[0][0][32] }), .s_out_data(out), .e_out_v(\e[0][0][36] ), .e_out_x({
        \e[0][0][35] , \e[0][0][34] }), .e_out_y({\e[0][0][33] , \e[0][0][32] }), .e_out_data({\e[0][0][31] , \e[0][0][30] , \e[0][0][29] , \e[0][0][28] , 
        \e[0][0][27] , \e[0][0][26] , \e[0][0][25] , \e[0][0][24] , 
        \e[0][0][23] , \e[0][0][22] , \e[0][0][21] , \e[0][0][20] , 
        \e[0][0][19] , \e[0][0][18] , \e[0][0][17] , \e[0][0][16] , 
        \e[0][0][15] , \e[0][0][14] , \e[0][0][13] , \e[0][0][12] , 
        \e[0][0][11] , \e[0][0][10] , \e[0][0][9] , \e[0][0][8] , \e[0][0][7] , 
        \e[0][0][6] , \e[0][0][5] , \e[0][0][4] , \e[0][0][3] , \e[0][0][2] , 
        \e[0][0][1] , \e[0][0][0] }) );
  low_swing_rx_0 \ys[0].xs[0].east_bp_rx  ( .i(\w_b_tx[1][0] ), .o(\e_b[0][0] ) );
  low_swing_tx_0 \ys[0].xs[0].west_bp_tx  ( .i(\w_b[0][0] ), .c(\w_b_tx[0][0] ) );
  low_swing_rx_1199 \ys[0].xs[0].msg_txrx[0].north_rx  ( .i(\s_tx[0][3][0] ), 
        .o(\n[0][0][0] ) );
  low_swing_rx_1198 \ys[0].xs[0].msg_txrx[0].west_rx  ( .i(\e_tx[3][0][0] ), 
        .o(\w[0][0][0] ) );
  low_swing_tx_1199 \ys[0].xs[0].msg_txrx[0].south_tx  ( .i(out[0]), .c(
        \s_tx[0][0][0] ) );
  low_swing_tx_1198 \ys[0].xs[0].msg_txrx[0].east_tx  ( .i(\e[0][0][0] ), .c(
        \e_tx[0][0][0] ) );
  low_swing_rx_1197 \ys[0].xs[0].msg_txrx[1].north_rx  ( .i(\s_tx[0][3][1] ), 
        .o(\n[0][0][1] ) );
  low_swing_rx_1196 \ys[0].xs[0].msg_txrx[1].west_rx  ( .i(\e_tx[3][0][1] ), 
        .o(\w[0][0][1] ) );
  low_swing_tx_1197 \ys[0].xs[0].msg_txrx[1].south_tx  ( .i(out[1]), .c(
        \s_tx[0][0][1] ) );
  low_swing_tx_1196 \ys[0].xs[0].msg_txrx[1].east_tx  ( .i(\e[0][0][1] ), .c(
        \e_tx[0][0][1] ) );
  low_swing_rx_1195 \ys[0].xs[0].msg_txrx[2].north_rx  ( .i(\s_tx[0][3][2] ), 
        .o(\n[0][0][2] ) );
  low_swing_rx_1194 \ys[0].xs[0].msg_txrx[2].west_rx  ( .i(\e_tx[3][0][2] ), 
        .o(\w[0][0][2] ) );
  low_swing_tx_1195 \ys[0].xs[0].msg_txrx[2].south_tx  ( .i(out[2]), .c(
        \s_tx[0][0][2] ) );
  low_swing_tx_1194 \ys[0].xs[0].msg_txrx[2].east_tx  ( .i(\e[0][0][2] ), .c(
        \e_tx[0][0][2] ) );
  low_swing_rx_1193 \ys[0].xs[0].msg_txrx[3].north_rx  ( .i(\s_tx[0][3][3] ), 
        .o(\n[0][0][3] ) );
  low_swing_rx_1192 \ys[0].xs[0].msg_txrx[3].west_rx  ( .i(\e_tx[3][0][3] ), 
        .o(\w[0][0][3] ) );
  low_swing_tx_1193 \ys[0].xs[0].msg_txrx[3].south_tx  ( .i(out[3]), .c(
        \s_tx[0][0][3] ) );
  low_swing_tx_1192 \ys[0].xs[0].msg_txrx[3].east_tx  ( .i(\e[0][0][3] ), .c(
        \e_tx[0][0][3] ) );
  low_swing_rx_1191 \ys[0].xs[0].msg_txrx[4].north_rx  ( .i(\s_tx[0][3][4] ), 
        .o(\n[0][0][4] ) );
  low_swing_rx_1190 \ys[0].xs[0].msg_txrx[4].west_rx  ( .i(\e_tx[3][0][4] ), 
        .o(\w[0][0][4] ) );
  low_swing_tx_1191 \ys[0].xs[0].msg_txrx[4].south_tx  ( .i(out[4]), .c(
        \s_tx[0][0][4] ) );
  low_swing_tx_1190 \ys[0].xs[0].msg_txrx[4].east_tx  ( .i(\e[0][0][4] ), .c(
        \e_tx[0][0][4] ) );
  low_swing_rx_1189 \ys[0].xs[0].msg_txrx[5].north_rx  ( .i(\s_tx[0][3][5] ), 
        .o(\n[0][0][5] ) );
  low_swing_rx_1188 \ys[0].xs[0].msg_txrx[5].west_rx  ( .i(\e_tx[3][0][5] ), 
        .o(\w[0][0][5] ) );
  low_swing_tx_1189 \ys[0].xs[0].msg_txrx[5].south_tx  ( .i(out[5]), .c(
        \s_tx[0][0][5] ) );
  low_swing_tx_1188 \ys[0].xs[0].msg_txrx[5].east_tx  ( .i(\e[0][0][5] ), .c(
        \e_tx[0][0][5] ) );
  low_swing_rx_1187 \ys[0].xs[0].msg_txrx[6].north_rx  ( .i(\s_tx[0][3][6] ), 
        .o(\n[0][0][6] ) );
  low_swing_rx_1186 \ys[0].xs[0].msg_txrx[6].west_rx  ( .i(\e_tx[3][0][6] ), 
        .o(\w[0][0][6] ) );
  low_swing_tx_1187 \ys[0].xs[0].msg_txrx[6].south_tx  ( .i(out[6]), .c(
        \s_tx[0][0][6] ) );
  low_swing_tx_1186 \ys[0].xs[0].msg_txrx[6].east_tx  ( .i(\e[0][0][6] ), .c(
        \e_tx[0][0][6] ) );
  low_swing_rx_1185 \ys[0].xs[0].msg_txrx[7].north_rx  ( .i(\s_tx[0][3][7] ), 
        .o(\n[0][0][7] ) );
  low_swing_rx_1184 \ys[0].xs[0].msg_txrx[7].west_rx  ( .i(\e_tx[3][0][7] ), 
        .o(\w[0][0][7] ) );
  low_swing_tx_1185 \ys[0].xs[0].msg_txrx[7].south_tx  ( .i(out[7]), .c(
        \s_tx[0][0][7] ) );
  low_swing_tx_1184 \ys[0].xs[0].msg_txrx[7].east_tx  ( .i(\e[0][0][7] ), .c(
        \e_tx[0][0][7] ) );
  low_swing_rx_1183 \ys[0].xs[0].msg_txrx[8].north_rx  ( .i(\s_tx[0][3][8] ), 
        .o(\n[0][0][8] ) );
  low_swing_rx_1182 \ys[0].xs[0].msg_txrx[8].west_rx  ( .i(\e_tx[3][0][8] ), 
        .o(\w[0][0][8] ) );
  low_swing_tx_1183 \ys[0].xs[0].msg_txrx[8].south_tx  ( .i(out[8]), .c(
        \s_tx[0][0][8] ) );
  low_swing_tx_1182 \ys[0].xs[0].msg_txrx[8].east_tx  ( .i(\e[0][0][8] ), .c(
        \e_tx[0][0][8] ) );
  low_swing_rx_1181 \ys[0].xs[0].msg_txrx[9].north_rx  ( .i(\s_tx[0][3][9] ), 
        .o(\n[0][0][9] ) );
  low_swing_rx_1180 \ys[0].xs[0].msg_txrx[9].west_rx  ( .i(\e_tx[3][0][9] ), 
        .o(\w[0][0][9] ) );
  low_swing_tx_1181 \ys[0].xs[0].msg_txrx[9].south_tx  ( .i(out[9]), .c(
        \s_tx[0][0][9] ) );
  low_swing_tx_1180 \ys[0].xs[0].msg_txrx[9].east_tx  ( .i(\e[0][0][9] ), .c(
        \e_tx[0][0][9] ) );
  low_swing_rx_1179 \ys[0].xs[0].msg_txrx[10].north_rx  ( .i(\s_tx[0][3][10] ), 
        .o(\n[0][0][10] ) );
  low_swing_rx_1178 \ys[0].xs[0].msg_txrx[10].west_rx  ( .i(\e_tx[3][0][10] ), 
        .o(\w[0][0][10] ) );
  low_swing_tx_1179 \ys[0].xs[0].msg_txrx[10].south_tx  ( .i(out[10]), .c(
        \s_tx[0][0][10] ) );
  low_swing_tx_1178 \ys[0].xs[0].msg_txrx[10].east_tx  ( .i(\e[0][0][10] ), 
        .c(\e_tx[0][0][10] ) );
  low_swing_rx_1177 \ys[0].xs[0].msg_txrx[11].north_rx  ( .i(\s_tx[0][3][11] ), 
        .o(\n[0][0][11] ) );
  low_swing_rx_1176 \ys[0].xs[0].msg_txrx[11].west_rx  ( .i(\e_tx[3][0][11] ), 
        .o(\w[0][0][11] ) );
  low_swing_tx_1177 \ys[0].xs[0].msg_txrx[11].south_tx  ( .i(out[11]), .c(
        \s_tx[0][0][11] ) );
  low_swing_tx_1176 \ys[0].xs[0].msg_txrx[11].east_tx  ( .i(\e[0][0][11] ), 
        .c(\e_tx[0][0][11] ) );
  low_swing_rx_1175 \ys[0].xs[0].msg_txrx[12].north_rx  ( .i(\s_tx[0][3][12] ), 
        .o(\n[0][0][12] ) );
  low_swing_rx_1174 \ys[0].xs[0].msg_txrx[12].west_rx  ( .i(\e_tx[3][0][12] ), 
        .o(\w[0][0][12] ) );
  low_swing_tx_1175 \ys[0].xs[0].msg_txrx[12].south_tx  ( .i(out[12]), .c(
        \s_tx[0][0][12] ) );
  low_swing_tx_1174 \ys[0].xs[0].msg_txrx[12].east_tx  ( .i(\e[0][0][12] ), 
        .c(\e_tx[0][0][12] ) );
  low_swing_rx_1173 \ys[0].xs[0].msg_txrx[13].north_rx  ( .i(\s_tx[0][3][13] ), 
        .o(\n[0][0][13] ) );
  low_swing_rx_1172 \ys[0].xs[0].msg_txrx[13].west_rx  ( .i(\e_tx[3][0][13] ), 
        .o(\w[0][0][13] ) );
  low_swing_tx_1173 \ys[0].xs[0].msg_txrx[13].south_tx  ( .i(out[13]), .c(
        \s_tx[0][0][13] ) );
  low_swing_tx_1172 \ys[0].xs[0].msg_txrx[13].east_tx  ( .i(\e[0][0][13] ), 
        .c(\e_tx[0][0][13] ) );
  low_swing_rx_1171 \ys[0].xs[0].msg_txrx[14].north_rx  ( .i(\s_tx[0][3][14] ), 
        .o(\n[0][0][14] ) );
  low_swing_rx_1170 \ys[0].xs[0].msg_txrx[14].west_rx  ( .i(\e_tx[3][0][14] ), 
        .o(\w[0][0][14] ) );
  low_swing_tx_1171 \ys[0].xs[0].msg_txrx[14].south_tx  ( .i(out[14]), .c(
        \s_tx[0][0][14] ) );
  low_swing_tx_1170 \ys[0].xs[0].msg_txrx[14].east_tx  ( .i(\e[0][0][14] ), 
        .c(\e_tx[0][0][14] ) );
  low_swing_rx_1169 \ys[0].xs[0].msg_txrx[15].north_rx  ( .i(\s_tx[0][3][15] ), 
        .o(\n[0][0][15] ) );
  low_swing_rx_1168 \ys[0].xs[0].msg_txrx[15].west_rx  ( .i(\e_tx[3][0][15] ), 
        .o(\w[0][0][15] ) );
  low_swing_tx_1169 \ys[0].xs[0].msg_txrx[15].south_tx  ( .i(out[15]), .c(
        \s_tx[0][0][15] ) );
  low_swing_tx_1168 \ys[0].xs[0].msg_txrx[15].east_tx  ( .i(\e[0][0][15] ), 
        .c(\e_tx[0][0][15] ) );
  low_swing_rx_1167 \ys[0].xs[0].msg_txrx[16].north_rx  ( .i(\s_tx[0][3][16] ), 
        .o(\n[0][0][16] ) );
  low_swing_rx_1166 \ys[0].xs[0].msg_txrx[16].west_rx  ( .i(\e_tx[3][0][16] ), 
        .o(\w[0][0][16] ) );
  low_swing_tx_1167 \ys[0].xs[0].msg_txrx[16].south_tx  ( .i(out[16]), .c(
        \s_tx[0][0][16] ) );
  low_swing_tx_1166 \ys[0].xs[0].msg_txrx[16].east_tx  ( .i(\e[0][0][16] ), 
        .c(\e_tx[0][0][16] ) );
  low_swing_rx_1165 \ys[0].xs[0].msg_txrx[17].north_rx  ( .i(\s_tx[0][3][17] ), 
        .o(\n[0][0][17] ) );
  low_swing_rx_1164 \ys[0].xs[0].msg_txrx[17].west_rx  ( .i(\e_tx[3][0][17] ), 
        .o(\w[0][0][17] ) );
  low_swing_tx_1165 \ys[0].xs[0].msg_txrx[17].south_tx  ( .i(out[17]), .c(
        \s_tx[0][0][17] ) );
  low_swing_tx_1164 \ys[0].xs[0].msg_txrx[17].east_tx  ( .i(\e[0][0][17] ), 
        .c(\e_tx[0][0][17] ) );
  low_swing_rx_1163 \ys[0].xs[0].msg_txrx[18].north_rx  ( .i(\s_tx[0][3][18] ), 
        .o(\n[0][0][18] ) );
  low_swing_rx_1162 \ys[0].xs[0].msg_txrx[18].west_rx  ( .i(\e_tx[3][0][18] ), 
        .o(\w[0][0][18] ) );
  low_swing_tx_1163 \ys[0].xs[0].msg_txrx[18].south_tx  ( .i(out[18]), .c(
        \s_tx[0][0][18] ) );
  low_swing_tx_1162 \ys[0].xs[0].msg_txrx[18].east_tx  ( .i(\e[0][0][18] ), 
        .c(\e_tx[0][0][18] ) );
  low_swing_rx_1161 \ys[0].xs[0].msg_txrx[19].north_rx  ( .i(\s_tx[0][3][19] ), 
        .o(\n[0][0][19] ) );
  low_swing_rx_1160 \ys[0].xs[0].msg_txrx[19].west_rx  ( .i(\e_tx[3][0][19] ), 
        .o(\w[0][0][19] ) );
  low_swing_tx_1161 \ys[0].xs[0].msg_txrx[19].south_tx  ( .i(out[19]), .c(
        \s_tx[0][0][19] ) );
  low_swing_tx_1160 \ys[0].xs[0].msg_txrx[19].east_tx  ( .i(\e[0][0][19] ), 
        .c(\e_tx[0][0][19] ) );
  low_swing_rx_1159 \ys[0].xs[0].msg_txrx[20].north_rx  ( .i(\s_tx[0][3][20] ), 
        .o(\n[0][0][20] ) );
  low_swing_rx_1158 \ys[0].xs[0].msg_txrx[20].west_rx  ( .i(\e_tx[3][0][20] ), 
        .o(\w[0][0][20] ) );
  low_swing_tx_1159 \ys[0].xs[0].msg_txrx[20].south_tx  ( .i(out[20]), .c(
        \s_tx[0][0][20] ) );
  low_swing_tx_1158 \ys[0].xs[0].msg_txrx[20].east_tx  ( .i(\e[0][0][20] ), 
        .c(\e_tx[0][0][20] ) );
  low_swing_rx_1157 \ys[0].xs[0].msg_txrx[21].north_rx  ( .i(\s_tx[0][3][21] ), 
        .o(\n[0][0][21] ) );
  low_swing_rx_1156 \ys[0].xs[0].msg_txrx[21].west_rx  ( .i(\e_tx[3][0][21] ), 
        .o(\w[0][0][21] ) );
  low_swing_tx_1157 \ys[0].xs[0].msg_txrx[21].south_tx  ( .i(out[21]), .c(
        \s_tx[0][0][21] ) );
  low_swing_tx_1156 \ys[0].xs[0].msg_txrx[21].east_tx  ( .i(\e[0][0][21] ), 
        .c(\e_tx[0][0][21] ) );
  low_swing_rx_1155 \ys[0].xs[0].msg_txrx[22].north_rx  ( .i(\s_tx[0][3][22] ), 
        .o(\n[0][0][22] ) );
  low_swing_rx_1154 \ys[0].xs[0].msg_txrx[22].west_rx  ( .i(\e_tx[3][0][22] ), 
        .o(\w[0][0][22] ) );
  low_swing_tx_1155 \ys[0].xs[0].msg_txrx[22].south_tx  ( .i(out[22]), .c(
        \s_tx[0][0][22] ) );
  low_swing_tx_1154 \ys[0].xs[0].msg_txrx[22].east_tx  ( .i(\e[0][0][22] ), 
        .c(\e_tx[0][0][22] ) );
  low_swing_rx_1153 \ys[0].xs[0].msg_txrx[23].north_rx  ( .i(\s_tx[0][3][23] ), 
        .o(\n[0][0][23] ) );
  low_swing_rx_1152 \ys[0].xs[0].msg_txrx[23].west_rx  ( .i(\e_tx[3][0][23] ), 
        .o(\w[0][0][23] ) );
  low_swing_tx_1153 \ys[0].xs[0].msg_txrx[23].south_tx  ( .i(out[23]), .c(
        \s_tx[0][0][23] ) );
  low_swing_tx_1152 \ys[0].xs[0].msg_txrx[23].east_tx  ( .i(\e[0][0][23] ), 
        .c(\e_tx[0][0][23] ) );
  low_swing_rx_1151 \ys[0].xs[0].msg_txrx[24].north_rx  ( .i(\s_tx[0][3][24] ), 
        .o(\n[0][0][24] ) );
  low_swing_rx_1150 \ys[0].xs[0].msg_txrx[24].west_rx  ( .i(\e_tx[3][0][24] ), 
        .o(\w[0][0][24] ) );
  low_swing_tx_1151 \ys[0].xs[0].msg_txrx[24].south_tx  ( .i(out[24]), .c(
        \s_tx[0][0][24] ) );
  low_swing_tx_1150 \ys[0].xs[0].msg_txrx[24].east_tx  ( .i(\e[0][0][24] ), 
        .c(\e_tx[0][0][24] ) );
  low_swing_rx_1149 \ys[0].xs[0].msg_txrx[25].north_rx  ( .i(\s_tx[0][3][25] ), 
        .o(\n[0][0][25] ) );
  low_swing_rx_1148 \ys[0].xs[0].msg_txrx[25].west_rx  ( .i(\e_tx[3][0][25] ), 
        .o(\w[0][0][25] ) );
  low_swing_tx_1149 \ys[0].xs[0].msg_txrx[25].south_tx  ( .i(out[25]), .c(
        \s_tx[0][0][25] ) );
  low_swing_tx_1148 \ys[0].xs[0].msg_txrx[25].east_tx  ( .i(\e[0][0][25] ), 
        .c(\e_tx[0][0][25] ) );
  low_swing_rx_1147 \ys[0].xs[0].msg_txrx[26].north_rx  ( .i(\s_tx[0][3][26] ), 
        .o(\n[0][0][26] ) );
  low_swing_rx_1146 \ys[0].xs[0].msg_txrx[26].west_rx  ( .i(\e_tx[3][0][26] ), 
        .o(\w[0][0][26] ) );
  low_swing_tx_1147 \ys[0].xs[0].msg_txrx[26].south_tx  ( .i(out[26]), .c(
        \s_tx[0][0][26] ) );
  low_swing_tx_1146 \ys[0].xs[0].msg_txrx[26].east_tx  ( .i(\e[0][0][26] ), 
        .c(\e_tx[0][0][26] ) );
  low_swing_rx_1145 \ys[0].xs[0].msg_txrx[27].north_rx  ( .i(\s_tx[0][3][27] ), 
        .o(\n[0][0][27] ) );
  low_swing_rx_1144 \ys[0].xs[0].msg_txrx[27].west_rx  ( .i(\e_tx[3][0][27] ), 
        .o(\w[0][0][27] ) );
  low_swing_tx_1145 \ys[0].xs[0].msg_txrx[27].south_tx  ( .i(out[27]), .c(
        \s_tx[0][0][27] ) );
  low_swing_tx_1144 \ys[0].xs[0].msg_txrx[27].east_tx  ( .i(\e[0][0][27] ), 
        .c(\e_tx[0][0][27] ) );
  low_swing_rx_1143 \ys[0].xs[0].msg_txrx[28].north_rx  ( .i(\s_tx[0][3][28] ), 
        .o(\n[0][0][28] ) );
  low_swing_rx_1142 \ys[0].xs[0].msg_txrx[28].west_rx  ( .i(\e_tx[3][0][28] ), 
        .o(\w[0][0][28] ) );
  low_swing_tx_1143 \ys[0].xs[0].msg_txrx[28].south_tx  ( .i(out[28]), .c(
        \s_tx[0][0][28] ) );
  low_swing_tx_1142 \ys[0].xs[0].msg_txrx[28].east_tx  ( .i(\e[0][0][28] ), 
        .c(\e_tx[0][0][28] ) );
  low_swing_rx_1141 \ys[0].xs[0].msg_txrx[29].north_rx  ( .i(\s_tx[0][3][29] ), 
        .o(\n[0][0][29] ) );
  low_swing_rx_1140 \ys[0].xs[0].msg_txrx[29].west_rx  ( .i(\e_tx[3][0][29] ), 
        .o(\w[0][0][29] ) );
  low_swing_tx_1141 \ys[0].xs[0].msg_txrx[29].south_tx  ( .i(out[29]), .c(
        \s_tx[0][0][29] ) );
  low_swing_tx_1140 \ys[0].xs[0].msg_txrx[29].east_tx  ( .i(\e[0][0][29] ), 
        .c(\e_tx[0][0][29] ) );
  low_swing_rx_1139 \ys[0].xs[0].msg_txrx[30].north_rx  ( .i(\s_tx[0][3][30] ), 
        .o(\n[0][0][30] ) );
  low_swing_rx_1138 \ys[0].xs[0].msg_txrx[30].west_rx  ( .i(\e_tx[3][0][30] ), 
        .o(\w[0][0][30] ) );
  low_swing_tx_1139 \ys[0].xs[0].msg_txrx[30].south_tx  ( .i(out[30]), .c(
        \s_tx[0][0][30] ) );
  low_swing_tx_1138 \ys[0].xs[0].msg_txrx[30].east_tx  ( .i(\e[0][0][30] ), 
        .c(\e_tx[0][0][30] ) );
  low_swing_rx_1137 \ys[0].xs[0].msg_txrx[31].north_rx  ( .i(\s_tx[0][3][31] ), 
        .o(\n[0][0][31] ) );
  low_swing_rx_1136 \ys[0].xs[0].msg_txrx[31].west_rx  ( .i(\e_tx[3][0][31] ), 
        .o(\w[0][0][31] ) );
  low_swing_tx_1137 \ys[0].xs[0].msg_txrx[31].south_tx  ( .i(out[31]), .c(
        \s_tx[0][0][31] ) );
  low_swing_tx_1136 \ys[0].xs[0].msg_txrx[31].east_tx  ( .i(\e[0][0][31] ), 
        .c(\e_tx[0][0][31] ) );
  low_swing_rx_1135 \ys[0].xs[0].msg_txrx[32].north_rx  ( .i(\s_tx[0][3][32] ), 
        .o(\n[0][0][32] ) );
  low_swing_rx_1134 \ys[0].xs[0].msg_txrx[32].west_rx  ( .i(\e_tx[3][0][32] ), 
        .o(\w[0][0][32] ) );
  low_swing_tx_1135 \ys[0].xs[0].msg_txrx[32].south_tx  ( .i(\s[0][0][32] ), 
        .c(\s_tx[0][0][32] ) );
  low_swing_tx_1134 \ys[0].xs[0].msg_txrx[32].east_tx  ( .i(\e[0][0][32] ), 
        .c(\e_tx[0][0][32] ) );
  low_swing_rx_1133 \ys[0].xs[0].msg_txrx[33].north_rx  ( .i(\s_tx[0][3][33] ), 
        .o(\n[0][0][33] ) );
  low_swing_rx_1132 \ys[0].xs[0].msg_txrx[33].west_rx  ( .i(\e_tx[3][0][33] ), 
        .o(\w[0][0][33] ) );
  low_swing_tx_1133 \ys[0].xs[0].msg_txrx[33].south_tx  ( .i(\s[0][0][33] ), 
        .c(\s_tx[0][0][33] ) );
  low_swing_tx_1132 \ys[0].xs[0].msg_txrx[33].east_tx  ( .i(\e[0][0][33] ), 
        .c(\e_tx[0][0][33] ) );
  low_swing_rx_1131 \ys[0].xs[0].msg_txrx[34].north_rx  ( .i(\s_tx[0][3][34] ), 
        .o(\n[0][0][34] ) );
  low_swing_rx_1130 \ys[0].xs[0].msg_txrx[34].west_rx  ( .i(\e_tx[3][0][34] ), 
        .o(\w[0][0][34] ) );
  low_swing_tx_1131 \ys[0].xs[0].msg_txrx[34].south_tx  ( .i(\s[0][0][34] ), 
        .c(\s_tx[0][0][34] ) );
  low_swing_tx_1130 \ys[0].xs[0].msg_txrx[34].east_tx  ( .i(\e[0][0][34] ), 
        .c(\e_tx[0][0][34] ) );
  low_swing_rx_1129 \ys[0].xs[0].msg_txrx[35].north_rx  ( .i(\s_tx[0][3][35] ), 
        .o(\n[0][0][35] ) );
  low_swing_rx_1128 \ys[0].xs[0].msg_txrx[35].west_rx  ( .i(\e_tx[3][0][35] ), 
        .o(\w[0][0][35] ) );
  low_swing_tx_1129 \ys[0].xs[0].msg_txrx[35].south_tx  ( .i(\s[0][0][35] ), 
        .c(\s_tx[0][0][35] ) );
  low_swing_tx_1128 \ys[0].xs[0].msg_txrx[35].east_tx  ( .i(\e[0][0][35] ), 
        .c(\e_tx[0][0][35] ) );
  low_swing_rx_1127 \ys[0].xs[0].msg_txrx[36].north_rx  ( .i(\s_tx[0][3][36] ), 
        .o(\n[0][0][36] ) );
  low_swing_rx_1126 \ys[0].xs[0].msg_txrx[36].west_rx  ( .i(\e_tx[3][0][36] ), 
        .o(\w[0][0][36] ) );
  low_swing_tx_1127 \ys[0].xs[0].msg_txrx[36].south_tx  ( .i(\s[0][0][36] ), 
        .c(\s_tx[0][0][36] ) );
  low_swing_tx_1126 \ys[0].xs[0].msg_txrx[36].east_tx  ( .i(\e[0][0][36] ), 
        .c(\e_tx[0][0][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X1_Y0_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[0].xs[1].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[1][0] ), .i_v(\i[1][0][36] ), 
        .i_x({\i[1][0][35] , \i[1][0][34] }), .i_y({\i[1][0][33] , 
        \i[1][0][32] }), .i_data({\i[1][0][31] , \i[1][0][30] , \i[1][0][29] , 
        \i[1][0][28] , \i[1][0][27] , \i[1][0][26] , \i[1][0][25] , 
        \i[1][0][24] , \i[1][0][23] , \i[1][0][22] , \i[1][0][21] , 
        \i[1][0][20] , \i[1][0][19] , \i[1][0][18] , \i[1][0][17] , 
        \i[1][0][16] , \i[1][0][15] , \i[1][0][14] , \i[1][0][13] , 
        \i[1][0][12] , \i[1][0][11] , \i[1][0][10] , \i[1][0][9] , 
        \i[1][0][8] , \i[1][0][7] , \i[1][0][6] , \i[1][0][5] , \i[1][0][4] , 
        \i[1][0][3] , \i[1][0][2] , \i[1][0][1] , \i[1][0][0] }), .o_v(
        \o_v[1][0] ), .o_x({\s[1][0][35] , \s[1][0][34] }), .o_y({
        \s[1][0][33] , \s[1][0][32] }), .o_data({\s[1][0][31] , \s[1][0][30] , 
        \s[1][0][29] , \s[1][0][28] , \s[1][0][27] , \s[1][0][26] , 
        \s[1][0][25] , \s[1][0][24] , \s[1][0][23] , \s[1][0][22] , 
        \s[1][0][21] , \s[1][0][20] , \s[1][0][19] , \s[1][0][18] , 
        \s[1][0][17] , \s[1][0][16] , \s[1][0][15] , \s[1][0][14] , 
        \s[1][0][13] , \s[1][0][12] , \s[1][0][11] , \s[1][0][10] , 
        \s[1][0][9] , \s[1][0][8] , \s[1][0][7] , \s[1][0][6] , \s[1][0][5] , 
        \s[1][0][4] , \s[1][0][3] , \s[1][0][2] , \s[1][0][1] , \s[1][0][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X1_Y0 \ys[0].xs[1].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[1][0][36] ), .n_in_x({\n[1][0][35] , 
        \n[1][0][34] }), .n_in_y({\n[1][0][33] , \n[1][0][32] }), .n_in_data({
        \n[1][0][31] , \n[1][0][30] , \n[1][0][29] , \n[1][0][28] , 
        \n[1][0][27] , \n[1][0][26] , \n[1][0][25] , \n[1][0][24] , 
        \n[1][0][23] , \n[1][0][22] , \n[1][0][21] , \n[1][0][20] , 
        \n[1][0][19] , \n[1][0][18] , \n[1][0][17] , \n[1][0][16] , 
        \n[1][0][15] , \n[1][0][14] , \n[1][0][13] , \n[1][0][12] , 
        \n[1][0][11] , \n[1][0][10] , \n[1][0][9] , \n[1][0][8] , \n[1][0][7] , 
        \n[1][0][6] , \n[1][0][5] , \n[1][0][4] , \n[1][0][3] , \n[1][0][2] , 
        \n[1][0][1] , \n[1][0][0] }), .w_in_v(\w[1][0][36] ), .w_in_x({
        \w[1][0][35] , \w[1][0][34] }), .w_in_y({\w[1][0][33] , \w[1][0][32] }), .w_in_data({\w[1][0][31] , \w[1][0][30] , \w[1][0][29] , \w[1][0][28] , 
        \w[1][0][27] , \w[1][0][26] , \w[1][0][25] , \w[1][0][24] , 
        \w[1][0][23] , \w[1][0][22] , \w[1][0][21] , \w[1][0][20] , 
        \w[1][0][19] , \w[1][0][18] , \w[1][0][17] , \w[1][0][16] , 
        \w[1][0][15] , \w[1][0][14] , \w[1][0][13] , \w[1][0][12] , 
        \w[1][0][11] , \w[1][0][10] , \w[1][0][9] , \w[1][0][8] , \w[1][0][7] , 
        \w[1][0][6] , \w[1][0][5] , \w[1][0][4] , \w[1][0][3] , \w[1][0][2] , 
        \w[1][0][1] , \w[1][0][0] }), .i_v(\i[1][0][36] ), .i_x({\i[1][0][35] , 
        \i[1][0][34] }), .i_y({\i[1][0][33] , \i[1][0][32] }), .i_data({
        \i[1][0][31] , \i[1][0][30] , \i[1][0][29] , \i[1][0][28] , 
        \i[1][0][27] , \i[1][0][26] , \i[1][0][25] , \i[1][0][24] , 
        \i[1][0][23] , \i[1][0][22] , \i[1][0][21] , \i[1][0][20] , 
        \i[1][0][19] , \i[1][0][18] , \i[1][0][17] , \i[1][0][16] , 
        \i[1][0][15] , \i[1][0][14] , \i[1][0][13] , \i[1][0][12] , 
        \i[1][0][11] , \i[1][0][10] , \i[1][0][9] , \i[1][0][8] , \i[1][0][7] , 
        \i[1][0][6] , \i[1][0][5] , \i[1][0][4] , \i[1][0][3] , \i[1][0][2] , 
        \i[1][0][1] , \i[1][0][0] }), .e_b(\e_b[1][0] ), .w_b(\w_b[1][0] ), 
        .i_ack(\i_ack[1][0] ), .o_v(\o_v[1][0] ), .s_out_v(\s[1][0][36] ), 
        .s_out_x({\s[1][0][35] , \s[1][0][34] }), .s_out_y({\s[1][0][33] , 
        \s[1][0][32] }), .s_out_data({\s[1][0][31] , \s[1][0][30] , 
        \s[1][0][29] , \s[1][0][28] , \s[1][0][27] , \s[1][0][26] , 
        \s[1][0][25] , \s[1][0][24] , \s[1][0][23] , \s[1][0][22] , 
        \s[1][0][21] , \s[1][0][20] , \s[1][0][19] , \s[1][0][18] , 
        \s[1][0][17] , \s[1][0][16] , \s[1][0][15] , \s[1][0][14] , 
        \s[1][0][13] , \s[1][0][12] , \s[1][0][11] , \s[1][0][10] , 
        \s[1][0][9] , \s[1][0][8] , \s[1][0][7] , \s[1][0][6] , \s[1][0][5] , 
        \s[1][0][4] , \s[1][0][3] , \s[1][0][2] , \s[1][0][1] , \s[1][0][0] }), 
        .e_out_v(\e[1][0][36] ), .e_out_x({\e[1][0][35] , \e[1][0][34] }), 
        .e_out_y({\e[1][0][33] , \e[1][0][32] }), .e_out_data({\e[1][0][31] , 
        \e[1][0][30] , \e[1][0][29] , \e[1][0][28] , \e[1][0][27] , 
        \e[1][0][26] , \e[1][0][25] , \e[1][0][24] , \e[1][0][23] , 
        \e[1][0][22] , \e[1][0][21] , \e[1][0][20] , \e[1][0][19] , 
        \e[1][0][18] , \e[1][0][17] , \e[1][0][16] , \e[1][0][15] , 
        \e[1][0][14] , \e[1][0][13] , \e[1][0][12] , \e[1][0][11] , 
        \e[1][0][10] , \e[1][0][9] , \e[1][0][8] , \e[1][0][7] , \e[1][0][6] , 
        \e[1][0][5] , \e[1][0][4] , \e[1][0][3] , \e[1][0][2] , \e[1][0][1] , 
        \e[1][0][0] }) );
  low_swing_rx_1125 \ys[0].xs[1].east_bp_rx  ( .i(\w_b_tx[2][0] ), .o(
        \e_b[1][0] ) );
  low_swing_tx_1125 \ys[0].xs[1].west_bp_tx  ( .i(\w_b[1][0] ), .c(
        \w_b_tx[1][0] ) );
  low_swing_rx_1124 \ys[0].xs[1].msg_txrx[0].north_rx  ( .i(\s_tx[1][3][0] ), 
        .o(\n[1][0][0] ) );
  low_swing_rx_1123 \ys[0].xs[1].msg_txrx[0].west_rx  ( .i(\e_tx[0][0][0] ), 
        .o(\w[1][0][0] ) );
  low_swing_tx_1124 \ys[0].xs[1].msg_txrx[0].south_tx  ( .i(\s[1][0][0] ), .c(
        \s_tx[1][0][0] ) );
  low_swing_tx_1123 \ys[0].xs[1].msg_txrx[0].east_tx  ( .i(\e[1][0][0] ), .c(
        \e_tx[1][0][0] ) );
  low_swing_rx_1122 \ys[0].xs[1].msg_txrx[1].north_rx  ( .i(\s_tx[1][3][1] ), 
        .o(\n[1][0][1] ) );
  low_swing_rx_1121 \ys[0].xs[1].msg_txrx[1].west_rx  ( .i(\e_tx[0][0][1] ), 
        .o(\w[1][0][1] ) );
  low_swing_tx_1122 \ys[0].xs[1].msg_txrx[1].south_tx  ( .i(\s[1][0][1] ), .c(
        \s_tx[1][0][1] ) );
  low_swing_tx_1121 \ys[0].xs[1].msg_txrx[1].east_tx  ( .i(\e[1][0][1] ), .c(
        \e_tx[1][0][1] ) );
  low_swing_rx_1120 \ys[0].xs[1].msg_txrx[2].north_rx  ( .i(\s_tx[1][3][2] ), 
        .o(\n[1][0][2] ) );
  low_swing_rx_1119 \ys[0].xs[1].msg_txrx[2].west_rx  ( .i(\e_tx[0][0][2] ), 
        .o(\w[1][0][2] ) );
  low_swing_tx_1120 \ys[0].xs[1].msg_txrx[2].south_tx  ( .i(\s[1][0][2] ), .c(
        \s_tx[1][0][2] ) );
  low_swing_tx_1119 \ys[0].xs[1].msg_txrx[2].east_tx  ( .i(\e[1][0][2] ), .c(
        \e_tx[1][0][2] ) );
  low_swing_rx_1118 \ys[0].xs[1].msg_txrx[3].north_rx  ( .i(\s_tx[1][3][3] ), 
        .o(\n[1][0][3] ) );
  low_swing_rx_1117 \ys[0].xs[1].msg_txrx[3].west_rx  ( .i(\e_tx[0][0][3] ), 
        .o(\w[1][0][3] ) );
  low_swing_tx_1118 \ys[0].xs[1].msg_txrx[3].south_tx  ( .i(\s[1][0][3] ), .c(
        \s_tx[1][0][3] ) );
  low_swing_tx_1117 \ys[0].xs[1].msg_txrx[3].east_tx  ( .i(\e[1][0][3] ), .c(
        \e_tx[1][0][3] ) );
  low_swing_rx_1116 \ys[0].xs[1].msg_txrx[4].north_rx  ( .i(\s_tx[1][3][4] ), 
        .o(\n[1][0][4] ) );
  low_swing_rx_1115 \ys[0].xs[1].msg_txrx[4].west_rx  ( .i(\e_tx[0][0][4] ), 
        .o(\w[1][0][4] ) );
  low_swing_tx_1116 \ys[0].xs[1].msg_txrx[4].south_tx  ( .i(\s[1][0][4] ), .c(
        \s_tx[1][0][4] ) );
  low_swing_tx_1115 \ys[0].xs[1].msg_txrx[4].east_tx  ( .i(\e[1][0][4] ), .c(
        \e_tx[1][0][4] ) );
  low_swing_rx_1114 \ys[0].xs[1].msg_txrx[5].north_rx  ( .i(\s_tx[1][3][5] ), 
        .o(\n[1][0][5] ) );
  low_swing_rx_1113 \ys[0].xs[1].msg_txrx[5].west_rx  ( .i(\e_tx[0][0][5] ), 
        .o(\w[1][0][5] ) );
  low_swing_tx_1114 \ys[0].xs[1].msg_txrx[5].south_tx  ( .i(\s[1][0][5] ), .c(
        \s_tx[1][0][5] ) );
  low_swing_tx_1113 \ys[0].xs[1].msg_txrx[5].east_tx  ( .i(\e[1][0][5] ), .c(
        \e_tx[1][0][5] ) );
  low_swing_rx_1112 \ys[0].xs[1].msg_txrx[6].north_rx  ( .i(\s_tx[1][3][6] ), 
        .o(\n[1][0][6] ) );
  low_swing_rx_1111 \ys[0].xs[1].msg_txrx[6].west_rx  ( .i(\e_tx[0][0][6] ), 
        .o(\w[1][0][6] ) );
  low_swing_tx_1112 \ys[0].xs[1].msg_txrx[6].south_tx  ( .i(\s[1][0][6] ), .c(
        \s_tx[1][0][6] ) );
  low_swing_tx_1111 \ys[0].xs[1].msg_txrx[6].east_tx  ( .i(\e[1][0][6] ), .c(
        \e_tx[1][0][6] ) );
  low_swing_rx_1110 \ys[0].xs[1].msg_txrx[7].north_rx  ( .i(\s_tx[1][3][7] ), 
        .o(\n[1][0][7] ) );
  low_swing_rx_1109 \ys[0].xs[1].msg_txrx[7].west_rx  ( .i(\e_tx[0][0][7] ), 
        .o(\w[1][0][7] ) );
  low_swing_tx_1110 \ys[0].xs[1].msg_txrx[7].south_tx  ( .i(\s[1][0][7] ), .c(
        \s_tx[1][0][7] ) );
  low_swing_tx_1109 \ys[0].xs[1].msg_txrx[7].east_tx  ( .i(\e[1][0][7] ), .c(
        \e_tx[1][0][7] ) );
  low_swing_rx_1108 \ys[0].xs[1].msg_txrx[8].north_rx  ( .i(\s_tx[1][3][8] ), 
        .o(\n[1][0][8] ) );
  low_swing_rx_1107 \ys[0].xs[1].msg_txrx[8].west_rx  ( .i(\e_tx[0][0][8] ), 
        .o(\w[1][0][8] ) );
  low_swing_tx_1108 \ys[0].xs[1].msg_txrx[8].south_tx  ( .i(\s[1][0][8] ), .c(
        \s_tx[1][0][8] ) );
  low_swing_tx_1107 \ys[0].xs[1].msg_txrx[8].east_tx  ( .i(\e[1][0][8] ), .c(
        \e_tx[1][0][8] ) );
  low_swing_rx_1106 \ys[0].xs[1].msg_txrx[9].north_rx  ( .i(\s_tx[1][3][9] ), 
        .o(\n[1][0][9] ) );
  low_swing_rx_1105 \ys[0].xs[1].msg_txrx[9].west_rx  ( .i(\e_tx[0][0][9] ), 
        .o(\w[1][0][9] ) );
  low_swing_tx_1106 \ys[0].xs[1].msg_txrx[9].south_tx  ( .i(\s[1][0][9] ), .c(
        \s_tx[1][0][9] ) );
  low_swing_tx_1105 \ys[0].xs[1].msg_txrx[9].east_tx  ( .i(\e[1][0][9] ), .c(
        \e_tx[1][0][9] ) );
  low_swing_rx_1104 \ys[0].xs[1].msg_txrx[10].north_rx  ( .i(\s_tx[1][3][10] ), 
        .o(\n[1][0][10] ) );
  low_swing_rx_1103 \ys[0].xs[1].msg_txrx[10].west_rx  ( .i(\e_tx[0][0][10] ), 
        .o(\w[1][0][10] ) );
  low_swing_tx_1104 \ys[0].xs[1].msg_txrx[10].south_tx  ( .i(\s[1][0][10] ), 
        .c(\s_tx[1][0][10] ) );
  low_swing_tx_1103 \ys[0].xs[1].msg_txrx[10].east_tx  ( .i(\e[1][0][10] ), 
        .c(\e_tx[1][0][10] ) );
  low_swing_rx_1102 \ys[0].xs[1].msg_txrx[11].north_rx  ( .i(\s_tx[1][3][11] ), 
        .o(\n[1][0][11] ) );
  low_swing_rx_1101 \ys[0].xs[1].msg_txrx[11].west_rx  ( .i(\e_tx[0][0][11] ), 
        .o(\w[1][0][11] ) );
  low_swing_tx_1102 \ys[0].xs[1].msg_txrx[11].south_tx  ( .i(\s[1][0][11] ), 
        .c(\s_tx[1][0][11] ) );
  low_swing_tx_1101 \ys[0].xs[1].msg_txrx[11].east_tx  ( .i(\e[1][0][11] ), 
        .c(\e_tx[1][0][11] ) );
  low_swing_rx_1100 \ys[0].xs[1].msg_txrx[12].north_rx  ( .i(\s_tx[1][3][12] ), 
        .o(\n[1][0][12] ) );
  low_swing_rx_1099 \ys[0].xs[1].msg_txrx[12].west_rx  ( .i(\e_tx[0][0][12] ), 
        .o(\w[1][0][12] ) );
  low_swing_tx_1100 \ys[0].xs[1].msg_txrx[12].south_tx  ( .i(\s[1][0][12] ), 
        .c(\s_tx[1][0][12] ) );
  low_swing_tx_1099 \ys[0].xs[1].msg_txrx[12].east_tx  ( .i(\e[1][0][12] ), 
        .c(\e_tx[1][0][12] ) );
  low_swing_rx_1098 \ys[0].xs[1].msg_txrx[13].north_rx  ( .i(\s_tx[1][3][13] ), 
        .o(\n[1][0][13] ) );
  low_swing_rx_1097 \ys[0].xs[1].msg_txrx[13].west_rx  ( .i(\e_tx[0][0][13] ), 
        .o(\w[1][0][13] ) );
  low_swing_tx_1098 \ys[0].xs[1].msg_txrx[13].south_tx  ( .i(\s[1][0][13] ), 
        .c(\s_tx[1][0][13] ) );
  low_swing_tx_1097 \ys[0].xs[1].msg_txrx[13].east_tx  ( .i(\e[1][0][13] ), 
        .c(\e_tx[1][0][13] ) );
  low_swing_rx_1096 \ys[0].xs[1].msg_txrx[14].north_rx  ( .i(\s_tx[1][3][14] ), 
        .o(\n[1][0][14] ) );
  low_swing_rx_1095 \ys[0].xs[1].msg_txrx[14].west_rx  ( .i(\e_tx[0][0][14] ), 
        .o(\w[1][0][14] ) );
  low_swing_tx_1096 \ys[0].xs[1].msg_txrx[14].south_tx  ( .i(\s[1][0][14] ), 
        .c(\s_tx[1][0][14] ) );
  low_swing_tx_1095 \ys[0].xs[1].msg_txrx[14].east_tx  ( .i(\e[1][0][14] ), 
        .c(\e_tx[1][0][14] ) );
  low_swing_rx_1094 \ys[0].xs[1].msg_txrx[15].north_rx  ( .i(\s_tx[1][3][15] ), 
        .o(\n[1][0][15] ) );
  low_swing_rx_1093 \ys[0].xs[1].msg_txrx[15].west_rx  ( .i(\e_tx[0][0][15] ), 
        .o(\w[1][0][15] ) );
  low_swing_tx_1094 \ys[0].xs[1].msg_txrx[15].south_tx  ( .i(\s[1][0][15] ), 
        .c(\s_tx[1][0][15] ) );
  low_swing_tx_1093 \ys[0].xs[1].msg_txrx[15].east_tx  ( .i(\e[1][0][15] ), 
        .c(\e_tx[1][0][15] ) );
  low_swing_rx_1092 \ys[0].xs[1].msg_txrx[16].north_rx  ( .i(\s_tx[1][3][16] ), 
        .o(\n[1][0][16] ) );
  low_swing_rx_1091 \ys[0].xs[1].msg_txrx[16].west_rx  ( .i(\e_tx[0][0][16] ), 
        .o(\w[1][0][16] ) );
  low_swing_tx_1092 \ys[0].xs[1].msg_txrx[16].south_tx  ( .i(\s[1][0][16] ), 
        .c(\s_tx[1][0][16] ) );
  low_swing_tx_1091 \ys[0].xs[1].msg_txrx[16].east_tx  ( .i(\e[1][0][16] ), 
        .c(\e_tx[1][0][16] ) );
  low_swing_rx_1090 \ys[0].xs[1].msg_txrx[17].north_rx  ( .i(\s_tx[1][3][17] ), 
        .o(\n[1][0][17] ) );
  low_swing_rx_1089 \ys[0].xs[1].msg_txrx[17].west_rx  ( .i(\e_tx[0][0][17] ), 
        .o(\w[1][0][17] ) );
  low_swing_tx_1090 \ys[0].xs[1].msg_txrx[17].south_tx  ( .i(\s[1][0][17] ), 
        .c(\s_tx[1][0][17] ) );
  low_swing_tx_1089 \ys[0].xs[1].msg_txrx[17].east_tx  ( .i(\e[1][0][17] ), 
        .c(\e_tx[1][0][17] ) );
  low_swing_rx_1088 \ys[0].xs[1].msg_txrx[18].north_rx  ( .i(\s_tx[1][3][18] ), 
        .o(\n[1][0][18] ) );
  low_swing_rx_1087 \ys[0].xs[1].msg_txrx[18].west_rx  ( .i(\e_tx[0][0][18] ), 
        .o(\w[1][0][18] ) );
  low_swing_tx_1088 \ys[0].xs[1].msg_txrx[18].south_tx  ( .i(\s[1][0][18] ), 
        .c(\s_tx[1][0][18] ) );
  low_swing_tx_1087 \ys[0].xs[1].msg_txrx[18].east_tx  ( .i(\e[1][0][18] ), 
        .c(\e_tx[1][0][18] ) );
  low_swing_rx_1086 \ys[0].xs[1].msg_txrx[19].north_rx  ( .i(\s_tx[1][3][19] ), 
        .o(\n[1][0][19] ) );
  low_swing_rx_1085 \ys[0].xs[1].msg_txrx[19].west_rx  ( .i(\e_tx[0][0][19] ), 
        .o(\w[1][0][19] ) );
  low_swing_tx_1086 \ys[0].xs[1].msg_txrx[19].south_tx  ( .i(\s[1][0][19] ), 
        .c(\s_tx[1][0][19] ) );
  low_swing_tx_1085 \ys[0].xs[1].msg_txrx[19].east_tx  ( .i(\e[1][0][19] ), 
        .c(\e_tx[1][0][19] ) );
  low_swing_rx_1084 \ys[0].xs[1].msg_txrx[20].north_rx  ( .i(\s_tx[1][3][20] ), 
        .o(\n[1][0][20] ) );
  low_swing_rx_1083 \ys[0].xs[1].msg_txrx[20].west_rx  ( .i(\e_tx[0][0][20] ), 
        .o(\w[1][0][20] ) );
  low_swing_tx_1084 \ys[0].xs[1].msg_txrx[20].south_tx  ( .i(\s[1][0][20] ), 
        .c(\s_tx[1][0][20] ) );
  low_swing_tx_1083 \ys[0].xs[1].msg_txrx[20].east_tx  ( .i(\e[1][0][20] ), 
        .c(\e_tx[1][0][20] ) );
  low_swing_rx_1082 \ys[0].xs[1].msg_txrx[21].north_rx  ( .i(\s_tx[1][3][21] ), 
        .o(\n[1][0][21] ) );
  low_swing_rx_1081 \ys[0].xs[1].msg_txrx[21].west_rx  ( .i(\e_tx[0][0][21] ), 
        .o(\w[1][0][21] ) );
  low_swing_tx_1082 \ys[0].xs[1].msg_txrx[21].south_tx  ( .i(\s[1][0][21] ), 
        .c(\s_tx[1][0][21] ) );
  low_swing_tx_1081 \ys[0].xs[1].msg_txrx[21].east_tx  ( .i(\e[1][0][21] ), 
        .c(\e_tx[1][0][21] ) );
  low_swing_rx_1080 \ys[0].xs[1].msg_txrx[22].north_rx  ( .i(\s_tx[1][3][22] ), 
        .o(\n[1][0][22] ) );
  low_swing_rx_1079 \ys[0].xs[1].msg_txrx[22].west_rx  ( .i(\e_tx[0][0][22] ), 
        .o(\w[1][0][22] ) );
  low_swing_tx_1080 \ys[0].xs[1].msg_txrx[22].south_tx  ( .i(\s[1][0][22] ), 
        .c(\s_tx[1][0][22] ) );
  low_swing_tx_1079 \ys[0].xs[1].msg_txrx[22].east_tx  ( .i(\e[1][0][22] ), 
        .c(\e_tx[1][0][22] ) );
  low_swing_rx_1078 \ys[0].xs[1].msg_txrx[23].north_rx  ( .i(\s_tx[1][3][23] ), 
        .o(\n[1][0][23] ) );
  low_swing_rx_1077 \ys[0].xs[1].msg_txrx[23].west_rx  ( .i(\e_tx[0][0][23] ), 
        .o(\w[1][0][23] ) );
  low_swing_tx_1078 \ys[0].xs[1].msg_txrx[23].south_tx  ( .i(\s[1][0][23] ), 
        .c(\s_tx[1][0][23] ) );
  low_swing_tx_1077 \ys[0].xs[1].msg_txrx[23].east_tx  ( .i(\e[1][0][23] ), 
        .c(\e_tx[1][0][23] ) );
  low_swing_rx_1076 \ys[0].xs[1].msg_txrx[24].north_rx  ( .i(\s_tx[1][3][24] ), 
        .o(\n[1][0][24] ) );
  low_swing_rx_1075 \ys[0].xs[1].msg_txrx[24].west_rx  ( .i(\e_tx[0][0][24] ), 
        .o(\w[1][0][24] ) );
  low_swing_tx_1076 \ys[0].xs[1].msg_txrx[24].south_tx  ( .i(\s[1][0][24] ), 
        .c(\s_tx[1][0][24] ) );
  low_swing_tx_1075 \ys[0].xs[1].msg_txrx[24].east_tx  ( .i(\e[1][0][24] ), 
        .c(\e_tx[1][0][24] ) );
  low_swing_rx_1074 \ys[0].xs[1].msg_txrx[25].north_rx  ( .i(\s_tx[1][3][25] ), 
        .o(\n[1][0][25] ) );
  low_swing_rx_1073 \ys[0].xs[1].msg_txrx[25].west_rx  ( .i(\e_tx[0][0][25] ), 
        .o(\w[1][0][25] ) );
  low_swing_tx_1074 \ys[0].xs[1].msg_txrx[25].south_tx  ( .i(\s[1][0][25] ), 
        .c(\s_tx[1][0][25] ) );
  low_swing_tx_1073 \ys[0].xs[1].msg_txrx[25].east_tx  ( .i(\e[1][0][25] ), 
        .c(\e_tx[1][0][25] ) );
  low_swing_rx_1072 \ys[0].xs[1].msg_txrx[26].north_rx  ( .i(\s_tx[1][3][26] ), 
        .o(\n[1][0][26] ) );
  low_swing_rx_1071 \ys[0].xs[1].msg_txrx[26].west_rx  ( .i(\e_tx[0][0][26] ), 
        .o(\w[1][0][26] ) );
  low_swing_tx_1072 \ys[0].xs[1].msg_txrx[26].south_tx  ( .i(\s[1][0][26] ), 
        .c(\s_tx[1][0][26] ) );
  low_swing_tx_1071 \ys[0].xs[1].msg_txrx[26].east_tx  ( .i(\e[1][0][26] ), 
        .c(\e_tx[1][0][26] ) );
  low_swing_rx_1070 \ys[0].xs[1].msg_txrx[27].north_rx  ( .i(\s_tx[1][3][27] ), 
        .o(\n[1][0][27] ) );
  low_swing_rx_1069 \ys[0].xs[1].msg_txrx[27].west_rx  ( .i(\e_tx[0][0][27] ), 
        .o(\w[1][0][27] ) );
  low_swing_tx_1070 \ys[0].xs[1].msg_txrx[27].south_tx  ( .i(\s[1][0][27] ), 
        .c(\s_tx[1][0][27] ) );
  low_swing_tx_1069 \ys[0].xs[1].msg_txrx[27].east_tx  ( .i(\e[1][0][27] ), 
        .c(\e_tx[1][0][27] ) );
  low_swing_rx_1068 \ys[0].xs[1].msg_txrx[28].north_rx  ( .i(\s_tx[1][3][28] ), 
        .o(\n[1][0][28] ) );
  low_swing_rx_1067 \ys[0].xs[1].msg_txrx[28].west_rx  ( .i(\e_tx[0][0][28] ), 
        .o(\w[1][0][28] ) );
  low_swing_tx_1068 \ys[0].xs[1].msg_txrx[28].south_tx  ( .i(\s[1][0][28] ), 
        .c(\s_tx[1][0][28] ) );
  low_swing_tx_1067 \ys[0].xs[1].msg_txrx[28].east_tx  ( .i(\e[1][0][28] ), 
        .c(\e_tx[1][0][28] ) );
  low_swing_rx_1066 \ys[0].xs[1].msg_txrx[29].north_rx  ( .i(\s_tx[1][3][29] ), 
        .o(\n[1][0][29] ) );
  low_swing_rx_1065 \ys[0].xs[1].msg_txrx[29].west_rx  ( .i(\e_tx[0][0][29] ), 
        .o(\w[1][0][29] ) );
  low_swing_tx_1066 \ys[0].xs[1].msg_txrx[29].south_tx  ( .i(\s[1][0][29] ), 
        .c(\s_tx[1][0][29] ) );
  low_swing_tx_1065 \ys[0].xs[1].msg_txrx[29].east_tx  ( .i(\e[1][0][29] ), 
        .c(\e_tx[1][0][29] ) );
  low_swing_rx_1064 \ys[0].xs[1].msg_txrx[30].north_rx  ( .i(\s_tx[1][3][30] ), 
        .o(\n[1][0][30] ) );
  low_swing_rx_1063 \ys[0].xs[1].msg_txrx[30].west_rx  ( .i(\e_tx[0][0][30] ), 
        .o(\w[1][0][30] ) );
  low_swing_tx_1064 \ys[0].xs[1].msg_txrx[30].south_tx  ( .i(\s[1][0][30] ), 
        .c(\s_tx[1][0][30] ) );
  low_swing_tx_1063 \ys[0].xs[1].msg_txrx[30].east_tx  ( .i(\e[1][0][30] ), 
        .c(\e_tx[1][0][30] ) );
  low_swing_rx_1062 \ys[0].xs[1].msg_txrx[31].north_rx  ( .i(\s_tx[1][3][31] ), 
        .o(\n[1][0][31] ) );
  low_swing_rx_1061 \ys[0].xs[1].msg_txrx[31].west_rx  ( .i(\e_tx[0][0][31] ), 
        .o(\w[1][0][31] ) );
  low_swing_tx_1062 \ys[0].xs[1].msg_txrx[31].south_tx  ( .i(\s[1][0][31] ), 
        .c(\s_tx[1][0][31] ) );
  low_swing_tx_1061 \ys[0].xs[1].msg_txrx[31].east_tx  ( .i(\e[1][0][31] ), 
        .c(\e_tx[1][0][31] ) );
  low_swing_rx_1060 \ys[0].xs[1].msg_txrx[32].north_rx  ( .i(\s_tx[1][3][32] ), 
        .o(\n[1][0][32] ) );
  low_swing_rx_1059 \ys[0].xs[1].msg_txrx[32].west_rx  ( .i(\e_tx[0][0][32] ), 
        .o(\w[1][0][32] ) );
  low_swing_tx_1060 \ys[0].xs[1].msg_txrx[32].south_tx  ( .i(\s[1][0][32] ), 
        .c(\s_tx[1][0][32] ) );
  low_swing_tx_1059 \ys[0].xs[1].msg_txrx[32].east_tx  ( .i(\e[1][0][32] ), 
        .c(\e_tx[1][0][32] ) );
  low_swing_rx_1058 \ys[0].xs[1].msg_txrx[33].north_rx  ( .i(\s_tx[1][3][33] ), 
        .o(\n[1][0][33] ) );
  low_swing_rx_1057 \ys[0].xs[1].msg_txrx[33].west_rx  ( .i(\e_tx[0][0][33] ), 
        .o(\w[1][0][33] ) );
  low_swing_tx_1058 \ys[0].xs[1].msg_txrx[33].south_tx  ( .i(\s[1][0][33] ), 
        .c(\s_tx[1][0][33] ) );
  low_swing_tx_1057 \ys[0].xs[1].msg_txrx[33].east_tx  ( .i(\e[1][0][33] ), 
        .c(\e_tx[1][0][33] ) );
  low_swing_rx_1056 \ys[0].xs[1].msg_txrx[34].north_rx  ( .i(\s_tx[1][3][34] ), 
        .o(\n[1][0][34] ) );
  low_swing_rx_1055 \ys[0].xs[1].msg_txrx[34].west_rx  ( .i(\e_tx[0][0][34] ), 
        .o(\w[1][0][34] ) );
  low_swing_tx_1056 \ys[0].xs[1].msg_txrx[34].south_tx  ( .i(\s[1][0][34] ), 
        .c(\s_tx[1][0][34] ) );
  low_swing_tx_1055 \ys[0].xs[1].msg_txrx[34].east_tx  ( .i(\e[1][0][34] ), 
        .c(\e_tx[1][0][34] ) );
  low_swing_rx_1054 \ys[0].xs[1].msg_txrx[35].north_rx  ( .i(\s_tx[1][3][35] ), 
        .o(\n[1][0][35] ) );
  low_swing_rx_1053 \ys[0].xs[1].msg_txrx[35].west_rx  ( .i(\e_tx[0][0][35] ), 
        .o(\w[1][0][35] ) );
  low_swing_tx_1054 \ys[0].xs[1].msg_txrx[35].south_tx  ( .i(\s[1][0][35] ), 
        .c(\s_tx[1][0][35] ) );
  low_swing_tx_1053 \ys[0].xs[1].msg_txrx[35].east_tx  ( .i(\e[1][0][35] ), 
        .c(\e_tx[1][0][35] ) );
  low_swing_rx_1052 \ys[0].xs[1].msg_txrx[36].north_rx  ( .i(\s_tx[1][3][36] ), 
        .o(\n[1][0][36] ) );
  low_swing_rx_1051 \ys[0].xs[1].msg_txrx[36].west_rx  ( .i(\e_tx[0][0][36] ), 
        .o(\w[1][0][36] ) );
  low_swing_tx_1052 \ys[0].xs[1].msg_txrx[36].south_tx  ( .i(\s[1][0][36] ), 
        .c(\s_tx[1][0][36] ) );
  low_swing_tx_1051 \ys[0].xs[1].msg_txrx[36].east_tx  ( .i(\e[1][0][36] ), 
        .c(\e_tx[1][0][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X2_Y0_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[0].xs[2].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[2][0] ), .i_v(\i[2][0][36] ), 
        .i_x({\i[2][0][35] , \i[2][0][34] }), .i_y({\i[2][0][33] , 
        \i[2][0][32] }), .i_data({\i[2][0][31] , \i[2][0][30] , \i[2][0][29] , 
        \i[2][0][28] , \i[2][0][27] , \i[2][0][26] , \i[2][0][25] , 
        \i[2][0][24] , \i[2][0][23] , \i[2][0][22] , \i[2][0][21] , 
        \i[2][0][20] , \i[2][0][19] , \i[2][0][18] , \i[2][0][17] , 
        \i[2][0][16] , \i[2][0][15] , \i[2][0][14] , \i[2][0][13] , 
        \i[2][0][12] , \i[2][0][11] , \i[2][0][10] , \i[2][0][9] , 
        \i[2][0][8] , \i[2][0][7] , \i[2][0][6] , \i[2][0][5] , \i[2][0][4] , 
        \i[2][0][3] , \i[2][0][2] , \i[2][0][1] , \i[2][0][0] }), .o_v(
        \o_v[2][0] ), .o_x({\s[2][0][35] , \s[2][0][34] }), .o_y({
        \s[2][0][33] , \s[2][0][32] }), .o_data({\s[2][0][31] , \s[2][0][30] , 
        \s[2][0][29] , \s[2][0][28] , \s[2][0][27] , \s[2][0][26] , 
        \s[2][0][25] , \s[2][0][24] , \s[2][0][23] , \s[2][0][22] , 
        \s[2][0][21] , \s[2][0][20] , \s[2][0][19] , \s[2][0][18] , 
        \s[2][0][17] , \s[2][0][16] , \s[2][0][15] , \s[2][0][14] , 
        \s[2][0][13] , \s[2][0][12] , \s[2][0][11] , \s[2][0][10] , 
        \s[2][0][9] , \s[2][0][8] , \s[2][0][7] , \s[2][0][6] , \s[2][0][5] , 
        \s[2][0][4] , \s[2][0][3] , \s[2][0][2] , \s[2][0][1] , \s[2][0][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X2_Y0 \ys[0].xs[2].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[2][0][36] ), .n_in_x({\n[2][0][35] , 
        \n[2][0][34] }), .n_in_y({\n[2][0][33] , \n[2][0][32] }), .n_in_data({
        \n[2][0][31] , \n[2][0][30] , \n[2][0][29] , \n[2][0][28] , 
        \n[2][0][27] , \n[2][0][26] , \n[2][0][25] , \n[2][0][24] , 
        \n[2][0][23] , \n[2][0][22] , \n[2][0][21] , \n[2][0][20] , 
        \n[2][0][19] , \n[2][0][18] , \n[2][0][17] , \n[2][0][16] , 
        \n[2][0][15] , \n[2][0][14] , \n[2][0][13] , \n[2][0][12] , 
        \n[2][0][11] , \n[2][0][10] , \n[2][0][9] , \n[2][0][8] , \n[2][0][7] , 
        \n[2][0][6] , \n[2][0][5] , \n[2][0][4] , \n[2][0][3] , \n[2][0][2] , 
        \n[2][0][1] , \n[2][0][0] }), .w_in_v(\w[2][0][36] ), .w_in_x({
        \w[2][0][35] , \w[2][0][34] }), .w_in_y({\w[2][0][33] , \w[2][0][32] }), .w_in_data({\w[2][0][31] , \w[2][0][30] , \w[2][0][29] , \w[2][0][28] , 
        \w[2][0][27] , \w[2][0][26] , \w[2][0][25] , \w[2][0][24] , 
        \w[2][0][23] , \w[2][0][22] , \w[2][0][21] , \w[2][0][20] , 
        \w[2][0][19] , \w[2][0][18] , \w[2][0][17] , \w[2][0][16] , 
        \w[2][0][15] , \w[2][0][14] , \w[2][0][13] , \w[2][0][12] , 
        \w[2][0][11] , \w[2][0][10] , \w[2][0][9] , \w[2][0][8] , \w[2][0][7] , 
        \w[2][0][6] , \w[2][0][5] , \w[2][0][4] , \w[2][0][3] , \w[2][0][2] , 
        \w[2][0][1] , \w[2][0][0] }), .i_v(\i[2][0][36] ), .i_x({\i[2][0][35] , 
        \i[2][0][34] }), .i_y({\i[2][0][33] , \i[2][0][32] }), .i_data({
        \i[2][0][31] , \i[2][0][30] , \i[2][0][29] , \i[2][0][28] , 
        \i[2][0][27] , \i[2][0][26] , \i[2][0][25] , \i[2][0][24] , 
        \i[2][0][23] , \i[2][0][22] , \i[2][0][21] , \i[2][0][20] , 
        \i[2][0][19] , \i[2][0][18] , \i[2][0][17] , \i[2][0][16] , 
        \i[2][0][15] , \i[2][0][14] , \i[2][0][13] , \i[2][0][12] , 
        \i[2][0][11] , \i[2][0][10] , \i[2][0][9] , \i[2][0][8] , \i[2][0][7] , 
        \i[2][0][6] , \i[2][0][5] , \i[2][0][4] , \i[2][0][3] , \i[2][0][2] , 
        \i[2][0][1] , \i[2][0][0] }), .e_b(\e_b[2][0] ), .w_b(\w_b[2][0] ), 
        .i_ack(\i_ack[2][0] ), .o_v(\o_v[2][0] ), .s_out_v(\s[2][0][36] ), 
        .s_out_x({\s[2][0][35] , \s[2][0][34] }), .s_out_y({\s[2][0][33] , 
        \s[2][0][32] }), .s_out_data({\s[2][0][31] , \s[2][0][30] , 
        \s[2][0][29] , \s[2][0][28] , \s[2][0][27] , \s[2][0][26] , 
        \s[2][0][25] , \s[2][0][24] , \s[2][0][23] , \s[2][0][22] , 
        \s[2][0][21] , \s[2][0][20] , \s[2][0][19] , \s[2][0][18] , 
        \s[2][0][17] , \s[2][0][16] , \s[2][0][15] , \s[2][0][14] , 
        \s[2][0][13] , \s[2][0][12] , \s[2][0][11] , \s[2][0][10] , 
        \s[2][0][9] , \s[2][0][8] , \s[2][0][7] , \s[2][0][6] , \s[2][0][5] , 
        \s[2][0][4] , \s[2][0][3] , \s[2][0][2] , \s[2][0][1] , \s[2][0][0] }), 
        .e_out_v(\e[2][0][36] ), .e_out_x({\e[2][0][35] , \e[2][0][34] }), 
        .e_out_y({\e[2][0][33] , \e[2][0][32] }), .e_out_data({\e[2][0][31] , 
        \e[2][0][30] , \e[2][0][29] , \e[2][0][28] , \e[2][0][27] , 
        \e[2][0][26] , \e[2][0][25] , \e[2][0][24] , \e[2][0][23] , 
        \e[2][0][22] , \e[2][0][21] , \e[2][0][20] , \e[2][0][19] , 
        \e[2][0][18] , \e[2][0][17] , \e[2][0][16] , \e[2][0][15] , 
        \e[2][0][14] , \e[2][0][13] , \e[2][0][12] , \e[2][0][11] , 
        \e[2][0][10] , \e[2][0][9] , \e[2][0][8] , \e[2][0][7] , \e[2][0][6] , 
        \e[2][0][5] , \e[2][0][4] , \e[2][0][3] , \e[2][0][2] , \e[2][0][1] , 
        \e[2][0][0] }) );
  low_swing_rx_1050 \ys[0].xs[2].east_bp_rx  ( .i(\w_b_tx[3][0] ), .o(
        \e_b[2][0] ) );
  low_swing_tx_1050 \ys[0].xs[2].west_bp_tx  ( .i(\w_b[2][0] ), .c(
        \w_b_tx[2][0] ) );
  low_swing_rx_1049 \ys[0].xs[2].msg_txrx[0].north_rx  ( .i(\s_tx[2][3][0] ), 
        .o(\n[2][0][0] ) );
  low_swing_rx_1048 \ys[0].xs[2].msg_txrx[0].west_rx  ( .i(\e_tx[1][0][0] ), 
        .o(\w[2][0][0] ) );
  low_swing_tx_1049 \ys[0].xs[2].msg_txrx[0].south_tx  ( .i(\s[2][0][0] ), .c(
        \s_tx[2][0][0] ) );
  low_swing_tx_1048 \ys[0].xs[2].msg_txrx[0].east_tx  ( .i(\e[2][0][0] ), .c(
        \e_tx[2][0][0] ) );
  low_swing_rx_1047 \ys[0].xs[2].msg_txrx[1].north_rx  ( .i(\s_tx[2][3][1] ), 
        .o(\n[2][0][1] ) );
  low_swing_rx_1046 \ys[0].xs[2].msg_txrx[1].west_rx  ( .i(\e_tx[1][0][1] ), 
        .o(\w[2][0][1] ) );
  low_swing_tx_1047 \ys[0].xs[2].msg_txrx[1].south_tx  ( .i(\s[2][0][1] ), .c(
        \s_tx[2][0][1] ) );
  low_swing_tx_1046 \ys[0].xs[2].msg_txrx[1].east_tx  ( .i(\e[2][0][1] ), .c(
        \e_tx[2][0][1] ) );
  low_swing_rx_1045 \ys[0].xs[2].msg_txrx[2].north_rx  ( .i(\s_tx[2][3][2] ), 
        .o(\n[2][0][2] ) );
  low_swing_rx_1044 \ys[0].xs[2].msg_txrx[2].west_rx  ( .i(\e_tx[1][0][2] ), 
        .o(\w[2][0][2] ) );
  low_swing_tx_1045 \ys[0].xs[2].msg_txrx[2].south_tx  ( .i(\s[2][0][2] ), .c(
        \s_tx[2][0][2] ) );
  low_swing_tx_1044 \ys[0].xs[2].msg_txrx[2].east_tx  ( .i(\e[2][0][2] ), .c(
        \e_tx[2][0][2] ) );
  low_swing_rx_1043 \ys[0].xs[2].msg_txrx[3].north_rx  ( .i(\s_tx[2][3][3] ), 
        .o(\n[2][0][3] ) );
  low_swing_rx_1042 \ys[0].xs[2].msg_txrx[3].west_rx  ( .i(\e_tx[1][0][3] ), 
        .o(\w[2][0][3] ) );
  low_swing_tx_1043 \ys[0].xs[2].msg_txrx[3].south_tx  ( .i(\s[2][0][3] ), .c(
        \s_tx[2][0][3] ) );
  low_swing_tx_1042 \ys[0].xs[2].msg_txrx[3].east_tx  ( .i(\e[2][0][3] ), .c(
        \e_tx[2][0][3] ) );
  low_swing_rx_1041 \ys[0].xs[2].msg_txrx[4].north_rx  ( .i(\s_tx[2][3][4] ), 
        .o(\n[2][0][4] ) );
  low_swing_rx_1040 \ys[0].xs[2].msg_txrx[4].west_rx  ( .i(\e_tx[1][0][4] ), 
        .o(\w[2][0][4] ) );
  low_swing_tx_1041 \ys[0].xs[2].msg_txrx[4].south_tx  ( .i(\s[2][0][4] ), .c(
        \s_tx[2][0][4] ) );
  low_swing_tx_1040 \ys[0].xs[2].msg_txrx[4].east_tx  ( .i(\e[2][0][4] ), .c(
        \e_tx[2][0][4] ) );
  low_swing_rx_1039 \ys[0].xs[2].msg_txrx[5].north_rx  ( .i(\s_tx[2][3][5] ), 
        .o(\n[2][0][5] ) );
  low_swing_rx_1038 \ys[0].xs[2].msg_txrx[5].west_rx  ( .i(\e_tx[1][0][5] ), 
        .o(\w[2][0][5] ) );
  low_swing_tx_1039 \ys[0].xs[2].msg_txrx[5].south_tx  ( .i(\s[2][0][5] ), .c(
        \s_tx[2][0][5] ) );
  low_swing_tx_1038 \ys[0].xs[2].msg_txrx[5].east_tx  ( .i(\e[2][0][5] ), .c(
        \e_tx[2][0][5] ) );
  low_swing_rx_1037 \ys[0].xs[2].msg_txrx[6].north_rx  ( .i(\s_tx[2][3][6] ), 
        .o(\n[2][0][6] ) );
  low_swing_rx_1036 \ys[0].xs[2].msg_txrx[6].west_rx  ( .i(\e_tx[1][0][6] ), 
        .o(\w[2][0][6] ) );
  low_swing_tx_1037 \ys[0].xs[2].msg_txrx[6].south_tx  ( .i(\s[2][0][6] ), .c(
        \s_tx[2][0][6] ) );
  low_swing_tx_1036 \ys[0].xs[2].msg_txrx[6].east_tx  ( .i(\e[2][0][6] ), .c(
        \e_tx[2][0][6] ) );
  low_swing_rx_1035 \ys[0].xs[2].msg_txrx[7].north_rx  ( .i(\s_tx[2][3][7] ), 
        .o(\n[2][0][7] ) );
  low_swing_rx_1034 \ys[0].xs[2].msg_txrx[7].west_rx  ( .i(\e_tx[1][0][7] ), 
        .o(\w[2][0][7] ) );
  low_swing_tx_1035 \ys[0].xs[2].msg_txrx[7].south_tx  ( .i(\s[2][0][7] ), .c(
        \s_tx[2][0][7] ) );
  low_swing_tx_1034 \ys[0].xs[2].msg_txrx[7].east_tx  ( .i(\e[2][0][7] ), .c(
        \e_tx[2][0][7] ) );
  low_swing_rx_1033 \ys[0].xs[2].msg_txrx[8].north_rx  ( .i(\s_tx[2][3][8] ), 
        .o(\n[2][0][8] ) );
  low_swing_rx_1032 \ys[0].xs[2].msg_txrx[8].west_rx  ( .i(\e_tx[1][0][8] ), 
        .o(\w[2][0][8] ) );
  low_swing_tx_1033 \ys[0].xs[2].msg_txrx[8].south_tx  ( .i(\s[2][0][8] ), .c(
        \s_tx[2][0][8] ) );
  low_swing_tx_1032 \ys[0].xs[2].msg_txrx[8].east_tx  ( .i(\e[2][0][8] ), .c(
        \e_tx[2][0][8] ) );
  low_swing_rx_1031 \ys[0].xs[2].msg_txrx[9].north_rx  ( .i(\s_tx[2][3][9] ), 
        .o(\n[2][0][9] ) );
  low_swing_rx_1030 \ys[0].xs[2].msg_txrx[9].west_rx  ( .i(\e_tx[1][0][9] ), 
        .o(\w[2][0][9] ) );
  low_swing_tx_1031 \ys[0].xs[2].msg_txrx[9].south_tx  ( .i(\s[2][0][9] ), .c(
        \s_tx[2][0][9] ) );
  low_swing_tx_1030 \ys[0].xs[2].msg_txrx[9].east_tx  ( .i(\e[2][0][9] ), .c(
        \e_tx[2][0][9] ) );
  low_swing_rx_1029 \ys[0].xs[2].msg_txrx[10].north_rx  ( .i(\s_tx[2][3][10] ), 
        .o(\n[2][0][10] ) );
  low_swing_rx_1028 \ys[0].xs[2].msg_txrx[10].west_rx  ( .i(\e_tx[1][0][10] ), 
        .o(\w[2][0][10] ) );
  low_swing_tx_1029 \ys[0].xs[2].msg_txrx[10].south_tx  ( .i(\s[2][0][10] ), 
        .c(\s_tx[2][0][10] ) );
  low_swing_tx_1028 \ys[0].xs[2].msg_txrx[10].east_tx  ( .i(\e[2][0][10] ), 
        .c(\e_tx[2][0][10] ) );
  low_swing_rx_1027 \ys[0].xs[2].msg_txrx[11].north_rx  ( .i(\s_tx[2][3][11] ), 
        .o(\n[2][0][11] ) );
  low_swing_rx_1026 \ys[0].xs[2].msg_txrx[11].west_rx  ( .i(\e_tx[1][0][11] ), 
        .o(\w[2][0][11] ) );
  low_swing_tx_1027 \ys[0].xs[2].msg_txrx[11].south_tx  ( .i(\s[2][0][11] ), 
        .c(\s_tx[2][0][11] ) );
  low_swing_tx_1026 \ys[0].xs[2].msg_txrx[11].east_tx  ( .i(\e[2][0][11] ), 
        .c(\e_tx[2][0][11] ) );
  low_swing_rx_1025 \ys[0].xs[2].msg_txrx[12].north_rx  ( .i(\s_tx[2][3][12] ), 
        .o(\n[2][0][12] ) );
  low_swing_rx_1024 \ys[0].xs[2].msg_txrx[12].west_rx  ( .i(\e_tx[1][0][12] ), 
        .o(\w[2][0][12] ) );
  low_swing_tx_1025 \ys[0].xs[2].msg_txrx[12].south_tx  ( .i(\s[2][0][12] ), 
        .c(\s_tx[2][0][12] ) );
  low_swing_tx_1024 \ys[0].xs[2].msg_txrx[12].east_tx  ( .i(\e[2][0][12] ), 
        .c(\e_tx[2][0][12] ) );
  low_swing_rx_1023 \ys[0].xs[2].msg_txrx[13].north_rx  ( .i(\s_tx[2][3][13] ), 
        .o(\n[2][0][13] ) );
  low_swing_rx_1022 \ys[0].xs[2].msg_txrx[13].west_rx  ( .i(\e_tx[1][0][13] ), 
        .o(\w[2][0][13] ) );
  low_swing_tx_1023 \ys[0].xs[2].msg_txrx[13].south_tx  ( .i(\s[2][0][13] ), 
        .c(\s_tx[2][0][13] ) );
  low_swing_tx_1022 \ys[0].xs[2].msg_txrx[13].east_tx  ( .i(\e[2][0][13] ), 
        .c(\e_tx[2][0][13] ) );
  low_swing_rx_1021 \ys[0].xs[2].msg_txrx[14].north_rx  ( .i(\s_tx[2][3][14] ), 
        .o(\n[2][0][14] ) );
  low_swing_rx_1020 \ys[0].xs[2].msg_txrx[14].west_rx  ( .i(\e_tx[1][0][14] ), 
        .o(\w[2][0][14] ) );
  low_swing_tx_1021 \ys[0].xs[2].msg_txrx[14].south_tx  ( .i(\s[2][0][14] ), 
        .c(\s_tx[2][0][14] ) );
  low_swing_tx_1020 \ys[0].xs[2].msg_txrx[14].east_tx  ( .i(\e[2][0][14] ), 
        .c(\e_tx[2][0][14] ) );
  low_swing_rx_1019 \ys[0].xs[2].msg_txrx[15].north_rx  ( .i(\s_tx[2][3][15] ), 
        .o(\n[2][0][15] ) );
  low_swing_rx_1018 \ys[0].xs[2].msg_txrx[15].west_rx  ( .i(\e_tx[1][0][15] ), 
        .o(\w[2][0][15] ) );
  low_swing_tx_1019 \ys[0].xs[2].msg_txrx[15].south_tx  ( .i(\s[2][0][15] ), 
        .c(\s_tx[2][0][15] ) );
  low_swing_tx_1018 \ys[0].xs[2].msg_txrx[15].east_tx  ( .i(\e[2][0][15] ), 
        .c(\e_tx[2][0][15] ) );
  low_swing_rx_1017 \ys[0].xs[2].msg_txrx[16].north_rx  ( .i(\s_tx[2][3][16] ), 
        .o(\n[2][0][16] ) );
  low_swing_rx_1016 \ys[0].xs[2].msg_txrx[16].west_rx  ( .i(\e_tx[1][0][16] ), 
        .o(\w[2][0][16] ) );
  low_swing_tx_1017 \ys[0].xs[2].msg_txrx[16].south_tx  ( .i(\s[2][0][16] ), 
        .c(\s_tx[2][0][16] ) );
  low_swing_tx_1016 \ys[0].xs[2].msg_txrx[16].east_tx  ( .i(\e[2][0][16] ), 
        .c(\e_tx[2][0][16] ) );
  low_swing_rx_1015 \ys[0].xs[2].msg_txrx[17].north_rx  ( .i(\s_tx[2][3][17] ), 
        .o(\n[2][0][17] ) );
  low_swing_rx_1014 \ys[0].xs[2].msg_txrx[17].west_rx  ( .i(\e_tx[1][0][17] ), 
        .o(\w[2][0][17] ) );
  low_swing_tx_1015 \ys[0].xs[2].msg_txrx[17].south_tx  ( .i(\s[2][0][17] ), 
        .c(\s_tx[2][0][17] ) );
  low_swing_tx_1014 \ys[0].xs[2].msg_txrx[17].east_tx  ( .i(\e[2][0][17] ), 
        .c(\e_tx[2][0][17] ) );
  low_swing_rx_1013 \ys[0].xs[2].msg_txrx[18].north_rx  ( .i(\s_tx[2][3][18] ), 
        .o(\n[2][0][18] ) );
  low_swing_rx_1012 \ys[0].xs[2].msg_txrx[18].west_rx  ( .i(\e_tx[1][0][18] ), 
        .o(\w[2][0][18] ) );
  low_swing_tx_1013 \ys[0].xs[2].msg_txrx[18].south_tx  ( .i(\s[2][0][18] ), 
        .c(\s_tx[2][0][18] ) );
  low_swing_tx_1012 \ys[0].xs[2].msg_txrx[18].east_tx  ( .i(\e[2][0][18] ), 
        .c(\e_tx[2][0][18] ) );
  low_swing_rx_1011 \ys[0].xs[2].msg_txrx[19].north_rx  ( .i(\s_tx[2][3][19] ), 
        .o(\n[2][0][19] ) );
  low_swing_rx_1010 \ys[0].xs[2].msg_txrx[19].west_rx  ( .i(\e_tx[1][0][19] ), 
        .o(\w[2][0][19] ) );
  low_swing_tx_1011 \ys[0].xs[2].msg_txrx[19].south_tx  ( .i(\s[2][0][19] ), 
        .c(\s_tx[2][0][19] ) );
  low_swing_tx_1010 \ys[0].xs[2].msg_txrx[19].east_tx  ( .i(\e[2][0][19] ), 
        .c(\e_tx[2][0][19] ) );
  low_swing_rx_1009 \ys[0].xs[2].msg_txrx[20].north_rx  ( .i(\s_tx[2][3][20] ), 
        .o(\n[2][0][20] ) );
  low_swing_rx_1008 \ys[0].xs[2].msg_txrx[20].west_rx  ( .i(\e_tx[1][0][20] ), 
        .o(\w[2][0][20] ) );
  low_swing_tx_1009 \ys[0].xs[2].msg_txrx[20].south_tx  ( .i(\s[2][0][20] ), 
        .c(\s_tx[2][0][20] ) );
  low_swing_tx_1008 \ys[0].xs[2].msg_txrx[20].east_tx  ( .i(\e[2][0][20] ), 
        .c(\e_tx[2][0][20] ) );
  low_swing_rx_1007 \ys[0].xs[2].msg_txrx[21].north_rx  ( .i(\s_tx[2][3][21] ), 
        .o(\n[2][0][21] ) );
  low_swing_rx_1006 \ys[0].xs[2].msg_txrx[21].west_rx  ( .i(\e_tx[1][0][21] ), 
        .o(\w[2][0][21] ) );
  low_swing_tx_1007 \ys[0].xs[2].msg_txrx[21].south_tx  ( .i(\s[2][0][21] ), 
        .c(\s_tx[2][0][21] ) );
  low_swing_tx_1006 \ys[0].xs[2].msg_txrx[21].east_tx  ( .i(\e[2][0][21] ), 
        .c(\e_tx[2][0][21] ) );
  low_swing_rx_1005 \ys[0].xs[2].msg_txrx[22].north_rx  ( .i(\s_tx[2][3][22] ), 
        .o(\n[2][0][22] ) );
  low_swing_rx_1004 \ys[0].xs[2].msg_txrx[22].west_rx  ( .i(\e_tx[1][0][22] ), 
        .o(\w[2][0][22] ) );
  low_swing_tx_1005 \ys[0].xs[2].msg_txrx[22].south_tx  ( .i(\s[2][0][22] ), 
        .c(\s_tx[2][0][22] ) );
  low_swing_tx_1004 \ys[0].xs[2].msg_txrx[22].east_tx  ( .i(\e[2][0][22] ), 
        .c(\e_tx[2][0][22] ) );
  low_swing_rx_1003 \ys[0].xs[2].msg_txrx[23].north_rx  ( .i(\s_tx[2][3][23] ), 
        .o(\n[2][0][23] ) );
  low_swing_rx_1002 \ys[0].xs[2].msg_txrx[23].west_rx  ( .i(\e_tx[1][0][23] ), 
        .o(\w[2][0][23] ) );
  low_swing_tx_1003 \ys[0].xs[2].msg_txrx[23].south_tx  ( .i(\s[2][0][23] ), 
        .c(\s_tx[2][0][23] ) );
  low_swing_tx_1002 \ys[0].xs[2].msg_txrx[23].east_tx  ( .i(\e[2][0][23] ), 
        .c(\e_tx[2][0][23] ) );
  low_swing_rx_1001 \ys[0].xs[2].msg_txrx[24].north_rx  ( .i(\s_tx[2][3][24] ), 
        .o(\n[2][0][24] ) );
  low_swing_rx_1000 \ys[0].xs[2].msg_txrx[24].west_rx  ( .i(\e_tx[1][0][24] ), 
        .o(\w[2][0][24] ) );
  low_swing_tx_1001 \ys[0].xs[2].msg_txrx[24].south_tx  ( .i(\s[2][0][24] ), 
        .c(\s_tx[2][0][24] ) );
  low_swing_tx_1000 \ys[0].xs[2].msg_txrx[24].east_tx  ( .i(\e[2][0][24] ), 
        .c(\e_tx[2][0][24] ) );
  low_swing_rx_999 \ys[0].xs[2].msg_txrx[25].north_rx  ( .i(\s_tx[2][3][25] ), 
        .o(\n[2][0][25] ) );
  low_swing_rx_998 \ys[0].xs[2].msg_txrx[25].west_rx  ( .i(\e_tx[1][0][25] ), 
        .o(\w[2][0][25] ) );
  low_swing_tx_999 \ys[0].xs[2].msg_txrx[25].south_tx  ( .i(\s[2][0][25] ), 
        .c(\s_tx[2][0][25] ) );
  low_swing_tx_998 \ys[0].xs[2].msg_txrx[25].east_tx  ( .i(\e[2][0][25] ), .c(
        \e_tx[2][0][25] ) );
  low_swing_rx_997 \ys[0].xs[2].msg_txrx[26].north_rx  ( .i(\s_tx[2][3][26] ), 
        .o(\n[2][0][26] ) );
  low_swing_rx_996 \ys[0].xs[2].msg_txrx[26].west_rx  ( .i(\e_tx[1][0][26] ), 
        .o(\w[2][0][26] ) );
  low_swing_tx_997 \ys[0].xs[2].msg_txrx[26].south_tx  ( .i(\s[2][0][26] ), 
        .c(\s_tx[2][0][26] ) );
  low_swing_tx_996 \ys[0].xs[2].msg_txrx[26].east_tx  ( .i(\e[2][0][26] ), .c(
        \e_tx[2][0][26] ) );
  low_swing_rx_995 \ys[0].xs[2].msg_txrx[27].north_rx  ( .i(\s_tx[2][3][27] ), 
        .o(\n[2][0][27] ) );
  low_swing_rx_994 \ys[0].xs[2].msg_txrx[27].west_rx  ( .i(\e_tx[1][0][27] ), 
        .o(\w[2][0][27] ) );
  low_swing_tx_995 \ys[0].xs[2].msg_txrx[27].south_tx  ( .i(\s[2][0][27] ), 
        .c(\s_tx[2][0][27] ) );
  low_swing_tx_994 \ys[0].xs[2].msg_txrx[27].east_tx  ( .i(\e[2][0][27] ), .c(
        \e_tx[2][0][27] ) );
  low_swing_rx_993 \ys[0].xs[2].msg_txrx[28].north_rx  ( .i(\s_tx[2][3][28] ), 
        .o(\n[2][0][28] ) );
  low_swing_rx_992 \ys[0].xs[2].msg_txrx[28].west_rx  ( .i(\e_tx[1][0][28] ), 
        .o(\w[2][0][28] ) );
  low_swing_tx_993 \ys[0].xs[2].msg_txrx[28].south_tx  ( .i(\s[2][0][28] ), 
        .c(\s_tx[2][0][28] ) );
  low_swing_tx_992 \ys[0].xs[2].msg_txrx[28].east_tx  ( .i(\e[2][0][28] ), .c(
        \e_tx[2][0][28] ) );
  low_swing_rx_991 \ys[0].xs[2].msg_txrx[29].north_rx  ( .i(\s_tx[2][3][29] ), 
        .o(\n[2][0][29] ) );
  low_swing_rx_990 \ys[0].xs[2].msg_txrx[29].west_rx  ( .i(\e_tx[1][0][29] ), 
        .o(\w[2][0][29] ) );
  low_swing_tx_991 \ys[0].xs[2].msg_txrx[29].south_tx  ( .i(\s[2][0][29] ), 
        .c(\s_tx[2][0][29] ) );
  low_swing_tx_990 \ys[0].xs[2].msg_txrx[29].east_tx  ( .i(\e[2][0][29] ), .c(
        \e_tx[2][0][29] ) );
  low_swing_rx_989 \ys[0].xs[2].msg_txrx[30].north_rx  ( .i(\s_tx[2][3][30] ), 
        .o(\n[2][0][30] ) );
  low_swing_rx_988 \ys[0].xs[2].msg_txrx[30].west_rx  ( .i(\e_tx[1][0][30] ), 
        .o(\w[2][0][30] ) );
  low_swing_tx_989 \ys[0].xs[2].msg_txrx[30].south_tx  ( .i(\s[2][0][30] ), 
        .c(\s_tx[2][0][30] ) );
  low_swing_tx_988 \ys[0].xs[2].msg_txrx[30].east_tx  ( .i(\e[2][0][30] ), .c(
        \e_tx[2][0][30] ) );
  low_swing_rx_987 \ys[0].xs[2].msg_txrx[31].north_rx  ( .i(\s_tx[2][3][31] ), 
        .o(\n[2][0][31] ) );
  low_swing_rx_986 \ys[0].xs[2].msg_txrx[31].west_rx  ( .i(\e_tx[1][0][31] ), 
        .o(\w[2][0][31] ) );
  low_swing_tx_987 \ys[0].xs[2].msg_txrx[31].south_tx  ( .i(\s[2][0][31] ), 
        .c(\s_tx[2][0][31] ) );
  low_swing_tx_986 \ys[0].xs[2].msg_txrx[31].east_tx  ( .i(\e[2][0][31] ), .c(
        \e_tx[2][0][31] ) );
  low_swing_rx_985 \ys[0].xs[2].msg_txrx[32].north_rx  ( .i(\s_tx[2][3][32] ), 
        .o(\n[2][0][32] ) );
  low_swing_rx_984 \ys[0].xs[2].msg_txrx[32].west_rx  ( .i(\e_tx[1][0][32] ), 
        .o(\w[2][0][32] ) );
  low_swing_tx_985 \ys[0].xs[2].msg_txrx[32].south_tx  ( .i(\s[2][0][32] ), 
        .c(\s_tx[2][0][32] ) );
  low_swing_tx_984 \ys[0].xs[2].msg_txrx[32].east_tx  ( .i(\e[2][0][32] ), .c(
        \e_tx[2][0][32] ) );
  low_swing_rx_983 \ys[0].xs[2].msg_txrx[33].north_rx  ( .i(\s_tx[2][3][33] ), 
        .o(\n[2][0][33] ) );
  low_swing_rx_982 \ys[0].xs[2].msg_txrx[33].west_rx  ( .i(\e_tx[1][0][33] ), 
        .o(\w[2][0][33] ) );
  low_swing_tx_983 \ys[0].xs[2].msg_txrx[33].south_tx  ( .i(\s[2][0][33] ), 
        .c(\s_tx[2][0][33] ) );
  low_swing_tx_982 \ys[0].xs[2].msg_txrx[33].east_tx  ( .i(\e[2][0][33] ), .c(
        \e_tx[2][0][33] ) );
  low_swing_rx_981 \ys[0].xs[2].msg_txrx[34].north_rx  ( .i(\s_tx[2][3][34] ), 
        .o(\n[2][0][34] ) );
  low_swing_rx_980 \ys[0].xs[2].msg_txrx[34].west_rx  ( .i(\e_tx[1][0][34] ), 
        .o(\w[2][0][34] ) );
  low_swing_tx_981 \ys[0].xs[2].msg_txrx[34].south_tx  ( .i(\s[2][0][34] ), 
        .c(\s_tx[2][0][34] ) );
  low_swing_tx_980 \ys[0].xs[2].msg_txrx[34].east_tx  ( .i(\e[2][0][34] ), .c(
        \e_tx[2][0][34] ) );
  low_swing_rx_979 \ys[0].xs[2].msg_txrx[35].north_rx  ( .i(\s_tx[2][3][35] ), 
        .o(\n[2][0][35] ) );
  low_swing_rx_978 \ys[0].xs[2].msg_txrx[35].west_rx  ( .i(\e_tx[1][0][35] ), 
        .o(\w[2][0][35] ) );
  low_swing_tx_979 \ys[0].xs[2].msg_txrx[35].south_tx  ( .i(\s[2][0][35] ), 
        .c(\s_tx[2][0][35] ) );
  low_swing_tx_978 \ys[0].xs[2].msg_txrx[35].east_tx  ( .i(\e[2][0][35] ), .c(
        \e_tx[2][0][35] ) );
  low_swing_rx_977 \ys[0].xs[2].msg_txrx[36].north_rx  ( .i(\s_tx[2][3][36] ), 
        .o(\n[2][0][36] ) );
  low_swing_rx_976 \ys[0].xs[2].msg_txrx[36].west_rx  ( .i(\e_tx[1][0][36] ), 
        .o(\w[2][0][36] ) );
  low_swing_tx_977 \ys[0].xs[2].msg_txrx[36].south_tx  ( .i(\s[2][0][36] ), 
        .c(\s_tx[2][0][36] ) );
  low_swing_tx_976 \ys[0].xs[2].msg_txrx[36].east_tx  ( .i(\e[2][0][36] ), .c(
        \e_tx[2][0][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X3_Y0_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[0].xs[3].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[3][0] ), .i_v(\i[3][0][36] ), 
        .i_x({\i[3][0][35] , \i[3][0][34] }), .i_y({\i[3][0][33] , 
        \i[3][0][32] }), .i_data({\i[3][0][31] , \i[3][0][30] , \i[3][0][29] , 
        \i[3][0][28] , \i[3][0][27] , \i[3][0][26] , \i[3][0][25] , 
        \i[3][0][24] , \i[3][0][23] , \i[3][0][22] , \i[3][0][21] , 
        \i[3][0][20] , \i[3][0][19] , \i[3][0][18] , \i[3][0][17] , 
        \i[3][0][16] , \i[3][0][15] , \i[3][0][14] , \i[3][0][13] , 
        \i[3][0][12] , \i[3][0][11] , \i[3][0][10] , \i[3][0][9] , 
        \i[3][0][8] , \i[3][0][7] , \i[3][0][6] , \i[3][0][5] , \i[3][0][4] , 
        \i[3][0][3] , \i[3][0][2] , \i[3][0][1] , \i[3][0][0] }), .o_v(
        \o_v[3][0] ), .o_x({\s[3][0][35] , \s[3][0][34] }), .o_y({
        \s[3][0][33] , \s[3][0][32] }), .o_data({\s[3][0][31] , \s[3][0][30] , 
        \s[3][0][29] , \s[3][0][28] , \s[3][0][27] , \s[3][0][26] , 
        \s[3][0][25] , \s[3][0][24] , \s[3][0][23] , \s[3][0][22] , 
        \s[3][0][21] , \s[3][0][20] , \s[3][0][19] , \s[3][0][18] , 
        \s[3][0][17] , \s[3][0][16] , \s[3][0][15] , \s[3][0][14] , 
        \s[3][0][13] , \s[3][0][12] , \s[3][0][11] , \s[3][0][10] , 
        \s[3][0][9] , \s[3][0][8] , \s[3][0][7] , \s[3][0][6] , \s[3][0][5] , 
        \s[3][0][4] , \s[3][0][3] , \s[3][0][2] , \s[3][0][1] , \s[3][0][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X3_Y0 \ys[0].xs[3].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[3][0][36] ), .n_in_x({\n[3][0][35] , 
        \n[3][0][34] }), .n_in_y({\n[3][0][33] , \n[3][0][32] }), .n_in_data({
        \n[3][0][31] , \n[3][0][30] , \n[3][0][29] , \n[3][0][28] , 
        \n[3][0][27] , \n[3][0][26] , \n[3][0][25] , \n[3][0][24] , 
        \n[3][0][23] , \n[3][0][22] , \n[3][0][21] , \n[3][0][20] , 
        \n[3][0][19] , \n[3][0][18] , \n[3][0][17] , \n[3][0][16] , 
        \n[3][0][15] , \n[3][0][14] , \n[3][0][13] , \n[3][0][12] , 
        \n[3][0][11] , \n[3][0][10] , \n[3][0][9] , \n[3][0][8] , \n[3][0][7] , 
        \n[3][0][6] , \n[3][0][5] , \n[3][0][4] , \n[3][0][3] , \n[3][0][2] , 
        \n[3][0][1] , \n[3][0][0] }), .w_in_v(\w[3][0][36] ), .w_in_x({
        \w[3][0][35] , \w[3][0][34] }), .w_in_y({\w[3][0][33] , \w[3][0][32] }), .w_in_data({\w[3][0][31] , \w[3][0][30] , \w[3][0][29] , \w[3][0][28] , 
        \w[3][0][27] , \w[3][0][26] , \w[3][0][25] , \w[3][0][24] , 
        \w[3][0][23] , \w[3][0][22] , \w[3][0][21] , \w[3][0][20] , 
        \w[3][0][19] , \w[3][0][18] , \w[3][0][17] , \w[3][0][16] , 
        \w[3][0][15] , \w[3][0][14] , \w[3][0][13] , \w[3][0][12] , 
        \w[3][0][11] , \w[3][0][10] , \w[3][0][9] , \w[3][0][8] , \w[3][0][7] , 
        \w[3][0][6] , \w[3][0][5] , \w[3][0][4] , \w[3][0][3] , \w[3][0][2] , 
        \w[3][0][1] , \w[3][0][0] }), .i_v(\i[3][0][36] ), .i_x({\i[3][0][35] , 
        \i[3][0][34] }), .i_y({\i[3][0][33] , \i[3][0][32] }), .i_data({
        \i[3][0][31] , \i[3][0][30] , \i[3][0][29] , \i[3][0][28] , 
        \i[3][0][27] , \i[3][0][26] , \i[3][0][25] , \i[3][0][24] , 
        \i[3][0][23] , \i[3][0][22] , \i[3][0][21] , \i[3][0][20] , 
        \i[3][0][19] , \i[3][0][18] , \i[3][0][17] , \i[3][0][16] , 
        \i[3][0][15] , \i[3][0][14] , \i[3][0][13] , \i[3][0][12] , 
        \i[3][0][11] , \i[3][0][10] , \i[3][0][9] , \i[3][0][8] , \i[3][0][7] , 
        \i[3][0][6] , \i[3][0][5] , \i[3][0][4] , \i[3][0][3] , \i[3][0][2] , 
        \i[3][0][1] , \i[3][0][0] }), .e_b(\e_b[3][0] ), .w_b(\w_b[3][0] ), 
        .i_ack(\i_ack[3][0] ), .o_v(\o_v[3][0] ), .s_out_v(\s[3][0][36] ), 
        .s_out_x({\s[3][0][35] , \s[3][0][34] }), .s_out_y({\s[3][0][33] , 
        \s[3][0][32] }), .s_out_data({\s[3][0][31] , \s[3][0][30] , 
        \s[3][0][29] , \s[3][0][28] , \s[3][0][27] , \s[3][0][26] , 
        \s[3][0][25] , \s[3][0][24] , \s[3][0][23] , \s[3][0][22] , 
        \s[3][0][21] , \s[3][0][20] , \s[3][0][19] , \s[3][0][18] , 
        \s[3][0][17] , \s[3][0][16] , \s[3][0][15] , \s[3][0][14] , 
        \s[3][0][13] , \s[3][0][12] , \s[3][0][11] , \s[3][0][10] , 
        \s[3][0][9] , \s[3][0][8] , \s[3][0][7] , \s[3][0][6] , \s[3][0][5] , 
        \s[3][0][4] , \s[3][0][3] , \s[3][0][2] , \s[3][0][1] , \s[3][0][0] }), 
        .e_out_v(\e[3][0][36] ), .e_out_x({\e[3][0][35] , \e[3][0][34] }), 
        .e_out_y({\e[3][0][33] , \e[3][0][32] }), .e_out_data({\e[3][0][31] , 
        \e[3][0][30] , \e[3][0][29] , \e[3][0][28] , \e[3][0][27] , 
        \e[3][0][26] , \e[3][0][25] , \e[3][0][24] , \e[3][0][23] , 
        \e[3][0][22] , \e[3][0][21] , \e[3][0][20] , \e[3][0][19] , 
        \e[3][0][18] , \e[3][0][17] , \e[3][0][16] , \e[3][0][15] , 
        \e[3][0][14] , \e[3][0][13] , \e[3][0][12] , \e[3][0][11] , 
        \e[3][0][10] , \e[3][0][9] , \e[3][0][8] , \e[3][0][7] , \e[3][0][6] , 
        \e[3][0][5] , \e[3][0][4] , \e[3][0][3] , \e[3][0][2] , \e[3][0][1] , 
        \e[3][0][0] }) );
  low_swing_rx_975 \ys[0].xs[3].east_bp_rx  ( .i(\w_b_tx[0][0] ), .o(
        \e_b[3][0] ) );
  low_swing_tx_975 \ys[0].xs[3].west_bp_tx  ( .i(\w_b[3][0] ), .c(
        \w_b_tx[3][0] ) );
  low_swing_rx_974 \ys[0].xs[3].msg_txrx[0].north_rx  ( .i(\s_tx[3][3][0] ), 
        .o(\n[3][0][0] ) );
  low_swing_rx_973 \ys[0].xs[3].msg_txrx[0].west_rx  ( .i(\e_tx[2][0][0] ), 
        .o(\w[3][0][0] ) );
  low_swing_tx_974 \ys[0].xs[3].msg_txrx[0].south_tx  ( .i(\s[3][0][0] ), .c(
        \s_tx[3][0][0] ) );
  low_swing_tx_973 \ys[0].xs[3].msg_txrx[0].east_tx  ( .i(\e[3][0][0] ), .c(
        \e_tx[3][0][0] ) );
  low_swing_rx_972 \ys[0].xs[3].msg_txrx[1].north_rx  ( .i(\s_tx[3][3][1] ), 
        .o(\n[3][0][1] ) );
  low_swing_rx_971 \ys[0].xs[3].msg_txrx[1].west_rx  ( .i(\e_tx[2][0][1] ), 
        .o(\w[3][0][1] ) );
  low_swing_tx_972 \ys[0].xs[3].msg_txrx[1].south_tx  ( .i(\s[3][0][1] ), .c(
        \s_tx[3][0][1] ) );
  low_swing_tx_971 \ys[0].xs[3].msg_txrx[1].east_tx  ( .i(\e[3][0][1] ), .c(
        \e_tx[3][0][1] ) );
  low_swing_rx_970 \ys[0].xs[3].msg_txrx[2].north_rx  ( .i(\s_tx[3][3][2] ), 
        .o(\n[3][0][2] ) );
  low_swing_rx_969 \ys[0].xs[3].msg_txrx[2].west_rx  ( .i(\e_tx[2][0][2] ), 
        .o(\w[3][0][2] ) );
  low_swing_tx_970 \ys[0].xs[3].msg_txrx[2].south_tx  ( .i(\s[3][0][2] ), .c(
        \s_tx[3][0][2] ) );
  low_swing_tx_969 \ys[0].xs[3].msg_txrx[2].east_tx  ( .i(\e[3][0][2] ), .c(
        \e_tx[3][0][2] ) );
  low_swing_rx_968 \ys[0].xs[3].msg_txrx[3].north_rx  ( .i(\s_tx[3][3][3] ), 
        .o(\n[3][0][3] ) );
  low_swing_rx_967 \ys[0].xs[3].msg_txrx[3].west_rx  ( .i(\e_tx[2][0][3] ), 
        .o(\w[3][0][3] ) );
  low_swing_tx_968 \ys[0].xs[3].msg_txrx[3].south_tx  ( .i(\s[3][0][3] ), .c(
        \s_tx[3][0][3] ) );
  low_swing_tx_967 \ys[0].xs[3].msg_txrx[3].east_tx  ( .i(\e[3][0][3] ), .c(
        \e_tx[3][0][3] ) );
  low_swing_rx_966 \ys[0].xs[3].msg_txrx[4].north_rx  ( .i(\s_tx[3][3][4] ), 
        .o(\n[3][0][4] ) );
  low_swing_rx_965 \ys[0].xs[3].msg_txrx[4].west_rx  ( .i(\e_tx[2][0][4] ), 
        .o(\w[3][0][4] ) );
  low_swing_tx_966 \ys[0].xs[3].msg_txrx[4].south_tx  ( .i(\s[3][0][4] ), .c(
        \s_tx[3][0][4] ) );
  low_swing_tx_965 \ys[0].xs[3].msg_txrx[4].east_tx  ( .i(\e[3][0][4] ), .c(
        \e_tx[3][0][4] ) );
  low_swing_rx_964 \ys[0].xs[3].msg_txrx[5].north_rx  ( .i(\s_tx[3][3][5] ), 
        .o(\n[3][0][5] ) );
  low_swing_rx_963 \ys[0].xs[3].msg_txrx[5].west_rx  ( .i(\e_tx[2][0][5] ), 
        .o(\w[3][0][5] ) );
  low_swing_tx_964 \ys[0].xs[3].msg_txrx[5].south_tx  ( .i(\s[3][0][5] ), .c(
        \s_tx[3][0][5] ) );
  low_swing_tx_963 \ys[0].xs[3].msg_txrx[5].east_tx  ( .i(\e[3][0][5] ), .c(
        \e_tx[3][0][5] ) );
  low_swing_rx_962 \ys[0].xs[3].msg_txrx[6].north_rx  ( .i(\s_tx[3][3][6] ), 
        .o(\n[3][0][6] ) );
  low_swing_rx_961 \ys[0].xs[3].msg_txrx[6].west_rx  ( .i(\e_tx[2][0][6] ), 
        .o(\w[3][0][6] ) );
  low_swing_tx_962 \ys[0].xs[3].msg_txrx[6].south_tx  ( .i(\s[3][0][6] ), .c(
        \s_tx[3][0][6] ) );
  low_swing_tx_961 \ys[0].xs[3].msg_txrx[6].east_tx  ( .i(\e[3][0][6] ), .c(
        \e_tx[3][0][6] ) );
  low_swing_rx_960 \ys[0].xs[3].msg_txrx[7].north_rx  ( .i(\s_tx[3][3][7] ), 
        .o(\n[3][0][7] ) );
  low_swing_rx_959 \ys[0].xs[3].msg_txrx[7].west_rx  ( .i(\e_tx[2][0][7] ), 
        .o(\w[3][0][7] ) );
  low_swing_tx_960 \ys[0].xs[3].msg_txrx[7].south_tx  ( .i(\s[3][0][7] ), .c(
        \s_tx[3][0][7] ) );
  low_swing_tx_959 \ys[0].xs[3].msg_txrx[7].east_tx  ( .i(\e[3][0][7] ), .c(
        \e_tx[3][0][7] ) );
  low_swing_rx_958 \ys[0].xs[3].msg_txrx[8].north_rx  ( .i(\s_tx[3][3][8] ), 
        .o(\n[3][0][8] ) );
  low_swing_rx_957 \ys[0].xs[3].msg_txrx[8].west_rx  ( .i(\e_tx[2][0][8] ), 
        .o(\w[3][0][8] ) );
  low_swing_tx_958 \ys[0].xs[3].msg_txrx[8].south_tx  ( .i(\s[3][0][8] ), .c(
        \s_tx[3][0][8] ) );
  low_swing_tx_957 \ys[0].xs[3].msg_txrx[8].east_tx  ( .i(\e[3][0][8] ), .c(
        \e_tx[3][0][8] ) );
  low_swing_rx_956 \ys[0].xs[3].msg_txrx[9].north_rx  ( .i(\s_tx[3][3][9] ), 
        .o(\n[3][0][9] ) );
  low_swing_rx_955 \ys[0].xs[3].msg_txrx[9].west_rx  ( .i(\e_tx[2][0][9] ), 
        .o(\w[3][0][9] ) );
  low_swing_tx_956 \ys[0].xs[3].msg_txrx[9].south_tx  ( .i(\s[3][0][9] ), .c(
        \s_tx[3][0][9] ) );
  low_swing_tx_955 \ys[0].xs[3].msg_txrx[9].east_tx  ( .i(\e[3][0][9] ), .c(
        \e_tx[3][0][9] ) );
  low_swing_rx_954 \ys[0].xs[3].msg_txrx[10].north_rx  ( .i(\s_tx[3][3][10] ), 
        .o(\n[3][0][10] ) );
  low_swing_rx_953 \ys[0].xs[3].msg_txrx[10].west_rx  ( .i(\e_tx[2][0][10] ), 
        .o(\w[3][0][10] ) );
  low_swing_tx_954 \ys[0].xs[3].msg_txrx[10].south_tx  ( .i(\s[3][0][10] ), 
        .c(\s_tx[3][0][10] ) );
  low_swing_tx_953 \ys[0].xs[3].msg_txrx[10].east_tx  ( .i(\e[3][0][10] ), .c(
        \e_tx[3][0][10] ) );
  low_swing_rx_952 \ys[0].xs[3].msg_txrx[11].north_rx  ( .i(\s_tx[3][3][11] ), 
        .o(\n[3][0][11] ) );
  low_swing_rx_951 \ys[0].xs[3].msg_txrx[11].west_rx  ( .i(\e_tx[2][0][11] ), 
        .o(\w[3][0][11] ) );
  low_swing_tx_952 \ys[0].xs[3].msg_txrx[11].south_tx  ( .i(\s[3][0][11] ), 
        .c(\s_tx[3][0][11] ) );
  low_swing_tx_951 \ys[0].xs[3].msg_txrx[11].east_tx  ( .i(\e[3][0][11] ), .c(
        \e_tx[3][0][11] ) );
  low_swing_rx_950 \ys[0].xs[3].msg_txrx[12].north_rx  ( .i(\s_tx[3][3][12] ), 
        .o(\n[3][0][12] ) );
  low_swing_rx_949 \ys[0].xs[3].msg_txrx[12].west_rx  ( .i(\e_tx[2][0][12] ), 
        .o(\w[3][0][12] ) );
  low_swing_tx_950 \ys[0].xs[3].msg_txrx[12].south_tx  ( .i(\s[3][0][12] ), 
        .c(\s_tx[3][0][12] ) );
  low_swing_tx_949 \ys[0].xs[3].msg_txrx[12].east_tx  ( .i(\e[3][0][12] ), .c(
        \e_tx[3][0][12] ) );
  low_swing_rx_948 \ys[0].xs[3].msg_txrx[13].north_rx  ( .i(\s_tx[3][3][13] ), 
        .o(\n[3][0][13] ) );
  low_swing_rx_947 \ys[0].xs[3].msg_txrx[13].west_rx  ( .i(\e_tx[2][0][13] ), 
        .o(\w[3][0][13] ) );
  low_swing_tx_948 \ys[0].xs[3].msg_txrx[13].south_tx  ( .i(\s[3][0][13] ), 
        .c(\s_tx[3][0][13] ) );
  low_swing_tx_947 \ys[0].xs[3].msg_txrx[13].east_tx  ( .i(\e[3][0][13] ), .c(
        \e_tx[3][0][13] ) );
  low_swing_rx_946 \ys[0].xs[3].msg_txrx[14].north_rx  ( .i(\s_tx[3][3][14] ), 
        .o(\n[3][0][14] ) );
  low_swing_rx_945 \ys[0].xs[3].msg_txrx[14].west_rx  ( .i(\e_tx[2][0][14] ), 
        .o(\w[3][0][14] ) );
  low_swing_tx_946 \ys[0].xs[3].msg_txrx[14].south_tx  ( .i(\s[3][0][14] ), 
        .c(\s_tx[3][0][14] ) );
  low_swing_tx_945 \ys[0].xs[3].msg_txrx[14].east_tx  ( .i(\e[3][0][14] ), .c(
        \e_tx[3][0][14] ) );
  low_swing_rx_944 \ys[0].xs[3].msg_txrx[15].north_rx  ( .i(\s_tx[3][3][15] ), 
        .o(\n[3][0][15] ) );
  low_swing_rx_943 \ys[0].xs[3].msg_txrx[15].west_rx  ( .i(\e_tx[2][0][15] ), 
        .o(\w[3][0][15] ) );
  low_swing_tx_944 \ys[0].xs[3].msg_txrx[15].south_tx  ( .i(\s[3][0][15] ), 
        .c(\s_tx[3][0][15] ) );
  low_swing_tx_943 \ys[0].xs[3].msg_txrx[15].east_tx  ( .i(\e[3][0][15] ), .c(
        \e_tx[3][0][15] ) );
  low_swing_rx_942 \ys[0].xs[3].msg_txrx[16].north_rx  ( .i(\s_tx[3][3][16] ), 
        .o(\n[3][0][16] ) );
  low_swing_rx_941 \ys[0].xs[3].msg_txrx[16].west_rx  ( .i(\e_tx[2][0][16] ), 
        .o(\w[3][0][16] ) );
  low_swing_tx_942 \ys[0].xs[3].msg_txrx[16].south_tx  ( .i(\s[3][0][16] ), 
        .c(\s_tx[3][0][16] ) );
  low_swing_tx_941 \ys[0].xs[3].msg_txrx[16].east_tx  ( .i(\e[3][0][16] ), .c(
        \e_tx[3][0][16] ) );
  low_swing_rx_940 \ys[0].xs[3].msg_txrx[17].north_rx  ( .i(\s_tx[3][3][17] ), 
        .o(\n[3][0][17] ) );
  low_swing_rx_939 \ys[0].xs[3].msg_txrx[17].west_rx  ( .i(\e_tx[2][0][17] ), 
        .o(\w[3][0][17] ) );
  low_swing_tx_940 \ys[0].xs[3].msg_txrx[17].south_tx  ( .i(\s[3][0][17] ), 
        .c(\s_tx[3][0][17] ) );
  low_swing_tx_939 \ys[0].xs[3].msg_txrx[17].east_tx  ( .i(\e[3][0][17] ), .c(
        \e_tx[3][0][17] ) );
  low_swing_rx_938 \ys[0].xs[3].msg_txrx[18].north_rx  ( .i(\s_tx[3][3][18] ), 
        .o(\n[3][0][18] ) );
  low_swing_rx_937 \ys[0].xs[3].msg_txrx[18].west_rx  ( .i(\e_tx[2][0][18] ), 
        .o(\w[3][0][18] ) );
  low_swing_tx_938 \ys[0].xs[3].msg_txrx[18].south_tx  ( .i(\s[3][0][18] ), 
        .c(\s_tx[3][0][18] ) );
  low_swing_tx_937 \ys[0].xs[3].msg_txrx[18].east_tx  ( .i(\e[3][0][18] ), .c(
        \e_tx[3][0][18] ) );
  low_swing_rx_936 \ys[0].xs[3].msg_txrx[19].north_rx  ( .i(\s_tx[3][3][19] ), 
        .o(\n[3][0][19] ) );
  low_swing_rx_935 \ys[0].xs[3].msg_txrx[19].west_rx  ( .i(\e_tx[2][0][19] ), 
        .o(\w[3][0][19] ) );
  low_swing_tx_936 \ys[0].xs[3].msg_txrx[19].south_tx  ( .i(\s[3][0][19] ), 
        .c(\s_tx[3][0][19] ) );
  low_swing_tx_935 \ys[0].xs[3].msg_txrx[19].east_tx  ( .i(\e[3][0][19] ), .c(
        \e_tx[3][0][19] ) );
  low_swing_rx_934 \ys[0].xs[3].msg_txrx[20].north_rx  ( .i(\s_tx[3][3][20] ), 
        .o(\n[3][0][20] ) );
  low_swing_rx_933 \ys[0].xs[3].msg_txrx[20].west_rx  ( .i(\e_tx[2][0][20] ), 
        .o(\w[3][0][20] ) );
  low_swing_tx_934 \ys[0].xs[3].msg_txrx[20].south_tx  ( .i(\s[3][0][20] ), 
        .c(\s_tx[3][0][20] ) );
  low_swing_tx_933 \ys[0].xs[3].msg_txrx[20].east_tx  ( .i(\e[3][0][20] ), .c(
        \e_tx[3][0][20] ) );
  low_swing_rx_932 \ys[0].xs[3].msg_txrx[21].north_rx  ( .i(\s_tx[3][3][21] ), 
        .o(\n[3][0][21] ) );
  low_swing_rx_931 \ys[0].xs[3].msg_txrx[21].west_rx  ( .i(\e_tx[2][0][21] ), 
        .o(\w[3][0][21] ) );
  low_swing_tx_932 \ys[0].xs[3].msg_txrx[21].south_tx  ( .i(\s[3][0][21] ), 
        .c(\s_tx[3][0][21] ) );
  low_swing_tx_931 \ys[0].xs[3].msg_txrx[21].east_tx  ( .i(\e[3][0][21] ), .c(
        \e_tx[3][0][21] ) );
  low_swing_rx_930 \ys[0].xs[3].msg_txrx[22].north_rx  ( .i(\s_tx[3][3][22] ), 
        .o(\n[3][0][22] ) );
  low_swing_rx_929 \ys[0].xs[3].msg_txrx[22].west_rx  ( .i(\e_tx[2][0][22] ), 
        .o(\w[3][0][22] ) );
  low_swing_tx_930 \ys[0].xs[3].msg_txrx[22].south_tx  ( .i(\s[3][0][22] ), 
        .c(\s_tx[3][0][22] ) );
  low_swing_tx_929 \ys[0].xs[3].msg_txrx[22].east_tx  ( .i(\e[3][0][22] ), .c(
        \e_tx[3][0][22] ) );
  low_swing_rx_928 \ys[0].xs[3].msg_txrx[23].north_rx  ( .i(\s_tx[3][3][23] ), 
        .o(\n[3][0][23] ) );
  low_swing_rx_927 \ys[0].xs[3].msg_txrx[23].west_rx  ( .i(\e_tx[2][0][23] ), 
        .o(\w[3][0][23] ) );
  low_swing_tx_928 \ys[0].xs[3].msg_txrx[23].south_tx  ( .i(\s[3][0][23] ), 
        .c(\s_tx[3][0][23] ) );
  low_swing_tx_927 \ys[0].xs[3].msg_txrx[23].east_tx  ( .i(\e[3][0][23] ), .c(
        \e_tx[3][0][23] ) );
  low_swing_rx_926 \ys[0].xs[3].msg_txrx[24].north_rx  ( .i(\s_tx[3][3][24] ), 
        .o(\n[3][0][24] ) );
  low_swing_rx_925 \ys[0].xs[3].msg_txrx[24].west_rx  ( .i(\e_tx[2][0][24] ), 
        .o(\w[3][0][24] ) );
  low_swing_tx_926 \ys[0].xs[3].msg_txrx[24].south_tx  ( .i(\s[3][0][24] ), 
        .c(\s_tx[3][0][24] ) );
  low_swing_tx_925 \ys[0].xs[3].msg_txrx[24].east_tx  ( .i(\e[3][0][24] ), .c(
        \e_tx[3][0][24] ) );
  low_swing_rx_924 \ys[0].xs[3].msg_txrx[25].north_rx  ( .i(\s_tx[3][3][25] ), 
        .o(\n[3][0][25] ) );
  low_swing_rx_923 \ys[0].xs[3].msg_txrx[25].west_rx  ( .i(\e_tx[2][0][25] ), 
        .o(\w[3][0][25] ) );
  low_swing_tx_924 \ys[0].xs[3].msg_txrx[25].south_tx  ( .i(\s[3][0][25] ), 
        .c(\s_tx[3][0][25] ) );
  low_swing_tx_923 \ys[0].xs[3].msg_txrx[25].east_tx  ( .i(\e[3][0][25] ), .c(
        \e_tx[3][0][25] ) );
  low_swing_rx_922 \ys[0].xs[3].msg_txrx[26].north_rx  ( .i(\s_tx[3][3][26] ), 
        .o(\n[3][0][26] ) );
  low_swing_rx_921 \ys[0].xs[3].msg_txrx[26].west_rx  ( .i(\e_tx[2][0][26] ), 
        .o(\w[3][0][26] ) );
  low_swing_tx_922 \ys[0].xs[3].msg_txrx[26].south_tx  ( .i(\s[3][0][26] ), 
        .c(\s_tx[3][0][26] ) );
  low_swing_tx_921 \ys[0].xs[3].msg_txrx[26].east_tx  ( .i(\e[3][0][26] ), .c(
        \e_tx[3][0][26] ) );
  low_swing_rx_920 \ys[0].xs[3].msg_txrx[27].north_rx  ( .i(\s_tx[3][3][27] ), 
        .o(\n[3][0][27] ) );
  low_swing_rx_919 \ys[0].xs[3].msg_txrx[27].west_rx  ( .i(\e_tx[2][0][27] ), 
        .o(\w[3][0][27] ) );
  low_swing_tx_920 \ys[0].xs[3].msg_txrx[27].south_tx  ( .i(\s[3][0][27] ), 
        .c(\s_tx[3][0][27] ) );
  low_swing_tx_919 \ys[0].xs[3].msg_txrx[27].east_tx  ( .i(\e[3][0][27] ), .c(
        \e_tx[3][0][27] ) );
  low_swing_rx_918 \ys[0].xs[3].msg_txrx[28].north_rx  ( .i(\s_tx[3][3][28] ), 
        .o(\n[3][0][28] ) );
  low_swing_rx_917 \ys[0].xs[3].msg_txrx[28].west_rx  ( .i(\e_tx[2][0][28] ), 
        .o(\w[3][0][28] ) );
  low_swing_tx_918 \ys[0].xs[3].msg_txrx[28].south_tx  ( .i(\s[3][0][28] ), 
        .c(\s_tx[3][0][28] ) );
  low_swing_tx_917 \ys[0].xs[3].msg_txrx[28].east_tx  ( .i(\e[3][0][28] ), .c(
        \e_tx[3][0][28] ) );
  low_swing_rx_916 \ys[0].xs[3].msg_txrx[29].north_rx  ( .i(\s_tx[3][3][29] ), 
        .o(\n[3][0][29] ) );
  low_swing_rx_915 \ys[0].xs[3].msg_txrx[29].west_rx  ( .i(\e_tx[2][0][29] ), 
        .o(\w[3][0][29] ) );
  low_swing_tx_916 \ys[0].xs[3].msg_txrx[29].south_tx  ( .i(\s[3][0][29] ), 
        .c(\s_tx[3][0][29] ) );
  low_swing_tx_915 \ys[0].xs[3].msg_txrx[29].east_tx  ( .i(\e[3][0][29] ), .c(
        \e_tx[3][0][29] ) );
  low_swing_rx_914 \ys[0].xs[3].msg_txrx[30].north_rx  ( .i(\s_tx[3][3][30] ), 
        .o(\n[3][0][30] ) );
  low_swing_rx_913 \ys[0].xs[3].msg_txrx[30].west_rx  ( .i(\e_tx[2][0][30] ), 
        .o(\w[3][0][30] ) );
  low_swing_tx_914 \ys[0].xs[3].msg_txrx[30].south_tx  ( .i(\s[3][0][30] ), 
        .c(\s_tx[3][0][30] ) );
  low_swing_tx_913 \ys[0].xs[3].msg_txrx[30].east_tx  ( .i(\e[3][0][30] ), .c(
        \e_tx[3][0][30] ) );
  low_swing_rx_912 \ys[0].xs[3].msg_txrx[31].north_rx  ( .i(\s_tx[3][3][31] ), 
        .o(\n[3][0][31] ) );
  low_swing_rx_911 \ys[0].xs[3].msg_txrx[31].west_rx  ( .i(\e_tx[2][0][31] ), 
        .o(\w[3][0][31] ) );
  low_swing_tx_912 \ys[0].xs[3].msg_txrx[31].south_tx  ( .i(\s[3][0][31] ), 
        .c(\s_tx[3][0][31] ) );
  low_swing_tx_911 \ys[0].xs[3].msg_txrx[31].east_tx  ( .i(\e[3][0][31] ), .c(
        \e_tx[3][0][31] ) );
  low_swing_rx_910 \ys[0].xs[3].msg_txrx[32].north_rx  ( .i(\s_tx[3][3][32] ), 
        .o(\n[3][0][32] ) );
  low_swing_rx_909 \ys[0].xs[3].msg_txrx[32].west_rx  ( .i(\e_tx[2][0][32] ), 
        .o(\w[3][0][32] ) );
  low_swing_tx_910 \ys[0].xs[3].msg_txrx[32].south_tx  ( .i(\s[3][0][32] ), 
        .c(\s_tx[3][0][32] ) );
  low_swing_tx_909 \ys[0].xs[3].msg_txrx[32].east_tx  ( .i(\e[3][0][32] ), .c(
        \e_tx[3][0][32] ) );
  low_swing_rx_908 \ys[0].xs[3].msg_txrx[33].north_rx  ( .i(\s_tx[3][3][33] ), 
        .o(\n[3][0][33] ) );
  low_swing_rx_907 \ys[0].xs[3].msg_txrx[33].west_rx  ( .i(\e_tx[2][0][33] ), 
        .o(\w[3][0][33] ) );
  low_swing_tx_908 \ys[0].xs[3].msg_txrx[33].south_tx  ( .i(\s[3][0][33] ), 
        .c(\s_tx[3][0][33] ) );
  low_swing_tx_907 \ys[0].xs[3].msg_txrx[33].east_tx  ( .i(\e[3][0][33] ), .c(
        \e_tx[3][0][33] ) );
  low_swing_rx_906 \ys[0].xs[3].msg_txrx[34].north_rx  ( .i(\s_tx[3][3][34] ), 
        .o(\n[3][0][34] ) );
  low_swing_rx_905 \ys[0].xs[3].msg_txrx[34].west_rx  ( .i(\e_tx[2][0][34] ), 
        .o(\w[3][0][34] ) );
  low_swing_tx_906 \ys[0].xs[3].msg_txrx[34].south_tx  ( .i(\s[3][0][34] ), 
        .c(\s_tx[3][0][34] ) );
  low_swing_tx_905 \ys[0].xs[3].msg_txrx[34].east_tx  ( .i(\e[3][0][34] ), .c(
        \e_tx[3][0][34] ) );
  low_swing_rx_904 \ys[0].xs[3].msg_txrx[35].north_rx  ( .i(\s_tx[3][3][35] ), 
        .o(\n[3][0][35] ) );
  low_swing_rx_903 \ys[0].xs[3].msg_txrx[35].west_rx  ( .i(\e_tx[2][0][35] ), 
        .o(\w[3][0][35] ) );
  low_swing_tx_904 \ys[0].xs[3].msg_txrx[35].south_tx  ( .i(\s[3][0][35] ), 
        .c(\s_tx[3][0][35] ) );
  low_swing_tx_903 \ys[0].xs[3].msg_txrx[35].east_tx  ( .i(\e[3][0][35] ), .c(
        \e_tx[3][0][35] ) );
  low_swing_rx_902 \ys[0].xs[3].msg_txrx[36].north_rx  ( .i(\s_tx[3][3][36] ), 
        .o(\n[3][0][36] ) );
  low_swing_rx_901 \ys[0].xs[3].msg_txrx[36].west_rx  ( .i(\e_tx[2][0][36] ), 
        .o(\w[3][0][36] ) );
  low_swing_tx_902 \ys[0].xs[3].msg_txrx[36].south_tx  ( .i(\s[3][0][36] ), 
        .c(\s_tx[3][0][36] ) );
  low_swing_tx_901 \ys[0].xs[3].msg_txrx[36].east_tx  ( .i(\e[3][0][36] ), .c(
        \e_tx[3][0][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X0_Y1_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[1].xs[0].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[0][1] ), .i_v(\i[0][1][36] ), 
        .i_x({\i[0][1][35] , \i[0][1][34] }), .i_y({\i[0][1][33] , 
        \i[0][1][32] }), .i_data({\i[0][1][31] , \i[0][1][30] , \i[0][1][29] , 
        \i[0][1][28] , \i[0][1][27] , \i[0][1][26] , \i[0][1][25] , 
        \i[0][1][24] , \i[0][1][23] , \i[0][1][22] , \i[0][1][21] , 
        \i[0][1][20] , \i[0][1][19] , \i[0][1][18] , \i[0][1][17] , 
        \i[0][1][16] , \i[0][1][15] , \i[0][1][14] , \i[0][1][13] , 
        \i[0][1][12] , \i[0][1][11] , \i[0][1][10] , \i[0][1][9] , 
        \i[0][1][8] , \i[0][1][7] , \i[0][1][6] , \i[0][1][5] , \i[0][1][4] , 
        \i[0][1][3] , \i[0][1][2] , \i[0][1][1] , \i[0][1][0] }), .o_v(
        \o_v[0][1] ), .o_x({\s[0][1][35] , \s[0][1][34] }), .o_y({
        \s[0][1][33] , \s[0][1][32] }), .o_data({\s[0][1][31] , \s[0][1][30] , 
        \s[0][1][29] , \s[0][1][28] , \s[0][1][27] , \s[0][1][26] , 
        \s[0][1][25] , \s[0][1][24] , \s[0][1][23] , \s[0][1][22] , 
        \s[0][1][21] , \s[0][1][20] , \s[0][1][19] , \s[0][1][18] , 
        \s[0][1][17] , \s[0][1][16] , \s[0][1][15] , \s[0][1][14] , 
        \s[0][1][13] , \s[0][1][12] , \s[0][1][11] , \s[0][1][10] , 
        \s[0][1][9] , \s[0][1][8] , \s[0][1][7] , \s[0][1][6] , \s[0][1][5] , 
        \s[0][1][4] , \s[0][1][3] , \s[0][1][2] , \s[0][1][1] , \s[0][1][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X0_Y1 \ys[1].xs[0].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[0][1][36] ), .n_in_x({\n[0][1][35] , 
        \n[0][1][34] }), .n_in_y({\n[0][1][33] , \n[0][1][32] }), .n_in_data({
        \n[0][1][31] , \n[0][1][30] , \n[0][1][29] , \n[0][1][28] , 
        \n[0][1][27] , \n[0][1][26] , \n[0][1][25] , \n[0][1][24] , 
        \n[0][1][23] , \n[0][1][22] , \n[0][1][21] , \n[0][1][20] , 
        \n[0][1][19] , \n[0][1][18] , \n[0][1][17] , \n[0][1][16] , 
        \n[0][1][15] , \n[0][1][14] , \n[0][1][13] , \n[0][1][12] , 
        \n[0][1][11] , \n[0][1][10] , \n[0][1][9] , \n[0][1][8] , \n[0][1][7] , 
        \n[0][1][6] , \n[0][1][5] , \n[0][1][4] , \n[0][1][3] , \n[0][1][2] , 
        \n[0][1][1] , \n[0][1][0] }), .w_in_v(\w[0][1][36] ), .w_in_x({
        \w[0][1][35] , \w[0][1][34] }), .w_in_y({\w[0][1][33] , \w[0][1][32] }), .w_in_data({\w[0][1][31] , \w[0][1][30] , \w[0][1][29] , \w[0][1][28] , 
        \w[0][1][27] , \w[0][1][26] , \w[0][1][25] , \w[0][1][24] , 
        \w[0][1][23] , \w[0][1][22] , \w[0][1][21] , \w[0][1][20] , 
        \w[0][1][19] , \w[0][1][18] , \w[0][1][17] , \w[0][1][16] , 
        \w[0][1][15] , \w[0][1][14] , \w[0][1][13] , \w[0][1][12] , 
        \w[0][1][11] , \w[0][1][10] , \w[0][1][9] , \w[0][1][8] , \w[0][1][7] , 
        \w[0][1][6] , \w[0][1][5] , \w[0][1][4] , \w[0][1][3] , \w[0][1][2] , 
        \w[0][1][1] , \w[0][1][0] }), .i_v(\i[0][1][36] ), .i_x({\i[0][1][35] , 
        \i[0][1][34] }), .i_y({\i[0][1][33] , \i[0][1][32] }), .i_data({
        \i[0][1][31] , \i[0][1][30] , \i[0][1][29] , \i[0][1][28] , 
        \i[0][1][27] , \i[0][1][26] , \i[0][1][25] , \i[0][1][24] , 
        \i[0][1][23] , \i[0][1][22] , \i[0][1][21] , \i[0][1][20] , 
        \i[0][1][19] , \i[0][1][18] , \i[0][1][17] , \i[0][1][16] , 
        \i[0][1][15] , \i[0][1][14] , \i[0][1][13] , \i[0][1][12] , 
        \i[0][1][11] , \i[0][1][10] , \i[0][1][9] , \i[0][1][8] , \i[0][1][7] , 
        \i[0][1][6] , \i[0][1][5] , \i[0][1][4] , \i[0][1][3] , \i[0][1][2] , 
        \i[0][1][1] , \i[0][1][0] }), .e_b(\e_b[0][1] ), .w_b(\w_b[0][1] ), 
        .i_ack(\i_ack[0][1] ), .o_v(\o_v[0][1] ), .s_out_v(\s[0][1][36] ), 
        .s_out_x({\s[0][1][35] , \s[0][1][34] }), .s_out_y({\s[0][1][33] , 
        \s[0][1][32] }), .s_out_data({\s[0][1][31] , \s[0][1][30] , 
        \s[0][1][29] , \s[0][1][28] , \s[0][1][27] , \s[0][1][26] , 
        \s[0][1][25] , \s[0][1][24] , \s[0][1][23] , \s[0][1][22] , 
        \s[0][1][21] , \s[0][1][20] , \s[0][1][19] , \s[0][1][18] , 
        \s[0][1][17] , \s[0][1][16] , \s[0][1][15] , \s[0][1][14] , 
        \s[0][1][13] , \s[0][1][12] , \s[0][1][11] , \s[0][1][10] , 
        \s[0][1][9] , \s[0][1][8] , \s[0][1][7] , \s[0][1][6] , \s[0][1][5] , 
        \s[0][1][4] , \s[0][1][3] , \s[0][1][2] , \s[0][1][1] , \s[0][1][0] }), 
        .e_out_v(\e[0][1][36] ), .e_out_x({\e[0][1][35] , \e[0][1][34] }), 
        .e_out_y({\e[0][1][33] , \e[0][1][32] }), .e_out_data({\e[0][1][31] , 
        \e[0][1][30] , \e[0][1][29] , \e[0][1][28] , \e[0][1][27] , 
        \e[0][1][26] , \e[0][1][25] , \e[0][1][24] , \e[0][1][23] , 
        \e[0][1][22] , \e[0][1][21] , \e[0][1][20] , \e[0][1][19] , 
        \e[0][1][18] , \e[0][1][17] , \e[0][1][16] , \e[0][1][15] , 
        \e[0][1][14] , \e[0][1][13] , \e[0][1][12] , \e[0][1][11] , 
        \e[0][1][10] , \e[0][1][9] , \e[0][1][8] , \e[0][1][7] , \e[0][1][6] , 
        \e[0][1][5] , \e[0][1][4] , \e[0][1][3] , \e[0][1][2] , \e[0][1][1] , 
        \e[0][1][0] }) );
  low_swing_rx_900 \ys[1].xs[0].east_bp_rx  ( .i(\w_b_tx[1][1] ), .o(
        \e_b[0][1] ) );
  low_swing_tx_900 \ys[1].xs[0].west_bp_tx  ( .i(\w_b[0][1] ), .c(
        \w_b_tx[0][1] ) );
  low_swing_rx_899 \ys[1].xs[0].msg_txrx[0].north_rx  ( .i(\s_tx[0][0][0] ), 
        .o(\n[0][1][0] ) );
  low_swing_rx_898 \ys[1].xs[0].msg_txrx[0].west_rx  ( .i(\e_tx[3][1][0] ), 
        .o(\w[0][1][0] ) );
  low_swing_tx_899 \ys[1].xs[0].msg_txrx[0].south_tx  ( .i(\s[0][1][0] ), .c(
        \s_tx[0][1][0] ) );
  low_swing_tx_898 \ys[1].xs[0].msg_txrx[0].east_tx  ( .i(\e[0][1][0] ), .c(
        \e_tx[0][1][0] ) );
  low_swing_rx_897 \ys[1].xs[0].msg_txrx[1].north_rx  ( .i(\s_tx[0][0][1] ), 
        .o(\n[0][1][1] ) );
  low_swing_rx_896 \ys[1].xs[0].msg_txrx[1].west_rx  ( .i(\e_tx[3][1][1] ), 
        .o(\w[0][1][1] ) );
  low_swing_tx_897 \ys[1].xs[0].msg_txrx[1].south_tx  ( .i(\s[0][1][1] ), .c(
        \s_tx[0][1][1] ) );
  low_swing_tx_896 \ys[1].xs[0].msg_txrx[1].east_tx  ( .i(\e[0][1][1] ), .c(
        \e_tx[0][1][1] ) );
  low_swing_rx_895 \ys[1].xs[0].msg_txrx[2].north_rx  ( .i(\s_tx[0][0][2] ), 
        .o(\n[0][1][2] ) );
  low_swing_rx_894 \ys[1].xs[0].msg_txrx[2].west_rx  ( .i(\e_tx[3][1][2] ), 
        .o(\w[0][1][2] ) );
  low_swing_tx_895 \ys[1].xs[0].msg_txrx[2].south_tx  ( .i(\s[0][1][2] ), .c(
        \s_tx[0][1][2] ) );
  low_swing_tx_894 \ys[1].xs[0].msg_txrx[2].east_tx  ( .i(\e[0][1][2] ), .c(
        \e_tx[0][1][2] ) );
  low_swing_rx_893 \ys[1].xs[0].msg_txrx[3].north_rx  ( .i(\s_tx[0][0][3] ), 
        .o(\n[0][1][3] ) );
  low_swing_rx_892 \ys[1].xs[0].msg_txrx[3].west_rx  ( .i(\e_tx[3][1][3] ), 
        .o(\w[0][1][3] ) );
  low_swing_tx_893 \ys[1].xs[0].msg_txrx[3].south_tx  ( .i(\s[0][1][3] ), .c(
        \s_tx[0][1][3] ) );
  low_swing_tx_892 \ys[1].xs[0].msg_txrx[3].east_tx  ( .i(\e[0][1][3] ), .c(
        \e_tx[0][1][3] ) );
  low_swing_rx_891 \ys[1].xs[0].msg_txrx[4].north_rx  ( .i(\s_tx[0][0][4] ), 
        .o(\n[0][1][4] ) );
  low_swing_rx_890 \ys[1].xs[0].msg_txrx[4].west_rx  ( .i(\e_tx[3][1][4] ), 
        .o(\w[0][1][4] ) );
  low_swing_tx_891 \ys[1].xs[0].msg_txrx[4].south_tx  ( .i(\s[0][1][4] ), .c(
        \s_tx[0][1][4] ) );
  low_swing_tx_890 \ys[1].xs[0].msg_txrx[4].east_tx  ( .i(\e[0][1][4] ), .c(
        \e_tx[0][1][4] ) );
  low_swing_rx_889 \ys[1].xs[0].msg_txrx[5].north_rx  ( .i(\s_tx[0][0][5] ), 
        .o(\n[0][1][5] ) );
  low_swing_rx_888 \ys[1].xs[0].msg_txrx[5].west_rx  ( .i(\e_tx[3][1][5] ), 
        .o(\w[0][1][5] ) );
  low_swing_tx_889 \ys[1].xs[0].msg_txrx[5].south_tx  ( .i(\s[0][1][5] ), .c(
        \s_tx[0][1][5] ) );
  low_swing_tx_888 \ys[1].xs[0].msg_txrx[5].east_tx  ( .i(\e[0][1][5] ), .c(
        \e_tx[0][1][5] ) );
  low_swing_rx_887 \ys[1].xs[0].msg_txrx[6].north_rx  ( .i(\s_tx[0][0][6] ), 
        .o(\n[0][1][6] ) );
  low_swing_rx_886 \ys[1].xs[0].msg_txrx[6].west_rx  ( .i(\e_tx[3][1][6] ), 
        .o(\w[0][1][6] ) );
  low_swing_tx_887 \ys[1].xs[0].msg_txrx[6].south_tx  ( .i(\s[0][1][6] ), .c(
        \s_tx[0][1][6] ) );
  low_swing_tx_886 \ys[1].xs[0].msg_txrx[6].east_tx  ( .i(\e[0][1][6] ), .c(
        \e_tx[0][1][6] ) );
  low_swing_rx_885 \ys[1].xs[0].msg_txrx[7].north_rx  ( .i(\s_tx[0][0][7] ), 
        .o(\n[0][1][7] ) );
  low_swing_rx_884 \ys[1].xs[0].msg_txrx[7].west_rx  ( .i(\e_tx[3][1][7] ), 
        .o(\w[0][1][7] ) );
  low_swing_tx_885 \ys[1].xs[0].msg_txrx[7].south_tx  ( .i(\s[0][1][7] ), .c(
        \s_tx[0][1][7] ) );
  low_swing_tx_884 \ys[1].xs[0].msg_txrx[7].east_tx  ( .i(\e[0][1][7] ), .c(
        \e_tx[0][1][7] ) );
  low_swing_rx_883 \ys[1].xs[0].msg_txrx[8].north_rx  ( .i(\s_tx[0][0][8] ), 
        .o(\n[0][1][8] ) );
  low_swing_rx_882 \ys[1].xs[0].msg_txrx[8].west_rx  ( .i(\e_tx[3][1][8] ), 
        .o(\w[0][1][8] ) );
  low_swing_tx_883 \ys[1].xs[0].msg_txrx[8].south_tx  ( .i(\s[0][1][8] ), .c(
        \s_tx[0][1][8] ) );
  low_swing_tx_882 \ys[1].xs[0].msg_txrx[8].east_tx  ( .i(\e[0][1][8] ), .c(
        \e_tx[0][1][8] ) );
  low_swing_rx_881 \ys[1].xs[0].msg_txrx[9].north_rx  ( .i(\s_tx[0][0][9] ), 
        .o(\n[0][1][9] ) );
  low_swing_rx_880 \ys[1].xs[0].msg_txrx[9].west_rx  ( .i(\e_tx[3][1][9] ), 
        .o(\w[0][1][9] ) );
  low_swing_tx_881 \ys[1].xs[0].msg_txrx[9].south_tx  ( .i(\s[0][1][9] ), .c(
        \s_tx[0][1][9] ) );
  low_swing_tx_880 \ys[1].xs[0].msg_txrx[9].east_tx  ( .i(\e[0][1][9] ), .c(
        \e_tx[0][1][9] ) );
  low_swing_rx_879 \ys[1].xs[0].msg_txrx[10].north_rx  ( .i(\s_tx[0][0][10] ), 
        .o(\n[0][1][10] ) );
  low_swing_rx_878 \ys[1].xs[0].msg_txrx[10].west_rx  ( .i(\e_tx[3][1][10] ), 
        .o(\w[0][1][10] ) );
  low_swing_tx_879 \ys[1].xs[0].msg_txrx[10].south_tx  ( .i(\s[0][1][10] ), 
        .c(\s_tx[0][1][10] ) );
  low_swing_tx_878 \ys[1].xs[0].msg_txrx[10].east_tx  ( .i(\e[0][1][10] ), .c(
        \e_tx[0][1][10] ) );
  low_swing_rx_877 \ys[1].xs[0].msg_txrx[11].north_rx  ( .i(\s_tx[0][0][11] ), 
        .o(\n[0][1][11] ) );
  low_swing_rx_876 \ys[1].xs[0].msg_txrx[11].west_rx  ( .i(\e_tx[3][1][11] ), 
        .o(\w[0][1][11] ) );
  low_swing_tx_877 \ys[1].xs[0].msg_txrx[11].south_tx  ( .i(\s[0][1][11] ), 
        .c(\s_tx[0][1][11] ) );
  low_swing_tx_876 \ys[1].xs[0].msg_txrx[11].east_tx  ( .i(\e[0][1][11] ), .c(
        \e_tx[0][1][11] ) );
  low_swing_rx_875 \ys[1].xs[0].msg_txrx[12].north_rx  ( .i(\s_tx[0][0][12] ), 
        .o(\n[0][1][12] ) );
  low_swing_rx_874 \ys[1].xs[0].msg_txrx[12].west_rx  ( .i(\e_tx[3][1][12] ), 
        .o(\w[0][1][12] ) );
  low_swing_tx_875 \ys[1].xs[0].msg_txrx[12].south_tx  ( .i(\s[0][1][12] ), 
        .c(\s_tx[0][1][12] ) );
  low_swing_tx_874 \ys[1].xs[0].msg_txrx[12].east_tx  ( .i(\e[0][1][12] ), .c(
        \e_tx[0][1][12] ) );
  low_swing_rx_873 \ys[1].xs[0].msg_txrx[13].north_rx  ( .i(\s_tx[0][0][13] ), 
        .o(\n[0][1][13] ) );
  low_swing_rx_872 \ys[1].xs[0].msg_txrx[13].west_rx  ( .i(\e_tx[3][1][13] ), 
        .o(\w[0][1][13] ) );
  low_swing_tx_873 \ys[1].xs[0].msg_txrx[13].south_tx  ( .i(\s[0][1][13] ), 
        .c(\s_tx[0][1][13] ) );
  low_swing_tx_872 \ys[1].xs[0].msg_txrx[13].east_tx  ( .i(\e[0][1][13] ), .c(
        \e_tx[0][1][13] ) );
  low_swing_rx_871 \ys[1].xs[0].msg_txrx[14].north_rx  ( .i(\s_tx[0][0][14] ), 
        .o(\n[0][1][14] ) );
  low_swing_rx_870 \ys[1].xs[0].msg_txrx[14].west_rx  ( .i(\e_tx[3][1][14] ), 
        .o(\w[0][1][14] ) );
  low_swing_tx_871 \ys[1].xs[0].msg_txrx[14].south_tx  ( .i(\s[0][1][14] ), 
        .c(\s_tx[0][1][14] ) );
  low_swing_tx_870 \ys[1].xs[0].msg_txrx[14].east_tx  ( .i(\e[0][1][14] ), .c(
        \e_tx[0][1][14] ) );
  low_swing_rx_869 \ys[1].xs[0].msg_txrx[15].north_rx  ( .i(\s_tx[0][0][15] ), 
        .o(\n[0][1][15] ) );
  low_swing_rx_868 \ys[1].xs[0].msg_txrx[15].west_rx  ( .i(\e_tx[3][1][15] ), 
        .o(\w[0][1][15] ) );
  low_swing_tx_869 \ys[1].xs[0].msg_txrx[15].south_tx  ( .i(\s[0][1][15] ), 
        .c(\s_tx[0][1][15] ) );
  low_swing_tx_868 \ys[1].xs[0].msg_txrx[15].east_tx  ( .i(\e[0][1][15] ), .c(
        \e_tx[0][1][15] ) );
  low_swing_rx_867 \ys[1].xs[0].msg_txrx[16].north_rx  ( .i(\s_tx[0][0][16] ), 
        .o(\n[0][1][16] ) );
  low_swing_rx_866 \ys[1].xs[0].msg_txrx[16].west_rx  ( .i(\e_tx[3][1][16] ), 
        .o(\w[0][1][16] ) );
  low_swing_tx_867 \ys[1].xs[0].msg_txrx[16].south_tx  ( .i(\s[0][1][16] ), 
        .c(\s_tx[0][1][16] ) );
  low_swing_tx_866 \ys[1].xs[0].msg_txrx[16].east_tx  ( .i(\e[0][1][16] ), .c(
        \e_tx[0][1][16] ) );
  low_swing_rx_865 \ys[1].xs[0].msg_txrx[17].north_rx  ( .i(\s_tx[0][0][17] ), 
        .o(\n[0][1][17] ) );
  low_swing_rx_864 \ys[1].xs[0].msg_txrx[17].west_rx  ( .i(\e_tx[3][1][17] ), 
        .o(\w[0][1][17] ) );
  low_swing_tx_865 \ys[1].xs[0].msg_txrx[17].south_tx  ( .i(\s[0][1][17] ), 
        .c(\s_tx[0][1][17] ) );
  low_swing_tx_864 \ys[1].xs[0].msg_txrx[17].east_tx  ( .i(\e[0][1][17] ), .c(
        \e_tx[0][1][17] ) );
  low_swing_rx_863 \ys[1].xs[0].msg_txrx[18].north_rx  ( .i(\s_tx[0][0][18] ), 
        .o(\n[0][1][18] ) );
  low_swing_rx_862 \ys[1].xs[0].msg_txrx[18].west_rx  ( .i(\e_tx[3][1][18] ), 
        .o(\w[0][1][18] ) );
  low_swing_tx_863 \ys[1].xs[0].msg_txrx[18].south_tx  ( .i(\s[0][1][18] ), 
        .c(\s_tx[0][1][18] ) );
  low_swing_tx_862 \ys[1].xs[0].msg_txrx[18].east_tx  ( .i(\e[0][1][18] ), .c(
        \e_tx[0][1][18] ) );
  low_swing_rx_861 \ys[1].xs[0].msg_txrx[19].north_rx  ( .i(\s_tx[0][0][19] ), 
        .o(\n[0][1][19] ) );
  low_swing_rx_860 \ys[1].xs[0].msg_txrx[19].west_rx  ( .i(\e_tx[3][1][19] ), 
        .o(\w[0][1][19] ) );
  low_swing_tx_861 \ys[1].xs[0].msg_txrx[19].south_tx  ( .i(\s[0][1][19] ), 
        .c(\s_tx[0][1][19] ) );
  low_swing_tx_860 \ys[1].xs[0].msg_txrx[19].east_tx  ( .i(\e[0][1][19] ), .c(
        \e_tx[0][1][19] ) );
  low_swing_rx_859 \ys[1].xs[0].msg_txrx[20].north_rx  ( .i(\s_tx[0][0][20] ), 
        .o(\n[0][1][20] ) );
  low_swing_rx_858 \ys[1].xs[0].msg_txrx[20].west_rx  ( .i(\e_tx[3][1][20] ), 
        .o(\w[0][1][20] ) );
  low_swing_tx_859 \ys[1].xs[0].msg_txrx[20].south_tx  ( .i(\s[0][1][20] ), 
        .c(\s_tx[0][1][20] ) );
  low_swing_tx_858 \ys[1].xs[0].msg_txrx[20].east_tx  ( .i(\e[0][1][20] ), .c(
        \e_tx[0][1][20] ) );
  low_swing_rx_857 \ys[1].xs[0].msg_txrx[21].north_rx  ( .i(\s_tx[0][0][21] ), 
        .o(\n[0][1][21] ) );
  low_swing_rx_856 \ys[1].xs[0].msg_txrx[21].west_rx  ( .i(\e_tx[3][1][21] ), 
        .o(\w[0][1][21] ) );
  low_swing_tx_857 \ys[1].xs[0].msg_txrx[21].south_tx  ( .i(\s[0][1][21] ), 
        .c(\s_tx[0][1][21] ) );
  low_swing_tx_856 \ys[1].xs[0].msg_txrx[21].east_tx  ( .i(\e[0][1][21] ), .c(
        \e_tx[0][1][21] ) );
  low_swing_rx_855 \ys[1].xs[0].msg_txrx[22].north_rx  ( .i(\s_tx[0][0][22] ), 
        .o(\n[0][1][22] ) );
  low_swing_rx_854 \ys[1].xs[0].msg_txrx[22].west_rx  ( .i(\e_tx[3][1][22] ), 
        .o(\w[0][1][22] ) );
  low_swing_tx_855 \ys[1].xs[0].msg_txrx[22].south_tx  ( .i(\s[0][1][22] ), 
        .c(\s_tx[0][1][22] ) );
  low_swing_tx_854 \ys[1].xs[0].msg_txrx[22].east_tx  ( .i(\e[0][1][22] ), .c(
        \e_tx[0][1][22] ) );
  low_swing_rx_853 \ys[1].xs[0].msg_txrx[23].north_rx  ( .i(\s_tx[0][0][23] ), 
        .o(\n[0][1][23] ) );
  low_swing_rx_852 \ys[1].xs[0].msg_txrx[23].west_rx  ( .i(\e_tx[3][1][23] ), 
        .o(\w[0][1][23] ) );
  low_swing_tx_853 \ys[1].xs[0].msg_txrx[23].south_tx  ( .i(\s[0][1][23] ), 
        .c(\s_tx[0][1][23] ) );
  low_swing_tx_852 \ys[1].xs[0].msg_txrx[23].east_tx  ( .i(\e[0][1][23] ), .c(
        \e_tx[0][1][23] ) );
  low_swing_rx_851 \ys[1].xs[0].msg_txrx[24].north_rx  ( .i(\s_tx[0][0][24] ), 
        .o(\n[0][1][24] ) );
  low_swing_rx_850 \ys[1].xs[0].msg_txrx[24].west_rx  ( .i(\e_tx[3][1][24] ), 
        .o(\w[0][1][24] ) );
  low_swing_tx_851 \ys[1].xs[0].msg_txrx[24].south_tx  ( .i(\s[0][1][24] ), 
        .c(\s_tx[0][1][24] ) );
  low_swing_tx_850 \ys[1].xs[0].msg_txrx[24].east_tx  ( .i(\e[0][1][24] ), .c(
        \e_tx[0][1][24] ) );
  low_swing_rx_849 \ys[1].xs[0].msg_txrx[25].north_rx  ( .i(\s_tx[0][0][25] ), 
        .o(\n[0][1][25] ) );
  low_swing_rx_848 \ys[1].xs[0].msg_txrx[25].west_rx  ( .i(\e_tx[3][1][25] ), 
        .o(\w[0][1][25] ) );
  low_swing_tx_849 \ys[1].xs[0].msg_txrx[25].south_tx  ( .i(\s[0][1][25] ), 
        .c(\s_tx[0][1][25] ) );
  low_swing_tx_848 \ys[1].xs[0].msg_txrx[25].east_tx  ( .i(\e[0][1][25] ), .c(
        \e_tx[0][1][25] ) );
  low_swing_rx_847 \ys[1].xs[0].msg_txrx[26].north_rx  ( .i(\s_tx[0][0][26] ), 
        .o(\n[0][1][26] ) );
  low_swing_rx_846 \ys[1].xs[0].msg_txrx[26].west_rx  ( .i(\e_tx[3][1][26] ), 
        .o(\w[0][1][26] ) );
  low_swing_tx_847 \ys[1].xs[0].msg_txrx[26].south_tx  ( .i(\s[0][1][26] ), 
        .c(\s_tx[0][1][26] ) );
  low_swing_tx_846 \ys[1].xs[0].msg_txrx[26].east_tx  ( .i(\e[0][1][26] ), .c(
        \e_tx[0][1][26] ) );
  low_swing_rx_845 \ys[1].xs[0].msg_txrx[27].north_rx  ( .i(\s_tx[0][0][27] ), 
        .o(\n[0][1][27] ) );
  low_swing_rx_844 \ys[1].xs[0].msg_txrx[27].west_rx  ( .i(\e_tx[3][1][27] ), 
        .o(\w[0][1][27] ) );
  low_swing_tx_845 \ys[1].xs[0].msg_txrx[27].south_tx  ( .i(\s[0][1][27] ), 
        .c(\s_tx[0][1][27] ) );
  low_swing_tx_844 \ys[1].xs[0].msg_txrx[27].east_tx  ( .i(\e[0][1][27] ), .c(
        \e_tx[0][1][27] ) );
  low_swing_rx_843 \ys[1].xs[0].msg_txrx[28].north_rx  ( .i(\s_tx[0][0][28] ), 
        .o(\n[0][1][28] ) );
  low_swing_rx_842 \ys[1].xs[0].msg_txrx[28].west_rx  ( .i(\e_tx[3][1][28] ), 
        .o(\w[0][1][28] ) );
  low_swing_tx_843 \ys[1].xs[0].msg_txrx[28].south_tx  ( .i(\s[0][1][28] ), 
        .c(\s_tx[0][1][28] ) );
  low_swing_tx_842 \ys[1].xs[0].msg_txrx[28].east_tx  ( .i(\e[0][1][28] ), .c(
        \e_tx[0][1][28] ) );
  low_swing_rx_841 \ys[1].xs[0].msg_txrx[29].north_rx  ( .i(\s_tx[0][0][29] ), 
        .o(\n[0][1][29] ) );
  low_swing_rx_840 \ys[1].xs[0].msg_txrx[29].west_rx  ( .i(\e_tx[3][1][29] ), 
        .o(\w[0][1][29] ) );
  low_swing_tx_841 \ys[1].xs[0].msg_txrx[29].south_tx  ( .i(\s[0][1][29] ), 
        .c(\s_tx[0][1][29] ) );
  low_swing_tx_840 \ys[1].xs[0].msg_txrx[29].east_tx  ( .i(\e[0][1][29] ), .c(
        \e_tx[0][1][29] ) );
  low_swing_rx_839 \ys[1].xs[0].msg_txrx[30].north_rx  ( .i(\s_tx[0][0][30] ), 
        .o(\n[0][1][30] ) );
  low_swing_rx_838 \ys[1].xs[0].msg_txrx[30].west_rx  ( .i(\e_tx[3][1][30] ), 
        .o(\w[0][1][30] ) );
  low_swing_tx_839 \ys[1].xs[0].msg_txrx[30].south_tx  ( .i(\s[0][1][30] ), 
        .c(\s_tx[0][1][30] ) );
  low_swing_tx_838 \ys[1].xs[0].msg_txrx[30].east_tx  ( .i(\e[0][1][30] ), .c(
        \e_tx[0][1][30] ) );
  low_swing_rx_837 \ys[1].xs[0].msg_txrx[31].north_rx  ( .i(\s_tx[0][0][31] ), 
        .o(\n[0][1][31] ) );
  low_swing_rx_836 \ys[1].xs[0].msg_txrx[31].west_rx  ( .i(\e_tx[3][1][31] ), 
        .o(\w[0][1][31] ) );
  low_swing_tx_837 \ys[1].xs[0].msg_txrx[31].south_tx  ( .i(\s[0][1][31] ), 
        .c(\s_tx[0][1][31] ) );
  low_swing_tx_836 \ys[1].xs[0].msg_txrx[31].east_tx  ( .i(\e[0][1][31] ), .c(
        \e_tx[0][1][31] ) );
  low_swing_rx_835 \ys[1].xs[0].msg_txrx[32].north_rx  ( .i(\s_tx[0][0][32] ), 
        .o(\n[0][1][32] ) );
  low_swing_rx_834 \ys[1].xs[0].msg_txrx[32].west_rx  ( .i(\e_tx[3][1][32] ), 
        .o(\w[0][1][32] ) );
  low_swing_tx_835 \ys[1].xs[0].msg_txrx[32].south_tx  ( .i(\s[0][1][32] ), 
        .c(\s_tx[0][1][32] ) );
  low_swing_tx_834 \ys[1].xs[0].msg_txrx[32].east_tx  ( .i(\e[0][1][32] ), .c(
        \e_tx[0][1][32] ) );
  low_swing_rx_833 \ys[1].xs[0].msg_txrx[33].north_rx  ( .i(\s_tx[0][0][33] ), 
        .o(\n[0][1][33] ) );
  low_swing_rx_832 \ys[1].xs[0].msg_txrx[33].west_rx  ( .i(\e_tx[3][1][33] ), 
        .o(\w[0][1][33] ) );
  low_swing_tx_833 \ys[1].xs[0].msg_txrx[33].south_tx  ( .i(\s[0][1][33] ), 
        .c(\s_tx[0][1][33] ) );
  low_swing_tx_832 \ys[1].xs[0].msg_txrx[33].east_tx  ( .i(\e[0][1][33] ), .c(
        \e_tx[0][1][33] ) );
  low_swing_rx_831 \ys[1].xs[0].msg_txrx[34].north_rx  ( .i(\s_tx[0][0][34] ), 
        .o(\n[0][1][34] ) );
  low_swing_rx_830 \ys[1].xs[0].msg_txrx[34].west_rx  ( .i(\e_tx[3][1][34] ), 
        .o(\w[0][1][34] ) );
  low_swing_tx_831 \ys[1].xs[0].msg_txrx[34].south_tx  ( .i(\s[0][1][34] ), 
        .c(\s_tx[0][1][34] ) );
  low_swing_tx_830 \ys[1].xs[0].msg_txrx[34].east_tx  ( .i(\e[0][1][34] ), .c(
        \e_tx[0][1][34] ) );
  low_swing_rx_829 \ys[1].xs[0].msg_txrx[35].north_rx  ( .i(\s_tx[0][0][35] ), 
        .o(\n[0][1][35] ) );
  low_swing_rx_828 \ys[1].xs[0].msg_txrx[35].west_rx  ( .i(\e_tx[3][1][35] ), 
        .o(\w[0][1][35] ) );
  low_swing_tx_829 \ys[1].xs[0].msg_txrx[35].south_tx  ( .i(\s[0][1][35] ), 
        .c(\s_tx[0][1][35] ) );
  low_swing_tx_828 \ys[1].xs[0].msg_txrx[35].east_tx  ( .i(\e[0][1][35] ), .c(
        \e_tx[0][1][35] ) );
  low_swing_rx_827 \ys[1].xs[0].msg_txrx[36].north_rx  ( .i(\s_tx[0][0][36] ), 
        .o(\n[0][1][36] ) );
  low_swing_rx_826 \ys[1].xs[0].msg_txrx[36].west_rx  ( .i(\e_tx[3][1][36] ), 
        .o(\w[0][1][36] ) );
  low_swing_tx_827 \ys[1].xs[0].msg_txrx[36].south_tx  ( .i(\s[0][1][36] ), 
        .c(\s_tx[0][1][36] ) );
  low_swing_tx_826 \ys[1].xs[0].msg_txrx[36].east_tx  ( .i(\e[0][1][36] ), .c(
        \e_tx[0][1][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X1_Y1_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[1].xs[1].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[1][1] ), .i_v(\i[1][1][36] ), 
        .i_x({\i[1][1][35] , \i[1][1][34] }), .i_y({\i[1][1][33] , 
        \i[1][1][32] }), .i_data({\i[1][1][31] , \i[1][1][30] , \i[1][1][29] , 
        \i[1][1][28] , \i[1][1][27] , \i[1][1][26] , \i[1][1][25] , 
        \i[1][1][24] , \i[1][1][23] , \i[1][1][22] , \i[1][1][21] , 
        \i[1][1][20] , \i[1][1][19] , \i[1][1][18] , \i[1][1][17] , 
        \i[1][1][16] , \i[1][1][15] , \i[1][1][14] , \i[1][1][13] , 
        \i[1][1][12] , \i[1][1][11] , \i[1][1][10] , \i[1][1][9] , 
        \i[1][1][8] , \i[1][1][7] , \i[1][1][6] , \i[1][1][5] , \i[1][1][4] , 
        \i[1][1][3] , \i[1][1][2] , \i[1][1][1] , \i[1][1][0] }), .o_v(
        \o_v[1][1] ), .o_x({\s[1][1][35] , \s[1][1][34] }), .o_y({
        \s[1][1][33] , \s[1][1][32] }), .o_data({\s[1][1][31] , \s[1][1][30] , 
        \s[1][1][29] , \s[1][1][28] , \s[1][1][27] , \s[1][1][26] , 
        \s[1][1][25] , \s[1][1][24] , \s[1][1][23] , \s[1][1][22] , 
        \s[1][1][21] , \s[1][1][20] , \s[1][1][19] , \s[1][1][18] , 
        \s[1][1][17] , \s[1][1][16] , \s[1][1][15] , \s[1][1][14] , 
        \s[1][1][13] , \s[1][1][12] , \s[1][1][11] , \s[1][1][10] , 
        \s[1][1][9] , \s[1][1][8] , \s[1][1][7] , \s[1][1][6] , \s[1][1][5] , 
        \s[1][1][4] , \s[1][1][3] , \s[1][1][2] , \s[1][1][1] , \s[1][1][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X1_Y1 \ys[1].xs[1].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[1][1][36] ), .n_in_x({\n[1][1][35] , 
        \n[1][1][34] }), .n_in_y({\n[1][1][33] , \n[1][1][32] }), .n_in_data({
        \n[1][1][31] , \n[1][1][30] , \n[1][1][29] , \n[1][1][28] , 
        \n[1][1][27] , \n[1][1][26] , \n[1][1][25] , \n[1][1][24] , 
        \n[1][1][23] , \n[1][1][22] , \n[1][1][21] , \n[1][1][20] , 
        \n[1][1][19] , \n[1][1][18] , \n[1][1][17] , \n[1][1][16] , 
        \n[1][1][15] , \n[1][1][14] , \n[1][1][13] , \n[1][1][12] , 
        \n[1][1][11] , \n[1][1][10] , \n[1][1][9] , \n[1][1][8] , \n[1][1][7] , 
        \n[1][1][6] , \n[1][1][5] , \n[1][1][4] , \n[1][1][3] , \n[1][1][2] , 
        \n[1][1][1] , \n[1][1][0] }), .w_in_v(\w[1][1][36] ), .w_in_x({
        \w[1][1][35] , \w[1][1][34] }), .w_in_y({\w[1][1][33] , \w[1][1][32] }), .w_in_data({\w[1][1][31] , \w[1][1][30] , \w[1][1][29] , \w[1][1][28] , 
        \w[1][1][27] , \w[1][1][26] , \w[1][1][25] , \w[1][1][24] , 
        \w[1][1][23] , \w[1][1][22] , \w[1][1][21] , \w[1][1][20] , 
        \w[1][1][19] , \w[1][1][18] , \w[1][1][17] , \w[1][1][16] , 
        \w[1][1][15] , \w[1][1][14] , \w[1][1][13] , \w[1][1][12] , 
        \w[1][1][11] , \w[1][1][10] , \w[1][1][9] , \w[1][1][8] , \w[1][1][7] , 
        \w[1][1][6] , \w[1][1][5] , \w[1][1][4] , \w[1][1][3] , \w[1][1][2] , 
        \w[1][1][1] , \w[1][1][0] }), .i_v(\i[1][1][36] ), .i_x({\i[1][1][35] , 
        \i[1][1][34] }), .i_y({\i[1][1][33] , \i[1][1][32] }), .i_data({
        \i[1][1][31] , \i[1][1][30] , \i[1][1][29] , \i[1][1][28] , 
        \i[1][1][27] , \i[1][1][26] , \i[1][1][25] , \i[1][1][24] , 
        \i[1][1][23] , \i[1][1][22] , \i[1][1][21] , \i[1][1][20] , 
        \i[1][1][19] , \i[1][1][18] , \i[1][1][17] , \i[1][1][16] , 
        \i[1][1][15] , \i[1][1][14] , \i[1][1][13] , \i[1][1][12] , 
        \i[1][1][11] , \i[1][1][10] , \i[1][1][9] , \i[1][1][8] , \i[1][1][7] , 
        \i[1][1][6] , \i[1][1][5] , \i[1][1][4] , \i[1][1][3] , \i[1][1][2] , 
        \i[1][1][1] , \i[1][1][0] }), .e_b(\e_b[1][1] ), .w_b(\w_b[1][1] ), 
        .i_ack(\i_ack[1][1] ), .o_v(\o_v[1][1] ), .s_out_v(\s[1][1][36] ), 
        .s_out_x({\s[1][1][35] , \s[1][1][34] }), .s_out_y({\s[1][1][33] , 
        \s[1][1][32] }), .s_out_data({\s[1][1][31] , \s[1][1][30] , 
        \s[1][1][29] , \s[1][1][28] , \s[1][1][27] , \s[1][1][26] , 
        \s[1][1][25] , \s[1][1][24] , \s[1][1][23] , \s[1][1][22] , 
        \s[1][1][21] , \s[1][1][20] , \s[1][1][19] , \s[1][1][18] , 
        \s[1][1][17] , \s[1][1][16] , \s[1][1][15] , \s[1][1][14] , 
        \s[1][1][13] , \s[1][1][12] , \s[1][1][11] , \s[1][1][10] , 
        \s[1][1][9] , \s[1][1][8] , \s[1][1][7] , \s[1][1][6] , \s[1][1][5] , 
        \s[1][1][4] , \s[1][1][3] , \s[1][1][2] , \s[1][1][1] , \s[1][1][0] }), 
        .e_out_v(\e[1][1][36] ), .e_out_x({\e[1][1][35] , \e[1][1][34] }), 
        .e_out_y({\e[1][1][33] , \e[1][1][32] }), .e_out_data({\e[1][1][31] , 
        \e[1][1][30] , \e[1][1][29] , \e[1][1][28] , \e[1][1][27] , 
        \e[1][1][26] , \e[1][1][25] , \e[1][1][24] , \e[1][1][23] , 
        \e[1][1][22] , \e[1][1][21] , \e[1][1][20] , \e[1][1][19] , 
        \e[1][1][18] , \e[1][1][17] , \e[1][1][16] , \e[1][1][15] , 
        \e[1][1][14] , \e[1][1][13] , \e[1][1][12] , \e[1][1][11] , 
        \e[1][1][10] , \e[1][1][9] , \e[1][1][8] , \e[1][1][7] , \e[1][1][6] , 
        \e[1][1][5] , \e[1][1][4] , \e[1][1][3] , \e[1][1][2] , \e[1][1][1] , 
        \e[1][1][0] }) );
  low_swing_rx_825 \ys[1].xs[1].east_bp_rx  ( .i(\w_b_tx[2][1] ), .o(
        \e_b[1][1] ) );
  low_swing_tx_825 \ys[1].xs[1].west_bp_tx  ( .i(\w_b[1][1] ), .c(
        \w_b_tx[1][1] ) );
  low_swing_rx_824 \ys[1].xs[1].msg_txrx[0].north_rx  ( .i(\s_tx[1][0][0] ), 
        .o(\n[1][1][0] ) );
  low_swing_rx_823 \ys[1].xs[1].msg_txrx[0].west_rx  ( .i(\e_tx[0][1][0] ), 
        .o(\w[1][1][0] ) );
  low_swing_tx_824 \ys[1].xs[1].msg_txrx[0].south_tx  ( .i(\s[1][1][0] ), .c(
        \s_tx[1][1][0] ) );
  low_swing_tx_823 \ys[1].xs[1].msg_txrx[0].east_tx  ( .i(\e[1][1][0] ), .c(
        \e_tx[1][1][0] ) );
  low_swing_rx_822 \ys[1].xs[1].msg_txrx[1].north_rx  ( .i(\s_tx[1][0][1] ), 
        .o(\n[1][1][1] ) );
  low_swing_rx_821 \ys[1].xs[1].msg_txrx[1].west_rx  ( .i(\e_tx[0][1][1] ), 
        .o(\w[1][1][1] ) );
  low_swing_tx_822 \ys[1].xs[1].msg_txrx[1].south_tx  ( .i(\s[1][1][1] ), .c(
        \s_tx[1][1][1] ) );
  low_swing_tx_821 \ys[1].xs[1].msg_txrx[1].east_tx  ( .i(\e[1][1][1] ), .c(
        \e_tx[1][1][1] ) );
  low_swing_rx_820 \ys[1].xs[1].msg_txrx[2].north_rx  ( .i(\s_tx[1][0][2] ), 
        .o(\n[1][1][2] ) );
  low_swing_rx_819 \ys[1].xs[1].msg_txrx[2].west_rx  ( .i(\e_tx[0][1][2] ), 
        .o(\w[1][1][2] ) );
  low_swing_tx_820 \ys[1].xs[1].msg_txrx[2].south_tx  ( .i(\s[1][1][2] ), .c(
        \s_tx[1][1][2] ) );
  low_swing_tx_819 \ys[1].xs[1].msg_txrx[2].east_tx  ( .i(\e[1][1][2] ), .c(
        \e_tx[1][1][2] ) );
  low_swing_rx_818 \ys[1].xs[1].msg_txrx[3].north_rx  ( .i(\s_tx[1][0][3] ), 
        .o(\n[1][1][3] ) );
  low_swing_rx_817 \ys[1].xs[1].msg_txrx[3].west_rx  ( .i(\e_tx[0][1][3] ), 
        .o(\w[1][1][3] ) );
  low_swing_tx_818 \ys[1].xs[1].msg_txrx[3].south_tx  ( .i(\s[1][1][3] ), .c(
        \s_tx[1][1][3] ) );
  low_swing_tx_817 \ys[1].xs[1].msg_txrx[3].east_tx  ( .i(\e[1][1][3] ), .c(
        \e_tx[1][1][3] ) );
  low_swing_rx_816 \ys[1].xs[1].msg_txrx[4].north_rx  ( .i(\s_tx[1][0][4] ), 
        .o(\n[1][1][4] ) );
  low_swing_rx_815 \ys[1].xs[1].msg_txrx[4].west_rx  ( .i(\e_tx[0][1][4] ), 
        .o(\w[1][1][4] ) );
  low_swing_tx_816 \ys[1].xs[1].msg_txrx[4].south_tx  ( .i(\s[1][1][4] ), .c(
        \s_tx[1][1][4] ) );
  low_swing_tx_815 \ys[1].xs[1].msg_txrx[4].east_tx  ( .i(\e[1][1][4] ), .c(
        \e_tx[1][1][4] ) );
  low_swing_rx_814 \ys[1].xs[1].msg_txrx[5].north_rx  ( .i(\s_tx[1][0][5] ), 
        .o(\n[1][1][5] ) );
  low_swing_rx_813 \ys[1].xs[1].msg_txrx[5].west_rx  ( .i(\e_tx[0][1][5] ), 
        .o(\w[1][1][5] ) );
  low_swing_tx_814 \ys[1].xs[1].msg_txrx[5].south_tx  ( .i(\s[1][1][5] ), .c(
        \s_tx[1][1][5] ) );
  low_swing_tx_813 \ys[1].xs[1].msg_txrx[5].east_tx  ( .i(\e[1][1][5] ), .c(
        \e_tx[1][1][5] ) );
  low_swing_rx_812 \ys[1].xs[1].msg_txrx[6].north_rx  ( .i(\s_tx[1][0][6] ), 
        .o(\n[1][1][6] ) );
  low_swing_rx_811 \ys[1].xs[1].msg_txrx[6].west_rx  ( .i(\e_tx[0][1][6] ), 
        .o(\w[1][1][6] ) );
  low_swing_tx_812 \ys[1].xs[1].msg_txrx[6].south_tx  ( .i(\s[1][1][6] ), .c(
        \s_tx[1][1][6] ) );
  low_swing_tx_811 \ys[1].xs[1].msg_txrx[6].east_tx  ( .i(\e[1][1][6] ), .c(
        \e_tx[1][1][6] ) );
  low_swing_rx_810 \ys[1].xs[1].msg_txrx[7].north_rx  ( .i(\s_tx[1][0][7] ), 
        .o(\n[1][1][7] ) );
  low_swing_rx_809 \ys[1].xs[1].msg_txrx[7].west_rx  ( .i(\e_tx[0][1][7] ), 
        .o(\w[1][1][7] ) );
  low_swing_tx_810 \ys[1].xs[1].msg_txrx[7].south_tx  ( .i(\s[1][1][7] ), .c(
        \s_tx[1][1][7] ) );
  low_swing_tx_809 \ys[1].xs[1].msg_txrx[7].east_tx  ( .i(\e[1][1][7] ), .c(
        \e_tx[1][1][7] ) );
  low_swing_rx_808 \ys[1].xs[1].msg_txrx[8].north_rx  ( .i(\s_tx[1][0][8] ), 
        .o(\n[1][1][8] ) );
  low_swing_rx_807 \ys[1].xs[1].msg_txrx[8].west_rx  ( .i(\e_tx[0][1][8] ), 
        .o(\w[1][1][8] ) );
  low_swing_tx_808 \ys[1].xs[1].msg_txrx[8].south_tx  ( .i(\s[1][1][8] ), .c(
        \s_tx[1][1][8] ) );
  low_swing_tx_807 \ys[1].xs[1].msg_txrx[8].east_tx  ( .i(\e[1][1][8] ), .c(
        \e_tx[1][1][8] ) );
  low_swing_rx_806 \ys[1].xs[1].msg_txrx[9].north_rx  ( .i(\s_tx[1][0][9] ), 
        .o(\n[1][1][9] ) );
  low_swing_rx_805 \ys[1].xs[1].msg_txrx[9].west_rx  ( .i(\e_tx[0][1][9] ), 
        .o(\w[1][1][9] ) );
  low_swing_tx_806 \ys[1].xs[1].msg_txrx[9].south_tx  ( .i(\s[1][1][9] ), .c(
        \s_tx[1][1][9] ) );
  low_swing_tx_805 \ys[1].xs[1].msg_txrx[9].east_tx  ( .i(\e[1][1][9] ), .c(
        \e_tx[1][1][9] ) );
  low_swing_rx_804 \ys[1].xs[1].msg_txrx[10].north_rx  ( .i(\s_tx[1][0][10] ), 
        .o(\n[1][1][10] ) );
  low_swing_rx_803 \ys[1].xs[1].msg_txrx[10].west_rx  ( .i(\e_tx[0][1][10] ), 
        .o(\w[1][1][10] ) );
  low_swing_tx_804 \ys[1].xs[1].msg_txrx[10].south_tx  ( .i(\s[1][1][10] ), 
        .c(\s_tx[1][1][10] ) );
  low_swing_tx_803 \ys[1].xs[1].msg_txrx[10].east_tx  ( .i(\e[1][1][10] ), .c(
        \e_tx[1][1][10] ) );
  low_swing_rx_802 \ys[1].xs[1].msg_txrx[11].north_rx  ( .i(\s_tx[1][0][11] ), 
        .o(\n[1][1][11] ) );
  low_swing_rx_801 \ys[1].xs[1].msg_txrx[11].west_rx  ( .i(\e_tx[0][1][11] ), 
        .o(\w[1][1][11] ) );
  low_swing_tx_802 \ys[1].xs[1].msg_txrx[11].south_tx  ( .i(\s[1][1][11] ), 
        .c(\s_tx[1][1][11] ) );
  low_swing_tx_801 \ys[1].xs[1].msg_txrx[11].east_tx  ( .i(\e[1][1][11] ), .c(
        \e_tx[1][1][11] ) );
  low_swing_rx_800 \ys[1].xs[1].msg_txrx[12].north_rx  ( .i(\s_tx[1][0][12] ), 
        .o(\n[1][1][12] ) );
  low_swing_rx_799 \ys[1].xs[1].msg_txrx[12].west_rx  ( .i(\e_tx[0][1][12] ), 
        .o(\w[1][1][12] ) );
  low_swing_tx_800 \ys[1].xs[1].msg_txrx[12].south_tx  ( .i(\s[1][1][12] ), 
        .c(\s_tx[1][1][12] ) );
  low_swing_tx_799 \ys[1].xs[1].msg_txrx[12].east_tx  ( .i(\e[1][1][12] ), .c(
        \e_tx[1][1][12] ) );
  low_swing_rx_798 \ys[1].xs[1].msg_txrx[13].north_rx  ( .i(\s_tx[1][0][13] ), 
        .o(\n[1][1][13] ) );
  low_swing_rx_797 \ys[1].xs[1].msg_txrx[13].west_rx  ( .i(\e_tx[0][1][13] ), 
        .o(\w[1][1][13] ) );
  low_swing_tx_798 \ys[1].xs[1].msg_txrx[13].south_tx  ( .i(\s[1][1][13] ), 
        .c(\s_tx[1][1][13] ) );
  low_swing_tx_797 \ys[1].xs[1].msg_txrx[13].east_tx  ( .i(\e[1][1][13] ), .c(
        \e_tx[1][1][13] ) );
  low_swing_rx_796 \ys[1].xs[1].msg_txrx[14].north_rx  ( .i(\s_tx[1][0][14] ), 
        .o(\n[1][1][14] ) );
  low_swing_rx_795 \ys[1].xs[1].msg_txrx[14].west_rx  ( .i(\e_tx[0][1][14] ), 
        .o(\w[1][1][14] ) );
  low_swing_tx_796 \ys[1].xs[1].msg_txrx[14].south_tx  ( .i(\s[1][1][14] ), 
        .c(\s_tx[1][1][14] ) );
  low_swing_tx_795 \ys[1].xs[1].msg_txrx[14].east_tx  ( .i(\e[1][1][14] ), .c(
        \e_tx[1][1][14] ) );
  low_swing_rx_794 \ys[1].xs[1].msg_txrx[15].north_rx  ( .i(\s_tx[1][0][15] ), 
        .o(\n[1][1][15] ) );
  low_swing_rx_793 \ys[1].xs[1].msg_txrx[15].west_rx  ( .i(\e_tx[0][1][15] ), 
        .o(\w[1][1][15] ) );
  low_swing_tx_794 \ys[1].xs[1].msg_txrx[15].south_tx  ( .i(\s[1][1][15] ), 
        .c(\s_tx[1][1][15] ) );
  low_swing_tx_793 \ys[1].xs[1].msg_txrx[15].east_tx  ( .i(\e[1][1][15] ), .c(
        \e_tx[1][1][15] ) );
  low_swing_rx_792 \ys[1].xs[1].msg_txrx[16].north_rx  ( .i(\s_tx[1][0][16] ), 
        .o(\n[1][1][16] ) );
  low_swing_rx_791 \ys[1].xs[1].msg_txrx[16].west_rx  ( .i(\e_tx[0][1][16] ), 
        .o(\w[1][1][16] ) );
  low_swing_tx_792 \ys[1].xs[1].msg_txrx[16].south_tx  ( .i(\s[1][1][16] ), 
        .c(\s_tx[1][1][16] ) );
  low_swing_tx_791 \ys[1].xs[1].msg_txrx[16].east_tx  ( .i(\e[1][1][16] ), .c(
        \e_tx[1][1][16] ) );
  low_swing_rx_790 \ys[1].xs[1].msg_txrx[17].north_rx  ( .i(\s_tx[1][0][17] ), 
        .o(\n[1][1][17] ) );
  low_swing_rx_789 \ys[1].xs[1].msg_txrx[17].west_rx  ( .i(\e_tx[0][1][17] ), 
        .o(\w[1][1][17] ) );
  low_swing_tx_790 \ys[1].xs[1].msg_txrx[17].south_tx  ( .i(\s[1][1][17] ), 
        .c(\s_tx[1][1][17] ) );
  low_swing_tx_789 \ys[1].xs[1].msg_txrx[17].east_tx  ( .i(\e[1][1][17] ), .c(
        \e_tx[1][1][17] ) );
  low_swing_rx_788 \ys[1].xs[1].msg_txrx[18].north_rx  ( .i(\s_tx[1][0][18] ), 
        .o(\n[1][1][18] ) );
  low_swing_rx_787 \ys[1].xs[1].msg_txrx[18].west_rx  ( .i(\e_tx[0][1][18] ), 
        .o(\w[1][1][18] ) );
  low_swing_tx_788 \ys[1].xs[1].msg_txrx[18].south_tx  ( .i(\s[1][1][18] ), 
        .c(\s_tx[1][1][18] ) );
  low_swing_tx_787 \ys[1].xs[1].msg_txrx[18].east_tx  ( .i(\e[1][1][18] ), .c(
        \e_tx[1][1][18] ) );
  low_swing_rx_786 \ys[1].xs[1].msg_txrx[19].north_rx  ( .i(\s_tx[1][0][19] ), 
        .o(\n[1][1][19] ) );
  low_swing_rx_785 \ys[1].xs[1].msg_txrx[19].west_rx  ( .i(\e_tx[0][1][19] ), 
        .o(\w[1][1][19] ) );
  low_swing_tx_786 \ys[1].xs[1].msg_txrx[19].south_tx  ( .i(\s[1][1][19] ), 
        .c(\s_tx[1][1][19] ) );
  low_swing_tx_785 \ys[1].xs[1].msg_txrx[19].east_tx  ( .i(\e[1][1][19] ), .c(
        \e_tx[1][1][19] ) );
  low_swing_rx_784 \ys[1].xs[1].msg_txrx[20].north_rx  ( .i(\s_tx[1][0][20] ), 
        .o(\n[1][1][20] ) );
  low_swing_rx_783 \ys[1].xs[1].msg_txrx[20].west_rx  ( .i(\e_tx[0][1][20] ), 
        .o(\w[1][1][20] ) );
  low_swing_tx_784 \ys[1].xs[1].msg_txrx[20].south_tx  ( .i(\s[1][1][20] ), 
        .c(\s_tx[1][1][20] ) );
  low_swing_tx_783 \ys[1].xs[1].msg_txrx[20].east_tx  ( .i(\e[1][1][20] ), .c(
        \e_tx[1][1][20] ) );
  low_swing_rx_782 \ys[1].xs[1].msg_txrx[21].north_rx  ( .i(\s_tx[1][0][21] ), 
        .o(\n[1][1][21] ) );
  low_swing_rx_781 \ys[1].xs[1].msg_txrx[21].west_rx  ( .i(\e_tx[0][1][21] ), 
        .o(\w[1][1][21] ) );
  low_swing_tx_782 \ys[1].xs[1].msg_txrx[21].south_tx  ( .i(\s[1][1][21] ), 
        .c(\s_tx[1][1][21] ) );
  low_swing_tx_781 \ys[1].xs[1].msg_txrx[21].east_tx  ( .i(\e[1][1][21] ), .c(
        \e_tx[1][1][21] ) );
  low_swing_rx_780 \ys[1].xs[1].msg_txrx[22].north_rx  ( .i(\s_tx[1][0][22] ), 
        .o(\n[1][1][22] ) );
  low_swing_rx_779 \ys[1].xs[1].msg_txrx[22].west_rx  ( .i(\e_tx[0][1][22] ), 
        .o(\w[1][1][22] ) );
  low_swing_tx_780 \ys[1].xs[1].msg_txrx[22].south_tx  ( .i(\s[1][1][22] ), 
        .c(\s_tx[1][1][22] ) );
  low_swing_tx_779 \ys[1].xs[1].msg_txrx[22].east_tx  ( .i(\e[1][1][22] ), .c(
        \e_tx[1][1][22] ) );
  low_swing_rx_778 \ys[1].xs[1].msg_txrx[23].north_rx  ( .i(\s_tx[1][0][23] ), 
        .o(\n[1][1][23] ) );
  low_swing_rx_777 \ys[1].xs[1].msg_txrx[23].west_rx  ( .i(\e_tx[0][1][23] ), 
        .o(\w[1][1][23] ) );
  low_swing_tx_778 \ys[1].xs[1].msg_txrx[23].south_tx  ( .i(\s[1][1][23] ), 
        .c(\s_tx[1][1][23] ) );
  low_swing_tx_777 \ys[1].xs[1].msg_txrx[23].east_tx  ( .i(\e[1][1][23] ), .c(
        \e_tx[1][1][23] ) );
  low_swing_rx_776 \ys[1].xs[1].msg_txrx[24].north_rx  ( .i(\s_tx[1][0][24] ), 
        .o(\n[1][1][24] ) );
  low_swing_rx_775 \ys[1].xs[1].msg_txrx[24].west_rx  ( .i(\e_tx[0][1][24] ), 
        .o(\w[1][1][24] ) );
  low_swing_tx_776 \ys[1].xs[1].msg_txrx[24].south_tx  ( .i(\s[1][1][24] ), 
        .c(\s_tx[1][1][24] ) );
  low_swing_tx_775 \ys[1].xs[1].msg_txrx[24].east_tx  ( .i(\e[1][1][24] ), .c(
        \e_tx[1][1][24] ) );
  low_swing_rx_774 \ys[1].xs[1].msg_txrx[25].north_rx  ( .i(\s_tx[1][0][25] ), 
        .o(\n[1][1][25] ) );
  low_swing_rx_773 \ys[1].xs[1].msg_txrx[25].west_rx  ( .i(\e_tx[0][1][25] ), 
        .o(\w[1][1][25] ) );
  low_swing_tx_774 \ys[1].xs[1].msg_txrx[25].south_tx  ( .i(\s[1][1][25] ), 
        .c(\s_tx[1][1][25] ) );
  low_swing_tx_773 \ys[1].xs[1].msg_txrx[25].east_tx  ( .i(\e[1][1][25] ), .c(
        \e_tx[1][1][25] ) );
  low_swing_rx_772 \ys[1].xs[1].msg_txrx[26].north_rx  ( .i(\s_tx[1][0][26] ), 
        .o(\n[1][1][26] ) );
  low_swing_rx_771 \ys[1].xs[1].msg_txrx[26].west_rx  ( .i(\e_tx[0][1][26] ), 
        .o(\w[1][1][26] ) );
  low_swing_tx_772 \ys[1].xs[1].msg_txrx[26].south_tx  ( .i(\s[1][1][26] ), 
        .c(\s_tx[1][1][26] ) );
  low_swing_tx_771 \ys[1].xs[1].msg_txrx[26].east_tx  ( .i(\e[1][1][26] ), .c(
        \e_tx[1][1][26] ) );
  low_swing_rx_770 \ys[1].xs[1].msg_txrx[27].north_rx  ( .i(\s_tx[1][0][27] ), 
        .o(\n[1][1][27] ) );
  low_swing_rx_769 \ys[1].xs[1].msg_txrx[27].west_rx  ( .i(\e_tx[0][1][27] ), 
        .o(\w[1][1][27] ) );
  low_swing_tx_770 \ys[1].xs[1].msg_txrx[27].south_tx  ( .i(\s[1][1][27] ), 
        .c(\s_tx[1][1][27] ) );
  low_swing_tx_769 \ys[1].xs[1].msg_txrx[27].east_tx  ( .i(\e[1][1][27] ), .c(
        \e_tx[1][1][27] ) );
  low_swing_rx_768 \ys[1].xs[1].msg_txrx[28].north_rx  ( .i(\s_tx[1][0][28] ), 
        .o(\n[1][1][28] ) );
  low_swing_rx_767 \ys[1].xs[1].msg_txrx[28].west_rx  ( .i(\e_tx[0][1][28] ), 
        .o(\w[1][1][28] ) );
  low_swing_tx_768 \ys[1].xs[1].msg_txrx[28].south_tx  ( .i(\s[1][1][28] ), 
        .c(\s_tx[1][1][28] ) );
  low_swing_tx_767 \ys[1].xs[1].msg_txrx[28].east_tx  ( .i(\e[1][1][28] ), .c(
        \e_tx[1][1][28] ) );
  low_swing_rx_766 \ys[1].xs[1].msg_txrx[29].north_rx  ( .i(\s_tx[1][0][29] ), 
        .o(\n[1][1][29] ) );
  low_swing_rx_765 \ys[1].xs[1].msg_txrx[29].west_rx  ( .i(\e_tx[0][1][29] ), 
        .o(\w[1][1][29] ) );
  low_swing_tx_766 \ys[1].xs[1].msg_txrx[29].south_tx  ( .i(\s[1][1][29] ), 
        .c(\s_tx[1][1][29] ) );
  low_swing_tx_765 \ys[1].xs[1].msg_txrx[29].east_tx  ( .i(\e[1][1][29] ), .c(
        \e_tx[1][1][29] ) );
  low_swing_rx_764 \ys[1].xs[1].msg_txrx[30].north_rx  ( .i(\s_tx[1][0][30] ), 
        .o(\n[1][1][30] ) );
  low_swing_rx_763 \ys[1].xs[1].msg_txrx[30].west_rx  ( .i(\e_tx[0][1][30] ), 
        .o(\w[1][1][30] ) );
  low_swing_tx_764 \ys[1].xs[1].msg_txrx[30].south_tx  ( .i(\s[1][1][30] ), 
        .c(\s_tx[1][1][30] ) );
  low_swing_tx_763 \ys[1].xs[1].msg_txrx[30].east_tx  ( .i(\e[1][1][30] ), .c(
        \e_tx[1][1][30] ) );
  low_swing_rx_762 \ys[1].xs[1].msg_txrx[31].north_rx  ( .i(\s_tx[1][0][31] ), 
        .o(\n[1][1][31] ) );
  low_swing_rx_761 \ys[1].xs[1].msg_txrx[31].west_rx  ( .i(\e_tx[0][1][31] ), 
        .o(\w[1][1][31] ) );
  low_swing_tx_762 \ys[1].xs[1].msg_txrx[31].south_tx  ( .i(\s[1][1][31] ), 
        .c(\s_tx[1][1][31] ) );
  low_swing_tx_761 \ys[1].xs[1].msg_txrx[31].east_tx  ( .i(\e[1][1][31] ), .c(
        \e_tx[1][1][31] ) );
  low_swing_rx_760 \ys[1].xs[1].msg_txrx[32].north_rx  ( .i(\s_tx[1][0][32] ), 
        .o(\n[1][1][32] ) );
  low_swing_rx_759 \ys[1].xs[1].msg_txrx[32].west_rx  ( .i(\e_tx[0][1][32] ), 
        .o(\w[1][1][32] ) );
  low_swing_tx_760 \ys[1].xs[1].msg_txrx[32].south_tx  ( .i(\s[1][1][32] ), 
        .c(\s_tx[1][1][32] ) );
  low_swing_tx_759 \ys[1].xs[1].msg_txrx[32].east_tx  ( .i(\e[1][1][32] ), .c(
        \e_tx[1][1][32] ) );
  low_swing_rx_758 \ys[1].xs[1].msg_txrx[33].north_rx  ( .i(\s_tx[1][0][33] ), 
        .o(\n[1][1][33] ) );
  low_swing_rx_757 \ys[1].xs[1].msg_txrx[33].west_rx  ( .i(\e_tx[0][1][33] ), 
        .o(\w[1][1][33] ) );
  low_swing_tx_758 \ys[1].xs[1].msg_txrx[33].south_tx  ( .i(\s[1][1][33] ), 
        .c(\s_tx[1][1][33] ) );
  low_swing_tx_757 \ys[1].xs[1].msg_txrx[33].east_tx  ( .i(\e[1][1][33] ), .c(
        \e_tx[1][1][33] ) );
  low_swing_rx_756 \ys[1].xs[1].msg_txrx[34].north_rx  ( .i(\s_tx[1][0][34] ), 
        .o(\n[1][1][34] ) );
  low_swing_rx_755 \ys[1].xs[1].msg_txrx[34].west_rx  ( .i(\e_tx[0][1][34] ), 
        .o(\w[1][1][34] ) );
  low_swing_tx_756 \ys[1].xs[1].msg_txrx[34].south_tx  ( .i(\s[1][1][34] ), 
        .c(\s_tx[1][1][34] ) );
  low_swing_tx_755 \ys[1].xs[1].msg_txrx[34].east_tx  ( .i(\e[1][1][34] ), .c(
        \e_tx[1][1][34] ) );
  low_swing_rx_754 \ys[1].xs[1].msg_txrx[35].north_rx  ( .i(\s_tx[1][0][35] ), 
        .o(\n[1][1][35] ) );
  low_swing_rx_753 \ys[1].xs[1].msg_txrx[35].west_rx  ( .i(\e_tx[0][1][35] ), 
        .o(\w[1][1][35] ) );
  low_swing_tx_754 \ys[1].xs[1].msg_txrx[35].south_tx  ( .i(\s[1][1][35] ), 
        .c(\s_tx[1][1][35] ) );
  low_swing_tx_753 \ys[1].xs[1].msg_txrx[35].east_tx  ( .i(\e[1][1][35] ), .c(
        \e_tx[1][1][35] ) );
  low_swing_rx_752 \ys[1].xs[1].msg_txrx[36].north_rx  ( .i(\s_tx[1][0][36] ), 
        .o(\n[1][1][36] ) );
  low_swing_rx_751 \ys[1].xs[1].msg_txrx[36].west_rx  ( .i(\e_tx[0][1][36] ), 
        .o(\w[1][1][36] ) );
  low_swing_tx_752 \ys[1].xs[1].msg_txrx[36].south_tx  ( .i(\s[1][1][36] ), 
        .c(\s_tx[1][1][36] ) );
  low_swing_tx_751 \ys[1].xs[1].msg_txrx[36].east_tx  ( .i(\e[1][1][36] ), .c(
        \e_tx[1][1][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X2_Y1_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[1].xs[2].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[2][1] ), .i_v(\i[2][1][36] ), 
        .i_x({\i[2][1][35] , \i[2][1][34] }), .i_y({\i[2][1][33] , 
        \i[2][1][32] }), .i_data({\i[2][1][31] , \i[2][1][30] , \i[2][1][29] , 
        \i[2][1][28] , \i[2][1][27] , \i[2][1][26] , \i[2][1][25] , 
        \i[2][1][24] , \i[2][1][23] , \i[2][1][22] , \i[2][1][21] , 
        \i[2][1][20] , \i[2][1][19] , \i[2][1][18] , \i[2][1][17] , 
        \i[2][1][16] , \i[2][1][15] , \i[2][1][14] , \i[2][1][13] , 
        \i[2][1][12] , \i[2][1][11] , \i[2][1][10] , \i[2][1][9] , 
        \i[2][1][8] , \i[2][1][7] , \i[2][1][6] , \i[2][1][5] , \i[2][1][4] , 
        \i[2][1][3] , \i[2][1][2] , \i[2][1][1] , \i[2][1][0] }), .o_v(
        \o_v[2][1] ), .o_x({\s[2][1][35] , \s[2][1][34] }), .o_y({
        \s[2][1][33] , \s[2][1][32] }), .o_data({\s[2][1][31] , \s[2][1][30] , 
        \s[2][1][29] , \s[2][1][28] , \s[2][1][27] , \s[2][1][26] , 
        \s[2][1][25] , \s[2][1][24] , \s[2][1][23] , \s[2][1][22] , 
        \s[2][1][21] , \s[2][1][20] , \s[2][1][19] , \s[2][1][18] , 
        \s[2][1][17] , \s[2][1][16] , \s[2][1][15] , \s[2][1][14] , 
        \s[2][1][13] , \s[2][1][12] , \s[2][1][11] , \s[2][1][10] , 
        \s[2][1][9] , \s[2][1][8] , \s[2][1][7] , \s[2][1][6] , \s[2][1][5] , 
        \s[2][1][4] , \s[2][1][3] , \s[2][1][2] , \s[2][1][1] , \s[2][1][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X2_Y1 \ys[1].xs[2].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[2][1][36] ), .n_in_x({\n[2][1][35] , 
        \n[2][1][34] }), .n_in_y({\n[2][1][33] , \n[2][1][32] }), .n_in_data({
        \n[2][1][31] , \n[2][1][30] , \n[2][1][29] , \n[2][1][28] , 
        \n[2][1][27] , \n[2][1][26] , \n[2][1][25] , \n[2][1][24] , 
        \n[2][1][23] , \n[2][1][22] , \n[2][1][21] , \n[2][1][20] , 
        \n[2][1][19] , \n[2][1][18] , \n[2][1][17] , \n[2][1][16] , 
        \n[2][1][15] , \n[2][1][14] , \n[2][1][13] , \n[2][1][12] , 
        \n[2][1][11] , \n[2][1][10] , \n[2][1][9] , \n[2][1][8] , \n[2][1][7] , 
        \n[2][1][6] , \n[2][1][5] , \n[2][1][4] , \n[2][1][3] , \n[2][1][2] , 
        \n[2][1][1] , \n[2][1][0] }), .w_in_v(\w[2][1][36] ), .w_in_x({
        \w[2][1][35] , \w[2][1][34] }), .w_in_y({\w[2][1][33] , \w[2][1][32] }), .w_in_data({\w[2][1][31] , \w[2][1][30] , \w[2][1][29] , \w[2][1][28] , 
        \w[2][1][27] , \w[2][1][26] , \w[2][1][25] , \w[2][1][24] , 
        \w[2][1][23] , \w[2][1][22] , \w[2][1][21] , \w[2][1][20] , 
        \w[2][1][19] , \w[2][1][18] , \w[2][1][17] , \w[2][1][16] , 
        \w[2][1][15] , \w[2][1][14] , \w[2][1][13] , \w[2][1][12] , 
        \w[2][1][11] , \w[2][1][10] , \w[2][1][9] , \w[2][1][8] , \w[2][1][7] , 
        \w[2][1][6] , \w[2][1][5] , \w[2][1][4] , \w[2][1][3] , \w[2][1][2] , 
        \w[2][1][1] , \w[2][1][0] }), .i_v(\i[2][1][36] ), .i_x({\i[2][1][35] , 
        \i[2][1][34] }), .i_y({\i[2][1][33] , \i[2][1][32] }), .i_data({
        \i[2][1][31] , \i[2][1][30] , \i[2][1][29] , \i[2][1][28] , 
        \i[2][1][27] , \i[2][1][26] , \i[2][1][25] , \i[2][1][24] , 
        \i[2][1][23] , \i[2][1][22] , \i[2][1][21] , \i[2][1][20] , 
        \i[2][1][19] , \i[2][1][18] , \i[2][1][17] , \i[2][1][16] , 
        \i[2][1][15] , \i[2][1][14] , \i[2][1][13] , \i[2][1][12] , 
        \i[2][1][11] , \i[2][1][10] , \i[2][1][9] , \i[2][1][8] , \i[2][1][7] , 
        \i[2][1][6] , \i[2][1][5] , \i[2][1][4] , \i[2][1][3] , \i[2][1][2] , 
        \i[2][1][1] , \i[2][1][0] }), .e_b(\e_b[2][1] ), .w_b(\w_b[2][1] ), 
        .i_ack(\i_ack[2][1] ), .o_v(\o_v[2][1] ), .s_out_v(\s[2][1][36] ), 
        .s_out_x({\s[2][1][35] , \s[2][1][34] }), .s_out_y({\s[2][1][33] , 
        \s[2][1][32] }), .s_out_data({\s[2][1][31] , \s[2][1][30] , 
        \s[2][1][29] , \s[2][1][28] , \s[2][1][27] , \s[2][1][26] , 
        \s[2][1][25] , \s[2][1][24] , \s[2][1][23] , \s[2][1][22] , 
        \s[2][1][21] , \s[2][1][20] , \s[2][1][19] , \s[2][1][18] , 
        \s[2][1][17] , \s[2][1][16] , \s[2][1][15] , \s[2][1][14] , 
        \s[2][1][13] , \s[2][1][12] , \s[2][1][11] , \s[2][1][10] , 
        \s[2][1][9] , \s[2][1][8] , \s[2][1][7] , \s[2][1][6] , \s[2][1][5] , 
        \s[2][1][4] , \s[2][1][3] , \s[2][1][2] , \s[2][1][1] , \s[2][1][0] }), 
        .e_out_v(\e[2][1][36] ), .e_out_x({\e[2][1][35] , \e[2][1][34] }), 
        .e_out_y({\e[2][1][33] , \e[2][1][32] }), .e_out_data({\e[2][1][31] , 
        \e[2][1][30] , \e[2][1][29] , \e[2][1][28] , \e[2][1][27] , 
        \e[2][1][26] , \e[2][1][25] , \e[2][1][24] , \e[2][1][23] , 
        \e[2][1][22] , \e[2][1][21] , \e[2][1][20] , \e[2][1][19] , 
        \e[2][1][18] , \e[2][1][17] , \e[2][1][16] , \e[2][1][15] , 
        \e[2][1][14] , \e[2][1][13] , \e[2][1][12] , \e[2][1][11] , 
        \e[2][1][10] , \e[2][1][9] , \e[2][1][8] , \e[2][1][7] , \e[2][1][6] , 
        \e[2][1][5] , \e[2][1][4] , \e[2][1][3] , \e[2][1][2] , \e[2][1][1] , 
        \e[2][1][0] }) );
  low_swing_rx_750 \ys[1].xs[2].east_bp_rx  ( .i(\w_b_tx[3][1] ), .o(
        \e_b[2][1] ) );
  low_swing_tx_750 \ys[1].xs[2].west_bp_tx  ( .i(\w_b[2][1] ), .c(
        \w_b_tx[2][1] ) );
  low_swing_rx_749 \ys[1].xs[2].msg_txrx[0].north_rx  ( .i(\s_tx[2][0][0] ), 
        .o(\n[2][1][0] ) );
  low_swing_rx_748 \ys[1].xs[2].msg_txrx[0].west_rx  ( .i(\e_tx[1][1][0] ), 
        .o(\w[2][1][0] ) );
  low_swing_tx_749 \ys[1].xs[2].msg_txrx[0].south_tx  ( .i(\s[2][1][0] ), .c(
        \s_tx[2][1][0] ) );
  low_swing_tx_748 \ys[1].xs[2].msg_txrx[0].east_tx  ( .i(\e[2][1][0] ), .c(
        \e_tx[2][1][0] ) );
  low_swing_rx_747 \ys[1].xs[2].msg_txrx[1].north_rx  ( .i(\s_tx[2][0][1] ), 
        .o(\n[2][1][1] ) );
  low_swing_rx_746 \ys[1].xs[2].msg_txrx[1].west_rx  ( .i(\e_tx[1][1][1] ), 
        .o(\w[2][1][1] ) );
  low_swing_tx_747 \ys[1].xs[2].msg_txrx[1].south_tx  ( .i(\s[2][1][1] ), .c(
        \s_tx[2][1][1] ) );
  low_swing_tx_746 \ys[1].xs[2].msg_txrx[1].east_tx  ( .i(\e[2][1][1] ), .c(
        \e_tx[2][1][1] ) );
  low_swing_rx_745 \ys[1].xs[2].msg_txrx[2].north_rx  ( .i(\s_tx[2][0][2] ), 
        .o(\n[2][1][2] ) );
  low_swing_rx_744 \ys[1].xs[2].msg_txrx[2].west_rx  ( .i(\e_tx[1][1][2] ), 
        .o(\w[2][1][2] ) );
  low_swing_tx_745 \ys[1].xs[2].msg_txrx[2].south_tx  ( .i(\s[2][1][2] ), .c(
        \s_tx[2][1][2] ) );
  low_swing_tx_744 \ys[1].xs[2].msg_txrx[2].east_tx  ( .i(\e[2][1][2] ), .c(
        \e_tx[2][1][2] ) );
  low_swing_rx_743 \ys[1].xs[2].msg_txrx[3].north_rx  ( .i(\s_tx[2][0][3] ), 
        .o(\n[2][1][3] ) );
  low_swing_rx_742 \ys[1].xs[2].msg_txrx[3].west_rx  ( .i(\e_tx[1][1][3] ), 
        .o(\w[2][1][3] ) );
  low_swing_tx_743 \ys[1].xs[2].msg_txrx[3].south_tx  ( .i(\s[2][1][3] ), .c(
        \s_tx[2][1][3] ) );
  low_swing_tx_742 \ys[1].xs[2].msg_txrx[3].east_tx  ( .i(\e[2][1][3] ), .c(
        \e_tx[2][1][3] ) );
  low_swing_rx_741 \ys[1].xs[2].msg_txrx[4].north_rx  ( .i(\s_tx[2][0][4] ), 
        .o(\n[2][1][4] ) );
  low_swing_rx_740 \ys[1].xs[2].msg_txrx[4].west_rx  ( .i(\e_tx[1][1][4] ), 
        .o(\w[2][1][4] ) );
  low_swing_tx_741 \ys[1].xs[2].msg_txrx[4].south_tx  ( .i(\s[2][1][4] ), .c(
        \s_tx[2][1][4] ) );
  low_swing_tx_740 \ys[1].xs[2].msg_txrx[4].east_tx  ( .i(\e[2][1][4] ), .c(
        \e_tx[2][1][4] ) );
  low_swing_rx_739 \ys[1].xs[2].msg_txrx[5].north_rx  ( .i(\s_tx[2][0][5] ), 
        .o(\n[2][1][5] ) );
  low_swing_rx_738 \ys[1].xs[2].msg_txrx[5].west_rx  ( .i(\e_tx[1][1][5] ), 
        .o(\w[2][1][5] ) );
  low_swing_tx_739 \ys[1].xs[2].msg_txrx[5].south_tx  ( .i(\s[2][1][5] ), .c(
        \s_tx[2][1][5] ) );
  low_swing_tx_738 \ys[1].xs[2].msg_txrx[5].east_tx  ( .i(\e[2][1][5] ), .c(
        \e_tx[2][1][5] ) );
  low_swing_rx_737 \ys[1].xs[2].msg_txrx[6].north_rx  ( .i(\s_tx[2][0][6] ), 
        .o(\n[2][1][6] ) );
  low_swing_rx_736 \ys[1].xs[2].msg_txrx[6].west_rx  ( .i(\e_tx[1][1][6] ), 
        .o(\w[2][1][6] ) );
  low_swing_tx_737 \ys[1].xs[2].msg_txrx[6].south_tx  ( .i(\s[2][1][6] ), .c(
        \s_tx[2][1][6] ) );
  low_swing_tx_736 \ys[1].xs[2].msg_txrx[6].east_tx  ( .i(\e[2][1][6] ), .c(
        \e_tx[2][1][6] ) );
  low_swing_rx_735 \ys[1].xs[2].msg_txrx[7].north_rx  ( .i(\s_tx[2][0][7] ), 
        .o(\n[2][1][7] ) );
  low_swing_rx_734 \ys[1].xs[2].msg_txrx[7].west_rx  ( .i(\e_tx[1][1][7] ), 
        .o(\w[2][1][7] ) );
  low_swing_tx_735 \ys[1].xs[2].msg_txrx[7].south_tx  ( .i(\s[2][1][7] ), .c(
        \s_tx[2][1][7] ) );
  low_swing_tx_734 \ys[1].xs[2].msg_txrx[7].east_tx  ( .i(\e[2][1][7] ), .c(
        \e_tx[2][1][7] ) );
  low_swing_rx_733 \ys[1].xs[2].msg_txrx[8].north_rx  ( .i(\s_tx[2][0][8] ), 
        .o(\n[2][1][8] ) );
  low_swing_rx_732 \ys[1].xs[2].msg_txrx[8].west_rx  ( .i(\e_tx[1][1][8] ), 
        .o(\w[2][1][8] ) );
  low_swing_tx_733 \ys[1].xs[2].msg_txrx[8].south_tx  ( .i(\s[2][1][8] ), .c(
        \s_tx[2][1][8] ) );
  low_swing_tx_732 \ys[1].xs[2].msg_txrx[8].east_tx  ( .i(\e[2][1][8] ), .c(
        \e_tx[2][1][8] ) );
  low_swing_rx_731 \ys[1].xs[2].msg_txrx[9].north_rx  ( .i(\s_tx[2][0][9] ), 
        .o(\n[2][1][9] ) );
  low_swing_rx_730 \ys[1].xs[2].msg_txrx[9].west_rx  ( .i(\e_tx[1][1][9] ), 
        .o(\w[2][1][9] ) );
  low_swing_tx_731 \ys[1].xs[2].msg_txrx[9].south_tx  ( .i(\s[2][1][9] ), .c(
        \s_tx[2][1][9] ) );
  low_swing_tx_730 \ys[1].xs[2].msg_txrx[9].east_tx  ( .i(\e[2][1][9] ), .c(
        \e_tx[2][1][9] ) );
  low_swing_rx_729 \ys[1].xs[2].msg_txrx[10].north_rx  ( .i(\s_tx[2][0][10] ), 
        .o(\n[2][1][10] ) );
  low_swing_rx_728 \ys[1].xs[2].msg_txrx[10].west_rx  ( .i(\e_tx[1][1][10] ), 
        .o(\w[2][1][10] ) );
  low_swing_tx_729 \ys[1].xs[2].msg_txrx[10].south_tx  ( .i(\s[2][1][10] ), 
        .c(\s_tx[2][1][10] ) );
  low_swing_tx_728 \ys[1].xs[2].msg_txrx[10].east_tx  ( .i(\e[2][1][10] ), .c(
        \e_tx[2][1][10] ) );
  low_swing_rx_727 \ys[1].xs[2].msg_txrx[11].north_rx  ( .i(\s_tx[2][0][11] ), 
        .o(\n[2][1][11] ) );
  low_swing_rx_726 \ys[1].xs[2].msg_txrx[11].west_rx  ( .i(\e_tx[1][1][11] ), 
        .o(\w[2][1][11] ) );
  low_swing_tx_727 \ys[1].xs[2].msg_txrx[11].south_tx  ( .i(\s[2][1][11] ), 
        .c(\s_tx[2][1][11] ) );
  low_swing_tx_726 \ys[1].xs[2].msg_txrx[11].east_tx  ( .i(\e[2][1][11] ), .c(
        \e_tx[2][1][11] ) );
  low_swing_rx_725 \ys[1].xs[2].msg_txrx[12].north_rx  ( .i(\s_tx[2][0][12] ), 
        .o(\n[2][1][12] ) );
  low_swing_rx_724 \ys[1].xs[2].msg_txrx[12].west_rx  ( .i(\e_tx[1][1][12] ), 
        .o(\w[2][1][12] ) );
  low_swing_tx_725 \ys[1].xs[2].msg_txrx[12].south_tx  ( .i(\s[2][1][12] ), 
        .c(\s_tx[2][1][12] ) );
  low_swing_tx_724 \ys[1].xs[2].msg_txrx[12].east_tx  ( .i(\e[2][1][12] ), .c(
        \e_tx[2][1][12] ) );
  low_swing_rx_723 \ys[1].xs[2].msg_txrx[13].north_rx  ( .i(\s_tx[2][0][13] ), 
        .o(\n[2][1][13] ) );
  low_swing_rx_722 \ys[1].xs[2].msg_txrx[13].west_rx  ( .i(\e_tx[1][1][13] ), 
        .o(\w[2][1][13] ) );
  low_swing_tx_723 \ys[1].xs[2].msg_txrx[13].south_tx  ( .i(\s[2][1][13] ), 
        .c(\s_tx[2][1][13] ) );
  low_swing_tx_722 \ys[1].xs[2].msg_txrx[13].east_tx  ( .i(\e[2][1][13] ), .c(
        \e_tx[2][1][13] ) );
  low_swing_rx_721 \ys[1].xs[2].msg_txrx[14].north_rx  ( .i(\s_tx[2][0][14] ), 
        .o(\n[2][1][14] ) );
  low_swing_rx_720 \ys[1].xs[2].msg_txrx[14].west_rx  ( .i(\e_tx[1][1][14] ), 
        .o(\w[2][1][14] ) );
  low_swing_tx_721 \ys[1].xs[2].msg_txrx[14].south_tx  ( .i(\s[2][1][14] ), 
        .c(\s_tx[2][1][14] ) );
  low_swing_tx_720 \ys[1].xs[2].msg_txrx[14].east_tx  ( .i(\e[2][1][14] ), .c(
        \e_tx[2][1][14] ) );
  low_swing_rx_719 \ys[1].xs[2].msg_txrx[15].north_rx  ( .i(\s_tx[2][0][15] ), 
        .o(\n[2][1][15] ) );
  low_swing_rx_718 \ys[1].xs[2].msg_txrx[15].west_rx  ( .i(\e_tx[1][1][15] ), 
        .o(\w[2][1][15] ) );
  low_swing_tx_719 \ys[1].xs[2].msg_txrx[15].south_tx  ( .i(\s[2][1][15] ), 
        .c(\s_tx[2][1][15] ) );
  low_swing_tx_718 \ys[1].xs[2].msg_txrx[15].east_tx  ( .i(\e[2][1][15] ), .c(
        \e_tx[2][1][15] ) );
  low_swing_rx_717 \ys[1].xs[2].msg_txrx[16].north_rx  ( .i(\s_tx[2][0][16] ), 
        .o(\n[2][1][16] ) );
  low_swing_rx_716 \ys[1].xs[2].msg_txrx[16].west_rx  ( .i(\e_tx[1][1][16] ), 
        .o(\w[2][1][16] ) );
  low_swing_tx_717 \ys[1].xs[2].msg_txrx[16].south_tx  ( .i(\s[2][1][16] ), 
        .c(\s_tx[2][1][16] ) );
  low_swing_tx_716 \ys[1].xs[2].msg_txrx[16].east_tx  ( .i(\e[2][1][16] ), .c(
        \e_tx[2][1][16] ) );
  low_swing_rx_715 \ys[1].xs[2].msg_txrx[17].north_rx  ( .i(\s_tx[2][0][17] ), 
        .o(\n[2][1][17] ) );
  low_swing_rx_714 \ys[1].xs[2].msg_txrx[17].west_rx  ( .i(\e_tx[1][1][17] ), 
        .o(\w[2][1][17] ) );
  low_swing_tx_715 \ys[1].xs[2].msg_txrx[17].south_tx  ( .i(\s[2][1][17] ), 
        .c(\s_tx[2][1][17] ) );
  low_swing_tx_714 \ys[1].xs[2].msg_txrx[17].east_tx  ( .i(\e[2][1][17] ), .c(
        \e_tx[2][1][17] ) );
  low_swing_rx_713 \ys[1].xs[2].msg_txrx[18].north_rx  ( .i(\s_tx[2][0][18] ), 
        .o(\n[2][1][18] ) );
  low_swing_rx_712 \ys[1].xs[2].msg_txrx[18].west_rx  ( .i(\e_tx[1][1][18] ), 
        .o(\w[2][1][18] ) );
  low_swing_tx_713 \ys[1].xs[2].msg_txrx[18].south_tx  ( .i(\s[2][1][18] ), 
        .c(\s_tx[2][1][18] ) );
  low_swing_tx_712 \ys[1].xs[2].msg_txrx[18].east_tx  ( .i(\e[2][1][18] ), .c(
        \e_tx[2][1][18] ) );
  low_swing_rx_711 \ys[1].xs[2].msg_txrx[19].north_rx  ( .i(\s_tx[2][0][19] ), 
        .o(\n[2][1][19] ) );
  low_swing_rx_710 \ys[1].xs[2].msg_txrx[19].west_rx  ( .i(\e_tx[1][1][19] ), 
        .o(\w[2][1][19] ) );
  low_swing_tx_711 \ys[1].xs[2].msg_txrx[19].south_tx  ( .i(\s[2][1][19] ), 
        .c(\s_tx[2][1][19] ) );
  low_swing_tx_710 \ys[1].xs[2].msg_txrx[19].east_tx  ( .i(\e[2][1][19] ), .c(
        \e_tx[2][1][19] ) );
  low_swing_rx_709 \ys[1].xs[2].msg_txrx[20].north_rx  ( .i(\s_tx[2][0][20] ), 
        .o(\n[2][1][20] ) );
  low_swing_rx_708 \ys[1].xs[2].msg_txrx[20].west_rx  ( .i(\e_tx[1][1][20] ), 
        .o(\w[2][1][20] ) );
  low_swing_tx_709 \ys[1].xs[2].msg_txrx[20].south_tx  ( .i(\s[2][1][20] ), 
        .c(\s_tx[2][1][20] ) );
  low_swing_tx_708 \ys[1].xs[2].msg_txrx[20].east_tx  ( .i(\e[2][1][20] ), .c(
        \e_tx[2][1][20] ) );
  low_swing_rx_707 \ys[1].xs[2].msg_txrx[21].north_rx  ( .i(\s_tx[2][0][21] ), 
        .o(\n[2][1][21] ) );
  low_swing_rx_706 \ys[1].xs[2].msg_txrx[21].west_rx  ( .i(\e_tx[1][1][21] ), 
        .o(\w[2][1][21] ) );
  low_swing_tx_707 \ys[1].xs[2].msg_txrx[21].south_tx  ( .i(\s[2][1][21] ), 
        .c(\s_tx[2][1][21] ) );
  low_swing_tx_706 \ys[1].xs[2].msg_txrx[21].east_tx  ( .i(\e[2][1][21] ), .c(
        \e_tx[2][1][21] ) );
  low_swing_rx_705 \ys[1].xs[2].msg_txrx[22].north_rx  ( .i(\s_tx[2][0][22] ), 
        .o(\n[2][1][22] ) );
  low_swing_rx_704 \ys[1].xs[2].msg_txrx[22].west_rx  ( .i(\e_tx[1][1][22] ), 
        .o(\w[2][1][22] ) );
  low_swing_tx_705 \ys[1].xs[2].msg_txrx[22].south_tx  ( .i(\s[2][1][22] ), 
        .c(\s_tx[2][1][22] ) );
  low_swing_tx_704 \ys[1].xs[2].msg_txrx[22].east_tx  ( .i(\e[2][1][22] ), .c(
        \e_tx[2][1][22] ) );
  low_swing_rx_703 \ys[1].xs[2].msg_txrx[23].north_rx  ( .i(\s_tx[2][0][23] ), 
        .o(\n[2][1][23] ) );
  low_swing_rx_702 \ys[1].xs[2].msg_txrx[23].west_rx  ( .i(\e_tx[1][1][23] ), 
        .o(\w[2][1][23] ) );
  low_swing_tx_703 \ys[1].xs[2].msg_txrx[23].south_tx  ( .i(\s[2][1][23] ), 
        .c(\s_tx[2][1][23] ) );
  low_swing_tx_702 \ys[1].xs[2].msg_txrx[23].east_tx  ( .i(\e[2][1][23] ), .c(
        \e_tx[2][1][23] ) );
  low_swing_rx_701 \ys[1].xs[2].msg_txrx[24].north_rx  ( .i(\s_tx[2][0][24] ), 
        .o(\n[2][1][24] ) );
  low_swing_rx_700 \ys[1].xs[2].msg_txrx[24].west_rx  ( .i(\e_tx[1][1][24] ), 
        .o(\w[2][1][24] ) );
  low_swing_tx_701 \ys[1].xs[2].msg_txrx[24].south_tx  ( .i(\s[2][1][24] ), 
        .c(\s_tx[2][1][24] ) );
  low_swing_tx_700 \ys[1].xs[2].msg_txrx[24].east_tx  ( .i(\e[2][1][24] ), .c(
        \e_tx[2][1][24] ) );
  low_swing_rx_699 \ys[1].xs[2].msg_txrx[25].north_rx  ( .i(\s_tx[2][0][25] ), 
        .o(\n[2][1][25] ) );
  low_swing_rx_698 \ys[1].xs[2].msg_txrx[25].west_rx  ( .i(\e_tx[1][1][25] ), 
        .o(\w[2][1][25] ) );
  low_swing_tx_699 \ys[1].xs[2].msg_txrx[25].south_tx  ( .i(\s[2][1][25] ), 
        .c(\s_tx[2][1][25] ) );
  low_swing_tx_698 \ys[1].xs[2].msg_txrx[25].east_tx  ( .i(\e[2][1][25] ), .c(
        \e_tx[2][1][25] ) );
  low_swing_rx_697 \ys[1].xs[2].msg_txrx[26].north_rx  ( .i(\s_tx[2][0][26] ), 
        .o(\n[2][1][26] ) );
  low_swing_rx_696 \ys[1].xs[2].msg_txrx[26].west_rx  ( .i(\e_tx[1][1][26] ), 
        .o(\w[2][1][26] ) );
  low_swing_tx_697 \ys[1].xs[2].msg_txrx[26].south_tx  ( .i(\s[2][1][26] ), 
        .c(\s_tx[2][1][26] ) );
  low_swing_tx_696 \ys[1].xs[2].msg_txrx[26].east_tx  ( .i(\e[2][1][26] ), .c(
        \e_tx[2][1][26] ) );
  low_swing_rx_695 \ys[1].xs[2].msg_txrx[27].north_rx  ( .i(\s_tx[2][0][27] ), 
        .o(\n[2][1][27] ) );
  low_swing_rx_694 \ys[1].xs[2].msg_txrx[27].west_rx  ( .i(\e_tx[1][1][27] ), 
        .o(\w[2][1][27] ) );
  low_swing_tx_695 \ys[1].xs[2].msg_txrx[27].south_tx  ( .i(\s[2][1][27] ), 
        .c(\s_tx[2][1][27] ) );
  low_swing_tx_694 \ys[1].xs[2].msg_txrx[27].east_tx  ( .i(\e[2][1][27] ), .c(
        \e_tx[2][1][27] ) );
  low_swing_rx_693 \ys[1].xs[2].msg_txrx[28].north_rx  ( .i(\s_tx[2][0][28] ), 
        .o(\n[2][1][28] ) );
  low_swing_rx_692 \ys[1].xs[2].msg_txrx[28].west_rx  ( .i(\e_tx[1][1][28] ), 
        .o(\w[2][1][28] ) );
  low_swing_tx_693 \ys[1].xs[2].msg_txrx[28].south_tx  ( .i(\s[2][1][28] ), 
        .c(\s_tx[2][1][28] ) );
  low_swing_tx_692 \ys[1].xs[2].msg_txrx[28].east_tx  ( .i(\e[2][1][28] ), .c(
        \e_tx[2][1][28] ) );
  low_swing_rx_691 \ys[1].xs[2].msg_txrx[29].north_rx  ( .i(\s_tx[2][0][29] ), 
        .o(\n[2][1][29] ) );
  low_swing_rx_690 \ys[1].xs[2].msg_txrx[29].west_rx  ( .i(\e_tx[1][1][29] ), 
        .o(\w[2][1][29] ) );
  low_swing_tx_691 \ys[1].xs[2].msg_txrx[29].south_tx  ( .i(\s[2][1][29] ), 
        .c(\s_tx[2][1][29] ) );
  low_swing_tx_690 \ys[1].xs[2].msg_txrx[29].east_tx  ( .i(\e[2][1][29] ), .c(
        \e_tx[2][1][29] ) );
  low_swing_rx_689 \ys[1].xs[2].msg_txrx[30].north_rx  ( .i(\s_tx[2][0][30] ), 
        .o(\n[2][1][30] ) );
  low_swing_rx_688 \ys[1].xs[2].msg_txrx[30].west_rx  ( .i(\e_tx[1][1][30] ), 
        .o(\w[2][1][30] ) );
  low_swing_tx_689 \ys[1].xs[2].msg_txrx[30].south_tx  ( .i(\s[2][1][30] ), 
        .c(\s_tx[2][1][30] ) );
  low_swing_tx_688 \ys[1].xs[2].msg_txrx[30].east_tx  ( .i(\e[2][1][30] ), .c(
        \e_tx[2][1][30] ) );
  low_swing_rx_687 \ys[1].xs[2].msg_txrx[31].north_rx  ( .i(\s_tx[2][0][31] ), 
        .o(\n[2][1][31] ) );
  low_swing_rx_686 \ys[1].xs[2].msg_txrx[31].west_rx  ( .i(\e_tx[1][1][31] ), 
        .o(\w[2][1][31] ) );
  low_swing_tx_687 \ys[1].xs[2].msg_txrx[31].south_tx  ( .i(\s[2][1][31] ), 
        .c(\s_tx[2][1][31] ) );
  low_swing_tx_686 \ys[1].xs[2].msg_txrx[31].east_tx  ( .i(\e[2][1][31] ), .c(
        \e_tx[2][1][31] ) );
  low_swing_rx_685 \ys[1].xs[2].msg_txrx[32].north_rx  ( .i(\s_tx[2][0][32] ), 
        .o(\n[2][1][32] ) );
  low_swing_rx_684 \ys[1].xs[2].msg_txrx[32].west_rx  ( .i(\e_tx[1][1][32] ), 
        .o(\w[2][1][32] ) );
  low_swing_tx_685 \ys[1].xs[2].msg_txrx[32].south_tx  ( .i(\s[2][1][32] ), 
        .c(\s_tx[2][1][32] ) );
  low_swing_tx_684 \ys[1].xs[2].msg_txrx[32].east_tx  ( .i(\e[2][1][32] ), .c(
        \e_tx[2][1][32] ) );
  low_swing_rx_683 \ys[1].xs[2].msg_txrx[33].north_rx  ( .i(\s_tx[2][0][33] ), 
        .o(\n[2][1][33] ) );
  low_swing_rx_682 \ys[1].xs[2].msg_txrx[33].west_rx  ( .i(\e_tx[1][1][33] ), 
        .o(\w[2][1][33] ) );
  low_swing_tx_683 \ys[1].xs[2].msg_txrx[33].south_tx  ( .i(\s[2][1][33] ), 
        .c(\s_tx[2][1][33] ) );
  low_swing_tx_682 \ys[1].xs[2].msg_txrx[33].east_tx  ( .i(\e[2][1][33] ), .c(
        \e_tx[2][1][33] ) );
  low_swing_rx_681 \ys[1].xs[2].msg_txrx[34].north_rx  ( .i(\s_tx[2][0][34] ), 
        .o(\n[2][1][34] ) );
  low_swing_rx_680 \ys[1].xs[2].msg_txrx[34].west_rx  ( .i(\e_tx[1][1][34] ), 
        .o(\w[2][1][34] ) );
  low_swing_tx_681 \ys[1].xs[2].msg_txrx[34].south_tx  ( .i(\s[2][1][34] ), 
        .c(\s_tx[2][1][34] ) );
  low_swing_tx_680 \ys[1].xs[2].msg_txrx[34].east_tx  ( .i(\e[2][1][34] ), .c(
        \e_tx[2][1][34] ) );
  low_swing_rx_679 \ys[1].xs[2].msg_txrx[35].north_rx  ( .i(\s_tx[2][0][35] ), 
        .o(\n[2][1][35] ) );
  low_swing_rx_678 \ys[1].xs[2].msg_txrx[35].west_rx  ( .i(\e_tx[1][1][35] ), 
        .o(\w[2][1][35] ) );
  low_swing_tx_679 \ys[1].xs[2].msg_txrx[35].south_tx  ( .i(\s[2][1][35] ), 
        .c(\s_tx[2][1][35] ) );
  low_swing_tx_678 \ys[1].xs[2].msg_txrx[35].east_tx  ( .i(\e[2][1][35] ), .c(
        \e_tx[2][1][35] ) );
  low_swing_rx_677 \ys[1].xs[2].msg_txrx[36].north_rx  ( .i(\s_tx[2][0][36] ), 
        .o(\n[2][1][36] ) );
  low_swing_rx_676 \ys[1].xs[2].msg_txrx[36].west_rx  ( .i(\e_tx[1][1][36] ), 
        .o(\w[2][1][36] ) );
  low_swing_tx_677 \ys[1].xs[2].msg_txrx[36].south_tx  ( .i(\s[2][1][36] ), 
        .c(\s_tx[2][1][36] ) );
  low_swing_tx_676 \ys[1].xs[2].msg_txrx[36].east_tx  ( .i(\e[2][1][36] ), .c(
        \e_tx[2][1][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X3_Y1_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[1].xs[3].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[3][1] ), .i_v(\i[3][1][36] ), 
        .i_x({\i[3][1][35] , \i[3][1][34] }), .i_y({\i[3][1][33] , 
        \i[3][1][32] }), .i_data({\i[3][1][31] , \i[3][1][30] , \i[3][1][29] , 
        \i[3][1][28] , \i[3][1][27] , \i[3][1][26] , \i[3][1][25] , 
        \i[3][1][24] , \i[3][1][23] , \i[3][1][22] , \i[3][1][21] , 
        \i[3][1][20] , \i[3][1][19] , \i[3][1][18] , \i[3][1][17] , 
        \i[3][1][16] , \i[3][1][15] , \i[3][1][14] , \i[3][1][13] , 
        \i[3][1][12] , \i[3][1][11] , \i[3][1][10] , \i[3][1][9] , 
        \i[3][1][8] , \i[3][1][7] , \i[3][1][6] , \i[3][1][5] , \i[3][1][4] , 
        \i[3][1][3] , \i[3][1][2] , \i[3][1][1] , \i[3][1][0] }), .o_v(
        \o_v[3][1] ), .o_x({\s[3][1][35] , \s[3][1][34] }), .o_y({
        \s[3][1][33] , \s[3][1][32] }), .o_data({\s[3][1][31] , \s[3][1][30] , 
        \s[3][1][29] , \s[3][1][28] , \s[3][1][27] , \s[3][1][26] , 
        \s[3][1][25] , \s[3][1][24] , \s[3][1][23] , \s[3][1][22] , 
        \s[3][1][21] , \s[3][1][20] , \s[3][1][19] , \s[3][1][18] , 
        \s[3][1][17] , \s[3][1][16] , \s[3][1][15] , \s[3][1][14] , 
        \s[3][1][13] , \s[3][1][12] , \s[3][1][11] , \s[3][1][10] , 
        \s[3][1][9] , \s[3][1][8] , \s[3][1][7] , \s[3][1][6] , \s[3][1][5] , 
        \s[3][1][4] , \s[3][1][3] , \s[3][1][2] , \s[3][1][1] , \s[3][1][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X3_Y1 \ys[1].xs[3].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[3][1][36] ), .n_in_x({\n[3][1][35] , 
        \n[3][1][34] }), .n_in_y({\n[3][1][33] , \n[3][1][32] }), .n_in_data({
        \n[3][1][31] , \n[3][1][30] , \n[3][1][29] , \n[3][1][28] , 
        \n[3][1][27] , \n[3][1][26] , \n[3][1][25] , \n[3][1][24] , 
        \n[3][1][23] , \n[3][1][22] , \n[3][1][21] , \n[3][1][20] , 
        \n[3][1][19] , \n[3][1][18] , \n[3][1][17] , \n[3][1][16] , 
        \n[3][1][15] , \n[3][1][14] , \n[3][1][13] , \n[3][1][12] , 
        \n[3][1][11] , \n[3][1][10] , \n[3][1][9] , \n[3][1][8] , \n[3][1][7] , 
        \n[3][1][6] , \n[3][1][5] , \n[3][1][4] , \n[3][1][3] , \n[3][1][2] , 
        \n[3][1][1] , \n[3][1][0] }), .w_in_v(\w[3][1][36] ), .w_in_x({
        \w[3][1][35] , \w[3][1][34] }), .w_in_y({\w[3][1][33] , \w[3][1][32] }), .w_in_data({\w[3][1][31] , \w[3][1][30] , \w[3][1][29] , \w[3][1][28] , 
        \w[3][1][27] , \w[3][1][26] , \w[3][1][25] , \w[3][1][24] , 
        \w[3][1][23] , \w[3][1][22] , \w[3][1][21] , \w[3][1][20] , 
        \w[3][1][19] , \w[3][1][18] , \w[3][1][17] , \w[3][1][16] , 
        \w[3][1][15] , \w[3][1][14] , \w[3][1][13] , \w[3][1][12] , 
        \w[3][1][11] , \w[3][1][10] , \w[3][1][9] , \w[3][1][8] , \w[3][1][7] , 
        \w[3][1][6] , \w[3][1][5] , \w[3][1][4] , \w[3][1][3] , \w[3][1][2] , 
        \w[3][1][1] , \w[3][1][0] }), .i_v(\i[3][1][36] ), .i_x({\i[3][1][35] , 
        \i[3][1][34] }), .i_y({\i[3][1][33] , \i[3][1][32] }), .i_data({
        \i[3][1][31] , \i[3][1][30] , \i[3][1][29] , \i[3][1][28] , 
        \i[3][1][27] , \i[3][1][26] , \i[3][1][25] , \i[3][1][24] , 
        \i[3][1][23] , \i[3][1][22] , \i[3][1][21] , \i[3][1][20] , 
        \i[3][1][19] , \i[3][1][18] , \i[3][1][17] , \i[3][1][16] , 
        \i[3][1][15] , \i[3][1][14] , \i[3][1][13] , \i[3][1][12] , 
        \i[3][1][11] , \i[3][1][10] , \i[3][1][9] , \i[3][1][8] , \i[3][1][7] , 
        \i[3][1][6] , \i[3][1][5] , \i[3][1][4] , \i[3][1][3] , \i[3][1][2] , 
        \i[3][1][1] , \i[3][1][0] }), .e_b(\e_b[3][1] ), .w_b(\w_b[3][1] ), 
        .i_ack(\i_ack[3][1] ), .o_v(\o_v[3][1] ), .s_out_v(\s[3][1][36] ), 
        .s_out_x({\s[3][1][35] , \s[3][1][34] }), .s_out_y({\s[3][1][33] , 
        \s[3][1][32] }), .s_out_data({\s[3][1][31] , \s[3][1][30] , 
        \s[3][1][29] , \s[3][1][28] , \s[3][1][27] , \s[3][1][26] , 
        \s[3][1][25] , \s[3][1][24] , \s[3][1][23] , \s[3][1][22] , 
        \s[3][1][21] , \s[3][1][20] , \s[3][1][19] , \s[3][1][18] , 
        \s[3][1][17] , \s[3][1][16] , \s[3][1][15] , \s[3][1][14] , 
        \s[3][1][13] , \s[3][1][12] , \s[3][1][11] , \s[3][1][10] , 
        \s[3][1][9] , \s[3][1][8] , \s[3][1][7] , \s[3][1][6] , \s[3][1][5] , 
        \s[3][1][4] , \s[3][1][3] , \s[3][1][2] , \s[3][1][1] , \s[3][1][0] }), 
        .e_out_v(\e[3][1][36] ), .e_out_x({\e[3][1][35] , \e[3][1][34] }), 
        .e_out_y({\e[3][1][33] , \e[3][1][32] }), .e_out_data({\e[3][1][31] , 
        \e[3][1][30] , \e[3][1][29] , \e[3][1][28] , \e[3][1][27] , 
        \e[3][1][26] , \e[3][1][25] , \e[3][1][24] , \e[3][1][23] , 
        \e[3][1][22] , \e[3][1][21] , \e[3][1][20] , \e[3][1][19] , 
        \e[3][1][18] , \e[3][1][17] , \e[3][1][16] , \e[3][1][15] , 
        \e[3][1][14] , \e[3][1][13] , \e[3][1][12] , \e[3][1][11] , 
        \e[3][1][10] , \e[3][1][9] , \e[3][1][8] , \e[3][1][7] , \e[3][1][6] , 
        \e[3][1][5] , \e[3][1][4] , \e[3][1][3] , \e[3][1][2] , \e[3][1][1] , 
        \e[3][1][0] }) );
  low_swing_rx_675 \ys[1].xs[3].east_bp_rx  ( .i(\w_b_tx[0][1] ), .o(
        \e_b[3][1] ) );
  low_swing_tx_675 \ys[1].xs[3].west_bp_tx  ( .i(\w_b[3][1] ), .c(
        \w_b_tx[3][1] ) );
  low_swing_rx_674 \ys[1].xs[3].msg_txrx[0].north_rx  ( .i(\s_tx[3][0][0] ), 
        .o(\n[3][1][0] ) );
  low_swing_rx_673 \ys[1].xs[3].msg_txrx[0].west_rx  ( .i(\e_tx[2][1][0] ), 
        .o(\w[3][1][0] ) );
  low_swing_tx_674 \ys[1].xs[3].msg_txrx[0].south_tx  ( .i(\s[3][1][0] ), .c(
        \s_tx[3][1][0] ) );
  low_swing_tx_673 \ys[1].xs[3].msg_txrx[0].east_tx  ( .i(\e[3][1][0] ), .c(
        \e_tx[3][1][0] ) );
  low_swing_rx_672 \ys[1].xs[3].msg_txrx[1].north_rx  ( .i(\s_tx[3][0][1] ), 
        .o(\n[3][1][1] ) );
  low_swing_rx_671 \ys[1].xs[3].msg_txrx[1].west_rx  ( .i(\e_tx[2][1][1] ), 
        .o(\w[3][1][1] ) );
  low_swing_tx_672 \ys[1].xs[3].msg_txrx[1].south_tx  ( .i(\s[3][1][1] ), .c(
        \s_tx[3][1][1] ) );
  low_swing_tx_671 \ys[1].xs[3].msg_txrx[1].east_tx  ( .i(\e[3][1][1] ), .c(
        \e_tx[3][1][1] ) );
  low_swing_rx_670 \ys[1].xs[3].msg_txrx[2].north_rx  ( .i(\s_tx[3][0][2] ), 
        .o(\n[3][1][2] ) );
  low_swing_rx_669 \ys[1].xs[3].msg_txrx[2].west_rx  ( .i(\e_tx[2][1][2] ), 
        .o(\w[3][1][2] ) );
  low_swing_tx_670 \ys[1].xs[3].msg_txrx[2].south_tx  ( .i(\s[3][1][2] ), .c(
        \s_tx[3][1][2] ) );
  low_swing_tx_669 \ys[1].xs[3].msg_txrx[2].east_tx  ( .i(\e[3][1][2] ), .c(
        \e_tx[3][1][2] ) );
  low_swing_rx_668 \ys[1].xs[3].msg_txrx[3].north_rx  ( .i(\s_tx[3][0][3] ), 
        .o(\n[3][1][3] ) );
  low_swing_rx_667 \ys[1].xs[3].msg_txrx[3].west_rx  ( .i(\e_tx[2][1][3] ), 
        .o(\w[3][1][3] ) );
  low_swing_tx_668 \ys[1].xs[3].msg_txrx[3].south_tx  ( .i(\s[3][1][3] ), .c(
        \s_tx[3][1][3] ) );
  low_swing_tx_667 \ys[1].xs[3].msg_txrx[3].east_tx  ( .i(\e[3][1][3] ), .c(
        \e_tx[3][1][3] ) );
  low_swing_rx_666 \ys[1].xs[3].msg_txrx[4].north_rx  ( .i(\s_tx[3][0][4] ), 
        .o(\n[3][1][4] ) );
  low_swing_rx_665 \ys[1].xs[3].msg_txrx[4].west_rx  ( .i(\e_tx[2][1][4] ), 
        .o(\w[3][1][4] ) );
  low_swing_tx_666 \ys[1].xs[3].msg_txrx[4].south_tx  ( .i(\s[3][1][4] ), .c(
        \s_tx[3][1][4] ) );
  low_swing_tx_665 \ys[1].xs[3].msg_txrx[4].east_tx  ( .i(\e[3][1][4] ), .c(
        \e_tx[3][1][4] ) );
  low_swing_rx_664 \ys[1].xs[3].msg_txrx[5].north_rx  ( .i(\s_tx[3][0][5] ), 
        .o(\n[3][1][5] ) );
  low_swing_rx_663 \ys[1].xs[3].msg_txrx[5].west_rx  ( .i(\e_tx[2][1][5] ), 
        .o(\w[3][1][5] ) );
  low_swing_tx_664 \ys[1].xs[3].msg_txrx[5].south_tx  ( .i(\s[3][1][5] ), .c(
        \s_tx[3][1][5] ) );
  low_swing_tx_663 \ys[1].xs[3].msg_txrx[5].east_tx  ( .i(\e[3][1][5] ), .c(
        \e_tx[3][1][5] ) );
  low_swing_rx_662 \ys[1].xs[3].msg_txrx[6].north_rx  ( .i(\s_tx[3][0][6] ), 
        .o(\n[3][1][6] ) );
  low_swing_rx_661 \ys[1].xs[3].msg_txrx[6].west_rx  ( .i(\e_tx[2][1][6] ), 
        .o(\w[3][1][6] ) );
  low_swing_tx_662 \ys[1].xs[3].msg_txrx[6].south_tx  ( .i(\s[3][1][6] ), .c(
        \s_tx[3][1][6] ) );
  low_swing_tx_661 \ys[1].xs[3].msg_txrx[6].east_tx  ( .i(\e[3][1][6] ), .c(
        \e_tx[3][1][6] ) );
  low_swing_rx_660 \ys[1].xs[3].msg_txrx[7].north_rx  ( .i(\s_tx[3][0][7] ), 
        .o(\n[3][1][7] ) );
  low_swing_rx_659 \ys[1].xs[3].msg_txrx[7].west_rx  ( .i(\e_tx[2][1][7] ), 
        .o(\w[3][1][7] ) );
  low_swing_tx_660 \ys[1].xs[3].msg_txrx[7].south_tx  ( .i(\s[3][1][7] ), .c(
        \s_tx[3][1][7] ) );
  low_swing_tx_659 \ys[1].xs[3].msg_txrx[7].east_tx  ( .i(\e[3][1][7] ), .c(
        \e_tx[3][1][7] ) );
  low_swing_rx_658 \ys[1].xs[3].msg_txrx[8].north_rx  ( .i(\s_tx[3][0][8] ), 
        .o(\n[3][1][8] ) );
  low_swing_rx_657 \ys[1].xs[3].msg_txrx[8].west_rx  ( .i(\e_tx[2][1][8] ), 
        .o(\w[3][1][8] ) );
  low_swing_tx_658 \ys[1].xs[3].msg_txrx[8].south_tx  ( .i(\s[3][1][8] ), .c(
        \s_tx[3][1][8] ) );
  low_swing_tx_657 \ys[1].xs[3].msg_txrx[8].east_tx  ( .i(\e[3][1][8] ), .c(
        \e_tx[3][1][8] ) );
  low_swing_rx_656 \ys[1].xs[3].msg_txrx[9].north_rx  ( .i(\s_tx[3][0][9] ), 
        .o(\n[3][1][9] ) );
  low_swing_rx_655 \ys[1].xs[3].msg_txrx[9].west_rx  ( .i(\e_tx[2][1][9] ), 
        .o(\w[3][1][9] ) );
  low_swing_tx_656 \ys[1].xs[3].msg_txrx[9].south_tx  ( .i(\s[3][1][9] ), .c(
        \s_tx[3][1][9] ) );
  low_swing_tx_655 \ys[1].xs[3].msg_txrx[9].east_tx  ( .i(\e[3][1][9] ), .c(
        \e_tx[3][1][9] ) );
  low_swing_rx_654 \ys[1].xs[3].msg_txrx[10].north_rx  ( .i(\s_tx[3][0][10] ), 
        .o(\n[3][1][10] ) );
  low_swing_rx_653 \ys[1].xs[3].msg_txrx[10].west_rx  ( .i(\e_tx[2][1][10] ), 
        .o(\w[3][1][10] ) );
  low_swing_tx_654 \ys[1].xs[3].msg_txrx[10].south_tx  ( .i(\s[3][1][10] ), 
        .c(\s_tx[3][1][10] ) );
  low_swing_tx_653 \ys[1].xs[3].msg_txrx[10].east_tx  ( .i(\e[3][1][10] ), .c(
        \e_tx[3][1][10] ) );
  low_swing_rx_652 \ys[1].xs[3].msg_txrx[11].north_rx  ( .i(\s_tx[3][0][11] ), 
        .o(\n[3][1][11] ) );
  low_swing_rx_651 \ys[1].xs[3].msg_txrx[11].west_rx  ( .i(\e_tx[2][1][11] ), 
        .o(\w[3][1][11] ) );
  low_swing_tx_652 \ys[1].xs[3].msg_txrx[11].south_tx  ( .i(\s[3][1][11] ), 
        .c(\s_tx[3][1][11] ) );
  low_swing_tx_651 \ys[1].xs[3].msg_txrx[11].east_tx  ( .i(\e[3][1][11] ), .c(
        \e_tx[3][1][11] ) );
  low_swing_rx_650 \ys[1].xs[3].msg_txrx[12].north_rx  ( .i(\s_tx[3][0][12] ), 
        .o(\n[3][1][12] ) );
  low_swing_rx_649 \ys[1].xs[3].msg_txrx[12].west_rx  ( .i(\e_tx[2][1][12] ), 
        .o(\w[3][1][12] ) );
  low_swing_tx_650 \ys[1].xs[3].msg_txrx[12].south_tx  ( .i(\s[3][1][12] ), 
        .c(\s_tx[3][1][12] ) );
  low_swing_tx_649 \ys[1].xs[3].msg_txrx[12].east_tx  ( .i(\e[3][1][12] ), .c(
        \e_tx[3][1][12] ) );
  low_swing_rx_648 \ys[1].xs[3].msg_txrx[13].north_rx  ( .i(\s_tx[3][0][13] ), 
        .o(\n[3][1][13] ) );
  low_swing_rx_647 \ys[1].xs[3].msg_txrx[13].west_rx  ( .i(\e_tx[2][1][13] ), 
        .o(\w[3][1][13] ) );
  low_swing_tx_648 \ys[1].xs[3].msg_txrx[13].south_tx  ( .i(\s[3][1][13] ), 
        .c(\s_tx[3][1][13] ) );
  low_swing_tx_647 \ys[1].xs[3].msg_txrx[13].east_tx  ( .i(\e[3][1][13] ), .c(
        \e_tx[3][1][13] ) );
  low_swing_rx_646 \ys[1].xs[3].msg_txrx[14].north_rx  ( .i(\s_tx[3][0][14] ), 
        .o(\n[3][1][14] ) );
  low_swing_rx_645 \ys[1].xs[3].msg_txrx[14].west_rx  ( .i(\e_tx[2][1][14] ), 
        .o(\w[3][1][14] ) );
  low_swing_tx_646 \ys[1].xs[3].msg_txrx[14].south_tx  ( .i(\s[3][1][14] ), 
        .c(\s_tx[3][1][14] ) );
  low_swing_tx_645 \ys[1].xs[3].msg_txrx[14].east_tx  ( .i(\e[3][1][14] ), .c(
        \e_tx[3][1][14] ) );
  low_swing_rx_644 \ys[1].xs[3].msg_txrx[15].north_rx  ( .i(\s_tx[3][0][15] ), 
        .o(\n[3][1][15] ) );
  low_swing_rx_643 \ys[1].xs[3].msg_txrx[15].west_rx  ( .i(\e_tx[2][1][15] ), 
        .o(\w[3][1][15] ) );
  low_swing_tx_644 \ys[1].xs[3].msg_txrx[15].south_tx  ( .i(\s[3][1][15] ), 
        .c(\s_tx[3][1][15] ) );
  low_swing_tx_643 \ys[1].xs[3].msg_txrx[15].east_tx  ( .i(\e[3][1][15] ), .c(
        \e_tx[3][1][15] ) );
  low_swing_rx_642 \ys[1].xs[3].msg_txrx[16].north_rx  ( .i(\s_tx[3][0][16] ), 
        .o(\n[3][1][16] ) );
  low_swing_rx_641 \ys[1].xs[3].msg_txrx[16].west_rx  ( .i(\e_tx[2][1][16] ), 
        .o(\w[3][1][16] ) );
  low_swing_tx_642 \ys[1].xs[3].msg_txrx[16].south_tx  ( .i(\s[3][1][16] ), 
        .c(\s_tx[3][1][16] ) );
  low_swing_tx_641 \ys[1].xs[3].msg_txrx[16].east_tx  ( .i(\e[3][1][16] ), .c(
        \e_tx[3][1][16] ) );
  low_swing_rx_640 \ys[1].xs[3].msg_txrx[17].north_rx  ( .i(\s_tx[3][0][17] ), 
        .o(\n[3][1][17] ) );
  low_swing_rx_639 \ys[1].xs[3].msg_txrx[17].west_rx  ( .i(\e_tx[2][1][17] ), 
        .o(\w[3][1][17] ) );
  low_swing_tx_640 \ys[1].xs[3].msg_txrx[17].south_tx  ( .i(\s[3][1][17] ), 
        .c(\s_tx[3][1][17] ) );
  low_swing_tx_639 \ys[1].xs[3].msg_txrx[17].east_tx  ( .i(\e[3][1][17] ), .c(
        \e_tx[3][1][17] ) );
  low_swing_rx_638 \ys[1].xs[3].msg_txrx[18].north_rx  ( .i(\s_tx[3][0][18] ), 
        .o(\n[3][1][18] ) );
  low_swing_rx_637 \ys[1].xs[3].msg_txrx[18].west_rx  ( .i(\e_tx[2][1][18] ), 
        .o(\w[3][1][18] ) );
  low_swing_tx_638 \ys[1].xs[3].msg_txrx[18].south_tx  ( .i(\s[3][1][18] ), 
        .c(\s_tx[3][1][18] ) );
  low_swing_tx_637 \ys[1].xs[3].msg_txrx[18].east_tx  ( .i(\e[3][1][18] ), .c(
        \e_tx[3][1][18] ) );
  low_swing_rx_636 \ys[1].xs[3].msg_txrx[19].north_rx  ( .i(\s_tx[3][0][19] ), 
        .o(\n[3][1][19] ) );
  low_swing_rx_635 \ys[1].xs[3].msg_txrx[19].west_rx  ( .i(\e_tx[2][1][19] ), 
        .o(\w[3][1][19] ) );
  low_swing_tx_636 \ys[1].xs[3].msg_txrx[19].south_tx  ( .i(\s[3][1][19] ), 
        .c(\s_tx[3][1][19] ) );
  low_swing_tx_635 \ys[1].xs[3].msg_txrx[19].east_tx  ( .i(\e[3][1][19] ), .c(
        \e_tx[3][1][19] ) );
  low_swing_rx_634 \ys[1].xs[3].msg_txrx[20].north_rx  ( .i(\s_tx[3][0][20] ), 
        .o(\n[3][1][20] ) );
  low_swing_rx_633 \ys[1].xs[3].msg_txrx[20].west_rx  ( .i(\e_tx[2][1][20] ), 
        .o(\w[3][1][20] ) );
  low_swing_tx_634 \ys[1].xs[3].msg_txrx[20].south_tx  ( .i(\s[3][1][20] ), 
        .c(\s_tx[3][1][20] ) );
  low_swing_tx_633 \ys[1].xs[3].msg_txrx[20].east_tx  ( .i(\e[3][1][20] ), .c(
        \e_tx[3][1][20] ) );
  low_swing_rx_632 \ys[1].xs[3].msg_txrx[21].north_rx  ( .i(\s_tx[3][0][21] ), 
        .o(\n[3][1][21] ) );
  low_swing_rx_631 \ys[1].xs[3].msg_txrx[21].west_rx  ( .i(\e_tx[2][1][21] ), 
        .o(\w[3][1][21] ) );
  low_swing_tx_632 \ys[1].xs[3].msg_txrx[21].south_tx  ( .i(\s[3][1][21] ), 
        .c(\s_tx[3][1][21] ) );
  low_swing_tx_631 \ys[1].xs[3].msg_txrx[21].east_tx  ( .i(\e[3][1][21] ), .c(
        \e_tx[3][1][21] ) );
  low_swing_rx_630 \ys[1].xs[3].msg_txrx[22].north_rx  ( .i(\s_tx[3][0][22] ), 
        .o(\n[3][1][22] ) );
  low_swing_rx_629 \ys[1].xs[3].msg_txrx[22].west_rx  ( .i(\e_tx[2][1][22] ), 
        .o(\w[3][1][22] ) );
  low_swing_tx_630 \ys[1].xs[3].msg_txrx[22].south_tx  ( .i(\s[3][1][22] ), 
        .c(\s_tx[3][1][22] ) );
  low_swing_tx_629 \ys[1].xs[3].msg_txrx[22].east_tx  ( .i(\e[3][1][22] ), .c(
        \e_tx[3][1][22] ) );
  low_swing_rx_628 \ys[1].xs[3].msg_txrx[23].north_rx  ( .i(\s_tx[3][0][23] ), 
        .o(\n[3][1][23] ) );
  low_swing_rx_627 \ys[1].xs[3].msg_txrx[23].west_rx  ( .i(\e_tx[2][1][23] ), 
        .o(\w[3][1][23] ) );
  low_swing_tx_628 \ys[1].xs[3].msg_txrx[23].south_tx  ( .i(\s[3][1][23] ), 
        .c(\s_tx[3][1][23] ) );
  low_swing_tx_627 \ys[1].xs[3].msg_txrx[23].east_tx  ( .i(\e[3][1][23] ), .c(
        \e_tx[3][1][23] ) );
  low_swing_rx_626 \ys[1].xs[3].msg_txrx[24].north_rx  ( .i(\s_tx[3][0][24] ), 
        .o(\n[3][1][24] ) );
  low_swing_rx_625 \ys[1].xs[3].msg_txrx[24].west_rx  ( .i(\e_tx[2][1][24] ), 
        .o(\w[3][1][24] ) );
  low_swing_tx_626 \ys[1].xs[3].msg_txrx[24].south_tx  ( .i(\s[3][1][24] ), 
        .c(\s_tx[3][1][24] ) );
  low_swing_tx_625 \ys[1].xs[3].msg_txrx[24].east_tx  ( .i(\e[3][1][24] ), .c(
        \e_tx[3][1][24] ) );
  low_swing_rx_624 \ys[1].xs[3].msg_txrx[25].north_rx  ( .i(\s_tx[3][0][25] ), 
        .o(\n[3][1][25] ) );
  low_swing_rx_623 \ys[1].xs[3].msg_txrx[25].west_rx  ( .i(\e_tx[2][1][25] ), 
        .o(\w[3][1][25] ) );
  low_swing_tx_624 \ys[1].xs[3].msg_txrx[25].south_tx  ( .i(\s[3][1][25] ), 
        .c(\s_tx[3][1][25] ) );
  low_swing_tx_623 \ys[1].xs[3].msg_txrx[25].east_tx  ( .i(\e[3][1][25] ), .c(
        \e_tx[3][1][25] ) );
  low_swing_rx_622 \ys[1].xs[3].msg_txrx[26].north_rx  ( .i(\s_tx[3][0][26] ), 
        .o(\n[3][1][26] ) );
  low_swing_rx_621 \ys[1].xs[3].msg_txrx[26].west_rx  ( .i(\e_tx[2][1][26] ), 
        .o(\w[3][1][26] ) );
  low_swing_tx_622 \ys[1].xs[3].msg_txrx[26].south_tx  ( .i(\s[3][1][26] ), 
        .c(\s_tx[3][1][26] ) );
  low_swing_tx_621 \ys[1].xs[3].msg_txrx[26].east_tx  ( .i(\e[3][1][26] ), .c(
        \e_tx[3][1][26] ) );
  low_swing_rx_620 \ys[1].xs[3].msg_txrx[27].north_rx  ( .i(\s_tx[3][0][27] ), 
        .o(\n[3][1][27] ) );
  low_swing_rx_619 \ys[1].xs[3].msg_txrx[27].west_rx  ( .i(\e_tx[2][1][27] ), 
        .o(\w[3][1][27] ) );
  low_swing_tx_620 \ys[1].xs[3].msg_txrx[27].south_tx  ( .i(\s[3][1][27] ), 
        .c(\s_tx[3][1][27] ) );
  low_swing_tx_619 \ys[1].xs[3].msg_txrx[27].east_tx  ( .i(\e[3][1][27] ), .c(
        \e_tx[3][1][27] ) );
  low_swing_rx_618 \ys[1].xs[3].msg_txrx[28].north_rx  ( .i(\s_tx[3][0][28] ), 
        .o(\n[3][1][28] ) );
  low_swing_rx_617 \ys[1].xs[3].msg_txrx[28].west_rx  ( .i(\e_tx[2][1][28] ), 
        .o(\w[3][1][28] ) );
  low_swing_tx_618 \ys[1].xs[3].msg_txrx[28].south_tx  ( .i(\s[3][1][28] ), 
        .c(\s_tx[3][1][28] ) );
  low_swing_tx_617 \ys[1].xs[3].msg_txrx[28].east_tx  ( .i(\e[3][1][28] ), .c(
        \e_tx[3][1][28] ) );
  low_swing_rx_616 \ys[1].xs[3].msg_txrx[29].north_rx  ( .i(\s_tx[3][0][29] ), 
        .o(\n[3][1][29] ) );
  low_swing_rx_615 \ys[1].xs[3].msg_txrx[29].west_rx  ( .i(\e_tx[2][1][29] ), 
        .o(\w[3][1][29] ) );
  low_swing_tx_616 \ys[1].xs[3].msg_txrx[29].south_tx  ( .i(\s[3][1][29] ), 
        .c(\s_tx[3][1][29] ) );
  low_swing_tx_615 \ys[1].xs[3].msg_txrx[29].east_tx  ( .i(\e[3][1][29] ), .c(
        \e_tx[3][1][29] ) );
  low_swing_rx_614 \ys[1].xs[3].msg_txrx[30].north_rx  ( .i(\s_tx[3][0][30] ), 
        .o(\n[3][1][30] ) );
  low_swing_rx_613 \ys[1].xs[3].msg_txrx[30].west_rx  ( .i(\e_tx[2][1][30] ), 
        .o(\w[3][1][30] ) );
  low_swing_tx_614 \ys[1].xs[3].msg_txrx[30].south_tx  ( .i(\s[3][1][30] ), 
        .c(\s_tx[3][1][30] ) );
  low_swing_tx_613 \ys[1].xs[3].msg_txrx[30].east_tx  ( .i(\e[3][1][30] ), .c(
        \e_tx[3][1][30] ) );
  low_swing_rx_612 \ys[1].xs[3].msg_txrx[31].north_rx  ( .i(\s_tx[3][0][31] ), 
        .o(\n[3][1][31] ) );
  low_swing_rx_611 \ys[1].xs[3].msg_txrx[31].west_rx  ( .i(\e_tx[2][1][31] ), 
        .o(\w[3][1][31] ) );
  low_swing_tx_612 \ys[1].xs[3].msg_txrx[31].south_tx  ( .i(\s[3][1][31] ), 
        .c(\s_tx[3][1][31] ) );
  low_swing_tx_611 \ys[1].xs[3].msg_txrx[31].east_tx  ( .i(\e[3][1][31] ), .c(
        \e_tx[3][1][31] ) );
  low_swing_rx_610 \ys[1].xs[3].msg_txrx[32].north_rx  ( .i(\s_tx[3][0][32] ), 
        .o(\n[3][1][32] ) );
  low_swing_rx_609 \ys[1].xs[3].msg_txrx[32].west_rx  ( .i(\e_tx[2][1][32] ), 
        .o(\w[3][1][32] ) );
  low_swing_tx_610 \ys[1].xs[3].msg_txrx[32].south_tx  ( .i(\s[3][1][32] ), 
        .c(\s_tx[3][1][32] ) );
  low_swing_tx_609 \ys[1].xs[3].msg_txrx[32].east_tx  ( .i(\e[3][1][32] ), .c(
        \e_tx[3][1][32] ) );
  low_swing_rx_608 \ys[1].xs[3].msg_txrx[33].north_rx  ( .i(\s_tx[3][0][33] ), 
        .o(\n[3][1][33] ) );
  low_swing_rx_607 \ys[1].xs[3].msg_txrx[33].west_rx  ( .i(\e_tx[2][1][33] ), 
        .o(\w[3][1][33] ) );
  low_swing_tx_608 \ys[1].xs[3].msg_txrx[33].south_tx  ( .i(\s[3][1][33] ), 
        .c(\s_tx[3][1][33] ) );
  low_swing_tx_607 \ys[1].xs[3].msg_txrx[33].east_tx  ( .i(\e[3][1][33] ), .c(
        \e_tx[3][1][33] ) );
  low_swing_rx_606 \ys[1].xs[3].msg_txrx[34].north_rx  ( .i(\s_tx[3][0][34] ), 
        .o(\n[3][1][34] ) );
  low_swing_rx_605 \ys[1].xs[3].msg_txrx[34].west_rx  ( .i(\e_tx[2][1][34] ), 
        .o(\w[3][1][34] ) );
  low_swing_tx_606 \ys[1].xs[3].msg_txrx[34].south_tx  ( .i(\s[3][1][34] ), 
        .c(\s_tx[3][1][34] ) );
  low_swing_tx_605 \ys[1].xs[3].msg_txrx[34].east_tx  ( .i(\e[3][1][34] ), .c(
        \e_tx[3][1][34] ) );
  low_swing_rx_604 \ys[1].xs[3].msg_txrx[35].north_rx  ( .i(\s_tx[3][0][35] ), 
        .o(\n[3][1][35] ) );
  low_swing_rx_603 \ys[1].xs[3].msg_txrx[35].west_rx  ( .i(\e_tx[2][1][35] ), 
        .o(\w[3][1][35] ) );
  low_swing_tx_604 \ys[1].xs[3].msg_txrx[35].south_tx  ( .i(\s[3][1][35] ), 
        .c(\s_tx[3][1][35] ) );
  low_swing_tx_603 \ys[1].xs[3].msg_txrx[35].east_tx  ( .i(\e[3][1][35] ), .c(
        \e_tx[3][1][35] ) );
  low_swing_rx_602 \ys[1].xs[3].msg_txrx[36].north_rx  ( .i(\s_tx[3][0][36] ), 
        .o(\n[3][1][36] ) );
  low_swing_rx_601 \ys[1].xs[3].msg_txrx[36].west_rx  ( .i(\e_tx[2][1][36] ), 
        .o(\w[3][1][36] ) );
  low_swing_tx_602 \ys[1].xs[3].msg_txrx[36].south_tx  ( .i(\s[3][1][36] ), 
        .c(\s_tx[3][1][36] ) );
  low_swing_tx_601 \ys[1].xs[3].msg_txrx[36].east_tx  ( .i(\e[3][1][36] ), .c(
        \e_tx[3][1][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X0_Y2_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[2].xs[0].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[0][2] ), .i_v(\i[0][2][36] ), 
        .i_x({\i[0][2][35] , \i[0][2][34] }), .i_y({\i[0][2][33] , 
        \i[0][2][32] }), .i_data({\i[0][2][31] , \i[0][2][30] , \i[0][2][29] , 
        \i[0][2][28] , \i[0][2][27] , \i[0][2][26] , \i[0][2][25] , 
        \i[0][2][24] , \i[0][2][23] , \i[0][2][22] , \i[0][2][21] , 
        \i[0][2][20] , \i[0][2][19] , \i[0][2][18] , \i[0][2][17] , 
        \i[0][2][16] , \i[0][2][15] , \i[0][2][14] , \i[0][2][13] , 
        \i[0][2][12] , \i[0][2][11] , \i[0][2][10] , \i[0][2][9] , 
        \i[0][2][8] , \i[0][2][7] , \i[0][2][6] , \i[0][2][5] , \i[0][2][4] , 
        \i[0][2][3] , \i[0][2][2] , \i[0][2][1] , \i[0][2][0] }), .o_v(
        \o_v[0][2] ), .o_x({\s[0][2][35] , \s[0][2][34] }), .o_y({
        \s[0][2][33] , \s[0][2][32] }), .o_data({\s[0][2][31] , \s[0][2][30] , 
        \s[0][2][29] , \s[0][2][28] , \s[0][2][27] , \s[0][2][26] , 
        \s[0][2][25] , \s[0][2][24] , \s[0][2][23] , \s[0][2][22] , 
        \s[0][2][21] , \s[0][2][20] , \s[0][2][19] , \s[0][2][18] , 
        \s[0][2][17] , \s[0][2][16] , \s[0][2][15] , \s[0][2][14] , 
        \s[0][2][13] , \s[0][2][12] , \s[0][2][11] , \s[0][2][10] , 
        \s[0][2][9] , \s[0][2][8] , \s[0][2][7] , \s[0][2][6] , \s[0][2][5] , 
        \s[0][2][4] , \s[0][2][3] , \s[0][2][2] , \s[0][2][1] , \s[0][2][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X0_Y2 \ys[2].xs[0].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[0][2][36] ), .n_in_x({\n[0][2][35] , 
        \n[0][2][34] }), .n_in_y({\n[0][2][33] , \n[0][2][32] }), .n_in_data({
        \n[0][2][31] , \n[0][2][30] , \n[0][2][29] , \n[0][2][28] , 
        \n[0][2][27] , \n[0][2][26] , \n[0][2][25] , \n[0][2][24] , 
        \n[0][2][23] , \n[0][2][22] , \n[0][2][21] , \n[0][2][20] , 
        \n[0][2][19] , \n[0][2][18] , \n[0][2][17] , \n[0][2][16] , 
        \n[0][2][15] , \n[0][2][14] , \n[0][2][13] , \n[0][2][12] , 
        \n[0][2][11] , \n[0][2][10] , \n[0][2][9] , \n[0][2][8] , \n[0][2][7] , 
        \n[0][2][6] , \n[0][2][5] , \n[0][2][4] , \n[0][2][3] , \n[0][2][2] , 
        \n[0][2][1] , \n[0][2][0] }), .w_in_v(\w[0][2][36] ), .w_in_x({
        \w[0][2][35] , \w[0][2][34] }), .w_in_y({\w[0][2][33] , \w[0][2][32] }), .w_in_data({\w[0][2][31] , \w[0][2][30] , \w[0][2][29] , \w[0][2][28] , 
        \w[0][2][27] , \w[0][2][26] , \w[0][2][25] , \w[0][2][24] , 
        \w[0][2][23] , \w[0][2][22] , \w[0][2][21] , \w[0][2][20] , 
        \w[0][2][19] , \w[0][2][18] , \w[0][2][17] , \w[0][2][16] , 
        \w[0][2][15] , \w[0][2][14] , \w[0][2][13] , \w[0][2][12] , 
        \w[0][2][11] , \w[0][2][10] , \w[0][2][9] , \w[0][2][8] , \w[0][2][7] , 
        \w[0][2][6] , \w[0][2][5] , \w[0][2][4] , \w[0][2][3] , \w[0][2][2] , 
        \w[0][2][1] , \w[0][2][0] }), .i_v(\i[0][2][36] ), .i_x({\i[0][2][35] , 
        \i[0][2][34] }), .i_y({\i[0][2][33] , \i[0][2][32] }), .i_data({
        \i[0][2][31] , \i[0][2][30] , \i[0][2][29] , \i[0][2][28] , 
        \i[0][2][27] , \i[0][2][26] , \i[0][2][25] , \i[0][2][24] , 
        \i[0][2][23] , \i[0][2][22] , \i[0][2][21] , \i[0][2][20] , 
        \i[0][2][19] , \i[0][2][18] , \i[0][2][17] , \i[0][2][16] , 
        \i[0][2][15] , \i[0][2][14] , \i[0][2][13] , \i[0][2][12] , 
        \i[0][2][11] , \i[0][2][10] , \i[0][2][9] , \i[0][2][8] , \i[0][2][7] , 
        \i[0][2][6] , \i[0][2][5] , \i[0][2][4] , \i[0][2][3] , \i[0][2][2] , 
        \i[0][2][1] , \i[0][2][0] }), .e_b(\e_b[0][2] ), .w_b(\w_b[0][2] ), 
        .i_ack(\i_ack[0][2] ), .o_v(\o_v[0][2] ), .s_out_v(\s[0][2][36] ), 
        .s_out_x({\s[0][2][35] , \s[0][2][34] }), .s_out_y({\s[0][2][33] , 
        \s[0][2][32] }), .s_out_data({\s[0][2][31] , \s[0][2][30] , 
        \s[0][2][29] , \s[0][2][28] , \s[0][2][27] , \s[0][2][26] , 
        \s[0][2][25] , \s[0][2][24] , \s[0][2][23] , \s[0][2][22] , 
        \s[0][2][21] , \s[0][2][20] , \s[0][2][19] , \s[0][2][18] , 
        \s[0][2][17] , \s[0][2][16] , \s[0][2][15] , \s[0][2][14] , 
        \s[0][2][13] , \s[0][2][12] , \s[0][2][11] , \s[0][2][10] , 
        \s[0][2][9] , \s[0][2][8] , \s[0][2][7] , \s[0][2][6] , \s[0][2][5] , 
        \s[0][2][4] , \s[0][2][3] , \s[0][2][2] , \s[0][2][1] , \s[0][2][0] }), 
        .e_out_v(\e[0][2][36] ), .e_out_x({\e[0][2][35] , \e[0][2][34] }), 
        .e_out_y({\e[0][2][33] , \e[0][2][32] }), .e_out_data({\e[0][2][31] , 
        \e[0][2][30] , \e[0][2][29] , \e[0][2][28] , \e[0][2][27] , 
        \e[0][2][26] , \e[0][2][25] , \e[0][2][24] , \e[0][2][23] , 
        \e[0][2][22] , \e[0][2][21] , \e[0][2][20] , \e[0][2][19] , 
        \e[0][2][18] , \e[0][2][17] , \e[0][2][16] , \e[0][2][15] , 
        \e[0][2][14] , \e[0][2][13] , \e[0][2][12] , \e[0][2][11] , 
        \e[0][2][10] , \e[0][2][9] , \e[0][2][8] , \e[0][2][7] , \e[0][2][6] , 
        \e[0][2][5] , \e[0][2][4] , \e[0][2][3] , \e[0][2][2] , \e[0][2][1] , 
        \e[0][2][0] }) );
  low_swing_rx_600 \ys[2].xs[0].east_bp_rx  ( .i(\w_b_tx[1][2] ), .o(
        \e_b[0][2] ) );
  low_swing_tx_600 \ys[2].xs[0].west_bp_tx  ( .i(\w_b[0][2] ), .c(
        \w_b_tx[0][2] ) );
  low_swing_rx_599 \ys[2].xs[0].msg_txrx[0].north_rx  ( .i(\s_tx[0][1][0] ), 
        .o(\n[0][2][0] ) );
  low_swing_rx_598 \ys[2].xs[0].msg_txrx[0].west_rx  ( .i(\e_tx[3][2][0] ), 
        .o(\w[0][2][0] ) );
  low_swing_tx_599 \ys[2].xs[0].msg_txrx[0].south_tx  ( .i(\s[0][2][0] ), .c(
        \s_tx[0][2][0] ) );
  low_swing_tx_598 \ys[2].xs[0].msg_txrx[0].east_tx  ( .i(\e[0][2][0] ), .c(
        \e_tx[0][2][0] ) );
  low_swing_rx_597 \ys[2].xs[0].msg_txrx[1].north_rx  ( .i(\s_tx[0][1][1] ), 
        .o(\n[0][2][1] ) );
  low_swing_rx_596 \ys[2].xs[0].msg_txrx[1].west_rx  ( .i(\e_tx[3][2][1] ), 
        .o(\w[0][2][1] ) );
  low_swing_tx_597 \ys[2].xs[0].msg_txrx[1].south_tx  ( .i(\s[0][2][1] ), .c(
        \s_tx[0][2][1] ) );
  low_swing_tx_596 \ys[2].xs[0].msg_txrx[1].east_tx  ( .i(\e[0][2][1] ), .c(
        \e_tx[0][2][1] ) );
  low_swing_rx_595 \ys[2].xs[0].msg_txrx[2].north_rx  ( .i(\s_tx[0][1][2] ), 
        .o(\n[0][2][2] ) );
  low_swing_rx_594 \ys[2].xs[0].msg_txrx[2].west_rx  ( .i(\e_tx[3][2][2] ), 
        .o(\w[0][2][2] ) );
  low_swing_tx_595 \ys[2].xs[0].msg_txrx[2].south_tx  ( .i(\s[0][2][2] ), .c(
        \s_tx[0][2][2] ) );
  low_swing_tx_594 \ys[2].xs[0].msg_txrx[2].east_tx  ( .i(\e[0][2][2] ), .c(
        \e_tx[0][2][2] ) );
  low_swing_rx_593 \ys[2].xs[0].msg_txrx[3].north_rx  ( .i(\s_tx[0][1][3] ), 
        .o(\n[0][2][3] ) );
  low_swing_rx_592 \ys[2].xs[0].msg_txrx[3].west_rx  ( .i(\e_tx[3][2][3] ), 
        .o(\w[0][2][3] ) );
  low_swing_tx_593 \ys[2].xs[0].msg_txrx[3].south_tx  ( .i(\s[0][2][3] ), .c(
        \s_tx[0][2][3] ) );
  low_swing_tx_592 \ys[2].xs[0].msg_txrx[3].east_tx  ( .i(\e[0][2][3] ), .c(
        \e_tx[0][2][3] ) );
  low_swing_rx_591 \ys[2].xs[0].msg_txrx[4].north_rx  ( .i(\s_tx[0][1][4] ), 
        .o(\n[0][2][4] ) );
  low_swing_rx_590 \ys[2].xs[0].msg_txrx[4].west_rx  ( .i(\e_tx[3][2][4] ), 
        .o(\w[0][2][4] ) );
  low_swing_tx_591 \ys[2].xs[0].msg_txrx[4].south_tx  ( .i(\s[0][2][4] ), .c(
        \s_tx[0][2][4] ) );
  low_swing_tx_590 \ys[2].xs[0].msg_txrx[4].east_tx  ( .i(\e[0][2][4] ), .c(
        \e_tx[0][2][4] ) );
  low_swing_rx_589 \ys[2].xs[0].msg_txrx[5].north_rx  ( .i(\s_tx[0][1][5] ), 
        .o(\n[0][2][5] ) );
  low_swing_rx_588 \ys[2].xs[0].msg_txrx[5].west_rx  ( .i(\e_tx[3][2][5] ), 
        .o(\w[0][2][5] ) );
  low_swing_tx_589 \ys[2].xs[0].msg_txrx[5].south_tx  ( .i(\s[0][2][5] ), .c(
        \s_tx[0][2][5] ) );
  low_swing_tx_588 \ys[2].xs[0].msg_txrx[5].east_tx  ( .i(\e[0][2][5] ), .c(
        \e_tx[0][2][5] ) );
  low_swing_rx_587 \ys[2].xs[0].msg_txrx[6].north_rx  ( .i(\s_tx[0][1][6] ), 
        .o(\n[0][2][6] ) );
  low_swing_rx_586 \ys[2].xs[0].msg_txrx[6].west_rx  ( .i(\e_tx[3][2][6] ), 
        .o(\w[0][2][6] ) );
  low_swing_tx_587 \ys[2].xs[0].msg_txrx[6].south_tx  ( .i(\s[0][2][6] ), .c(
        \s_tx[0][2][6] ) );
  low_swing_tx_586 \ys[2].xs[0].msg_txrx[6].east_tx  ( .i(\e[0][2][6] ), .c(
        \e_tx[0][2][6] ) );
  low_swing_rx_585 \ys[2].xs[0].msg_txrx[7].north_rx  ( .i(\s_tx[0][1][7] ), 
        .o(\n[0][2][7] ) );
  low_swing_rx_584 \ys[2].xs[0].msg_txrx[7].west_rx  ( .i(\e_tx[3][2][7] ), 
        .o(\w[0][2][7] ) );
  low_swing_tx_585 \ys[2].xs[0].msg_txrx[7].south_tx  ( .i(\s[0][2][7] ), .c(
        \s_tx[0][2][7] ) );
  low_swing_tx_584 \ys[2].xs[0].msg_txrx[7].east_tx  ( .i(\e[0][2][7] ), .c(
        \e_tx[0][2][7] ) );
  low_swing_rx_583 \ys[2].xs[0].msg_txrx[8].north_rx  ( .i(\s_tx[0][1][8] ), 
        .o(\n[0][2][8] ) );
  low_swing_rx_582 \ys[2].xs[0].msg_txrx[8].west_rx  ( .i(\e_tx[3][2][8] ), 
        .o(\w[0][2][8] ) );
  low_swing_tx_583 \ys[2].xs[0].msg_txrx[8].south_tx  ( .i(\s[0][2][8] ), .c(
        \s_tx[0][2][8] ) );
  low_swing_tx_582 \ys[2].xs[0].msg_txrx[8].east_tx  ( .i(\e[0][2][8] ), .c(
        \e_tx[0][2][8] ) );
  low_swing_rx_581 \ys[2].xs[0].msg_txrx[9].north_rx  ( .i(\s_tx[0][1][9] ), 
        .o(\n[0][2][9] ) );
  low_swing_rx_580 \ys[2].xs[0].msg_txrx[9].west_rx  ( .i(\e_tx[3][2][9] ), 
        .o(\w[0][2][9] ) );
  low_swing_tx_581 \ys[2].xs[0].msg_txrx[9].south_tx  ( .i(\s[0][2][9] ), .c(
        \s_tx[0][2][9] ) );
  low_swing_tx_580 \ys[2].xs[0].msg_txrx[9].east_tx  ( .i(\e[0][2][9] ), .c(
        \e_tx[0][2][9] ) );
  low_swing_rx_579 \ys[2].xs[0].msg_txrx[10].north_rx  ( .i(\s_tx[0][1][10] ), 
        .o(\n[0][2][10] ) );
  low_swing_rx_578 \ys[2].xs[0].msg_txrx[10].west_rx  ( .i(\e_tx[3][2][10] ), 
        .o(\w[0][2][10] ) );
  low_swing_tx_579 \ys[2].xs[0].msg_txrx[10].south_tx  ( .i(\s[0][2][10] ), 
        .c(\s_tx[0][2][10] ) );
  low_swing_tx_578 \ys[2].xs[0].msg_txrx[10].east_tx  ( .i(\e[0][2][10] ), .c(
        \e_tx[0][2][10] ) );
  low_swing_rx_577 \ys[2].xs[0].msg_txrx[11].north_rx  ( .i(\s_tx[0][1][11] ), 
        .o(\n[0][2][11] ) );
  low_swing_rx_576 \ys[2].xs[0].msg_txrx[11].west_rx  ( .i(\e_tx[3][2][11] ), 
        .o(\w[0][2][11] ) );
  low_swing_tx_577 \ys[2].xs[0].msg_txrx[11].south_tx  ( .i(\s[0][2][11] ), 
        .c(\s_tx[0][2][11] ) );
  low_swing_tx_576 \ys[2].xs[0].msg_txrx[11].east_tx  ( .i(\e[0][2][11] ), .c(
        \e_tx[0][2][11] ) );
  low_swing_rx_575 \ys[2].xs[0].msg_txrx[12].north_rx  ( .i(\s_tx[0][1][12] ), 
        .o(\n[0][2][12] ) );
  low_swing_rx_574 \ys[2].xs[0].msg_txrx[12].west_rx  ( .i(\e_tx[3][2][12] ), 
        .o(\w[0][2][12] ) );
  low_swing_tx_575 \ys[2].xs[0].msg_txrx[12].south_tx  ( .i(\s[0][2][12] ), 
        .c(\s_tx[0][2][12] ) );
  low_swing_tx_574 \ys[2].xs[0].msg_txrx[12].east_tx  ( .i(\e[0][2][12] ), .c(
        \e_tx[0][2][12] ) );
  low_swing_rx_573 \ys[2].xs[0].msg_txrx[13].north_rx  ( .i(\s_tx[0][1][13] ), 
        .o(\n[0][2][13] ) );
  low_swing_rx_572 \ys[2].xs[0].msg_txrx[13].west_rx  ( .i(\e_tx[3][2][13] ), 
        .o(\w[0][2][13] ) );
  low_swing_tx_573 \ys[2].xs[0].msg_txrx[13].south_tx  ( .i(\s[0][2][13] ), 
        .c(\s_tx[0][2][13] ) );
  low_swing_tx_572 \ys[2].xs[0].msg_txrx[13].east_tx  ( .i(\e[0][2][13] ), .c(
        \e_tx[0][2][13] ) );
  low_swing_rx_571 \ys[2].xs[0].msg_txrx[14].north_rx  ( .i(\s_tx[0][1][14] ), 
        .o(\n[0][2][14] ) );
  low_swing_rx_570 \ys[2].xs[0].msg_txrx[14].west_rx  ( .i(\e_tx[3][2][14] ), 
        .o(\w[0][2][14] ) );
  low_swing_tx_571 \ys[2].xs[0].msg_txrx[14].south_tx  ( .i(\s[0][2][14] ), 
        .c(\s_tx[0][2][14] ) );
  low_swing_tx_570 \ys[2].xs[0].msg_txrx[14].east_tx  ( .i(\e[0][2][14] ), .c(
        \e_tx[0][2][14] ) );
  low_swing_rx_569 \ys[2].xs[0].msg_txrx[15].north_rx  ( .i(\s_tx[0][1][15] ), 
        .o(\n[0][2][15] ) );
  low_swing_rx_568 \ys[2].xs[0].msg_txrx[15].west_rx  ( .i(\e_tx[3][2][15] ), 
        .o(\w[0][2][15] ) );
  low_swing_tx_569 \ys[2].xs[0].msg_txrx[15].south_tx  ( .i(\s[0][2][15] ), 
        .c(\s_tx[0][2][15] ) );
  low_swing_tx_568 \ys[2].xs[0].msg_txrx[15].east_tx  ( .i(\e[0][2][15] ), .c(
        \e_tx[0][2][15] ) );
  low_swing_rx_567 \ys[2].xs[0].msg_txrx[16].north_rx  ( .i(\s_tx[0][1][16] ), 
        .o(\n[0][2][16] ) );
  low_swing_rx_566 \ys[2].xs[0].msg_txrx[16].west_rx  ( .i(\e_tx[3][2][16] ), 
        .o(\w[0][2][16] ) );
  low_swing_tx_567 \ys[2].xs[0].msg_txrx[16].south_tx  ( .i(\s[0][2][16] ), 
        .c(\s_tx[0][2][16] ) );
  low_swing_tx_566 \ys[2].xs[0].msg_txrx[16].east_tx  ( .i(\e[0][2][16] ), .c(
        \e_tx[0][2][16] ) );
  low_swing_rx_565 \ys[2].xs[0].msg_txrx[17].north_rx  ( .i(\s_tx[0][1][17] ), 
        .o(\n[0][2][17] ) );
  low_swing_rx_564 \ys[2].xs[0].msg_txrx[17].west_rx  ( .i(\e_tx[3][2][17] ), 
        .o(\w[0][2][17] ) );
  low_swing_tx_565 \ys[2].xs[0].msg_txrx[17].south_tx  ( .i(\s[0][2][17] ), 
        .c(\s_tx[0][2][17] ) );
  low_swing_tx_564 \ys[2].xs[0].msg_txrx[17].east_tx  ( .i(\e[0][2][17] ), .c(
        \e_tx[0][2][17] ) );
  low_swing_rx_563 \ys[2].xs[0].msg_txrx[18].north_rx  ( .i(\s_tx[0][1][18] ), 
        .o(\n[0][2][18] ) );
  low_swing_rx_562 \ys[2].xs[0].msg_txrx[18].west_rx  ( .i(\e_tx[3][2][18] ), 
        .o(\w[0][2][18] ) );
  low_swing_tx_563 \ys[2].xs[0].msg_txrx[18].south_tx  ( .i(\s[0][2][18] ), 
        .c(\s_tx[0][2][18] ) );
  low_swing_tx_562 \ys[2].xs[0].msg_txrx[18].east_tx  ( .i(\e[0][2][18] ), .c(
        \e_tx[0][2][18] ) );
  low_swing_rx_561 \ys[2].xs[0].msg_txrx[19].north_rx  ( .i(\s_tx[0][1][19] ), 
        .o(\n[0][2][19] ) );
  low_swing_rx_560 \ys[2].xs[0].msg_txrx[19].west_rx  ( .i(\e_tx[3][2][19] ), 
        .o(\w[0][2][19] ) );
  low_swing_tx_561 \ys[2].xs[0].msg_txrx[19].south_tx  ( .i(\s[0][2][19] ), 
        .c(\s_tx[0][2][19] ) );
  low_swing_tx_560 \ys[2].xs[0].msg_txrx[19].east_tx  ( .i(\e[0][2][19] ), .c(
        \e_tx[0][2][19] ) );
  low_swing_rx_559 \ys[2].xs[0].msg_txrx[20].north_rx  ( .i(\s_tx[0][1][20] ), 
        .o(\n[0][2][20] ) );
  low_swing_rx_558 \ys[2].xs[0].msg_txrx[20].west_rx  ( .i(\e_tx[3][2][20] ), 
        .o(\w[0][2][20] ) );
  low_swing_tx_559 \ys[2].xs[0].msg_txrx[20].south_tx  ( .i(\s[0][2][20] ), 
        .c(\s_tx[0][2][20] ) );
  low_swing_tx_558 \ys[2].xs[0].msg_txrx[20].east_tx  ( .i(\e[0][2][20] ), .c(
        \e_tx[0][2][20] ) );
  low_swing_rx_557 \ys[2].xs[0].msg_txrx[21].north_rx  ( .i(\s_tx[0][1][21] ), 
        .o(\n[0][2][21] ) );
  low_swing_rx_556 \ys[2].xs[0].msg_txrx[21].west_rx  ( .i(\e_tx[3][2][21] ), 
        .o(\w[0][2][21] ) );
  low_swing_tx_557 \ys[2].xs[0].msg_txrx[21].south_tx  ( .i(\s[0][2][21] ), 
        .c(\s_tx[0][2][21] ) );
  low_swing_tx_556 \ys[2].xs[0].msg_txrx[21].east_tx  ( .i(\e[0][2][21] ), .c(
        \e_tx[0][2][21] ) );
  low_swing_rx_555 \ys[2].xs[0].msg_txrx[22].north_rx  ( .i(\s_tx[0][1][22] ), 
        .o(\n[0][2][22] ) );
  low_swing_rx_554 \ys[2].xs[0].msg_txrx[22].west_rx  ( .i(\e_tx[3][2][22] ), 
        .o(\w[0][2][22] ) );
  low_swing_tx_555 \ys[2].xs[0].msg_txrx[22].south_tx  ( .i(\s[0][2][22] ), 
        .c(\s_tx[0][2][22] ) );
  low_swing_tx_554 \ys[2].xs[0].msg_txrx[22].east_tx  ( .i(\e[0][2][22] ), .c(
        \e_tx[0][2][22] ) );
  low_swing_rx_553 \ys[2].xs[0].msg_txrx[23].north_rx  ( .i(\s_tx[0][1][23] ), 
        .o(\n[0][2][23] ) );
  low_swing_rx_552 \ys[2].xs[0].msg_txrx[23].west_rx  ( .i(\e_tx[3][2][23] ), 
        .o(\w[0][2][23] ) );
  low_swing_tx_553 \ys[2].xs[0].msg_txrx[23].south_tx  ( .i(\s[0][2][23] ), 
        .c(\s_tx[0][2][23] ) );
  low_swing_tx_552 \ys[2].xs[0].msg_txrx[23].east_tx  ( .i(\e[0][2][23] ), .c(
        \e_tx[0][2][23] ) );
  low_swing_rx_551 \ys[2].xs[0].msg_txrx[24].north_rx  ( .i(\s_tx[0][1][24] ), 
        .o(\n[0][2][24] ) );
  low_swing_rx_550 \ys[2].xs[0].msg_txrx[24].west_rx  ( .i(\e_tx[3][2][24] ), 
        .o(\w[0][2][24] ) );
  low_swing_tx_551 \ys[2].xs[0].msg_txrx[24].south_tx  ( .i(\s[0][2][24] ), 
        .c(\s_tx[0][2][24] ) );
  low_swing_tx_550 \ys[2].xs[0].msg_txrx[24].east_tx  ( .i(\e[0][2][24] ), .c(
        \e_tx[0][2][24] ) );
  low_swing_rx_549 \ys[2].xs[0].msg_txrx[25].north_rx  ( .i(\s_tx[0][1][25] ), 
        .o(\n[0][2][25] ) );
  low_swing_rx_548 \ys[2].xs[0].msg_txrx[25].west_rx  ( .i(\e_tx[3][2][25] ), 
        .o(\w[0][2][25] ) );
  low_swing_tx_549 \ys[2].xs[0].msg_txrx[25].south_tx  ( .i(\s[0][2][25] ), 
        .c(\s_tx[0][2][25] ) );
  low_swing_tx_548 \ys[2].xs[0].msg_txrx[25].east_tx  ( .i(\e[0][2][25] ), .c(
        \e_tx[0][2][25] ) );
  low_swing_rx_547 \ys[2].xs[0].msg_txrx[26].north_rx  ( .i(\s_tx[0][1][26] ), 
        .o(\n[0][2][26] ) );
  low_swing_rx_546 \ys[2].xs[0].msg_txrx[26].west_rx  ( .i(\e_tx[3][2][26] ), 
        .o(\w[0][2][26] ) );
  low_swing_tx_547 \ys[2].xs[0].msg_txrx[26].south_tx  ( .i(\s[0][2][26] ), 
        .c(\s_tx[0][2][26] ) );
  low_swing_tx_546 \ys[2].xs[0].msg_txrx[26].east_tx  ( .i(\e[0][2][26] ), .c(
        \e_tx[0][2][26] ) );
  low_swing_rx_545 \ys[2].xs[0].msg_txrx[27].north_rx  ( .i(\s_tx[0][1][27] ), 
        .o(\n[0][2][27] ) );
  low_swing_rx_544 \ys[2].xs[0].msg_txrx[27].west_rx  ( .i(\e_tx[3][2][27] ), 
        .o(\w[0][2][27] ) );
  low_swing_tx_545 \ys[2].xs[0].msg_txrx[27].south_tx  ( .i(\s[0][2][27] ), 
        .c(\s_tx[0][2][27] ) );
  low_swing_tx_544 \ys[2].xs[0].msg_txrx[27].east_tx  ( .i(\e[0][2][27] ), .c(
        \e_tx[0][2][27] ) );
  low_swing_rx_543 \ys[2].xs[0].msg_txrx[28].north_rx  ( .i(\s_tx[0][1][28] ), 
        .o(\n[0][2][28] ) );
  low_swing_rx_542 \ys[2].xs[0].msg_txrx[28].west_rx  ( .i(\e_tx[3][2][28] ), 
        .o(\w[0][2][28] ) );
  low_swing_tx_543 \ys[2].xs[0].msg_txrx[28].south_tx  ( .i(\s[0][2][28] ), 
        .c(\s_tx[0][2][28] ) );
  low_swing_tx_542 \ys[2].xs[0].msg_txrx[28].east_tx  ( .i(\e[0][2][28] ), .c(
        \e_tx[0][2][28] ) );
  low_swing_rx_541 \ys[2].xs[0].msg_txrx[29].north_rx  ( .i(\s_tx[0][1][29] ), 
        .o(\n[0][2][29] ) );
  low_swing_rx_540 \ys[2].xs[0].msg_txrx[29].west_rx  ( .i(\e_tx[3][2][29] ), 
        .o(\w[0][2][29] ) );
  low_swing_tx_541 \ys[2].xs[0].msg_txrx[29].south_tx  ( .i(\s[0][2][29] ), 
        .c(\s_tx[0][2][29] ) );
  low_swing_tx_540 \ys[2].xs[0].msg_txrx[29].east_tx  ( .i(\e[0][2][29] ), .c(
        \e_tx[0][2][29] ) );
  low_swing_rx_539 \ys[2].xs[0].msg_txrx[30].north_rx  ( .i(\s_tx[0][1][30] ), 
        .o(\n[0][2][30] ) );
  low_swing_rx_538 \ys[2].xs[0].msg_txrx[30].west_rx  ( .i(\e_tx[3][2][30] ), 
        .o(\w[0][2][30] ) );
  low_swing_tx_539 \ys[2].xs[0].msg_txrx[30].south_tx  ( .i(\s[0][2][30] ), 
        .c(\s_tx[0][2][30] ) );
  low_swing_tx_538 \ys[2].xs[0].msg_txrx[30].east_tx  ( .i(\e[0][2][30] ), .c(
        \e_tx[0][2][30] ) );
  low_swing_rx_537 \ys[2].xs[0].msg_txrx[31].north_rx  ( .i(\s_tx[0][1][31] ), 
        .o(\n[0][2][31] ) );
  low_swing_rx_536 \ys[2].xs[0].msg_txrx[31].west_rx  ( .i(\e_tx[3][2][31] ), 
        .o(\w[0][2][31] ) );
  low_swing_tx_537 \ys[2].xs[0].msg_txrx[31].south_tx  ( .i(\s[0][2][31] ), 
        .c(\s_tx[0][2][31] ) );
  low_swing_tx_536 \ys[2].xs[0].msg_txrx[31].east_tx  ( .i(\e[0][2][31] ), .c(
        \e_tx[0][2][31] ) );
  low_swing_rx_535 \ys[2].xs[0].msg_txrx[32].north_rx  ( .i(\s_tx[0][1][32] ), 
        .o(\n[0][2][32] ) );
  low_swing_rx_534 \ys[2].xs[0].msg_txrx[32].west_rx  ( .i(\e_tx[3][2][32] ), 
        .o(\w[0][2][32] ) );
  low_swing_tx_535 \ys[2].xs[0].msg_txrx[32].south_tx  ( .i(\s[0][2][32] ), 
        .c(\s_tx[0][2][32] ) );
  low_swing_tx_534 \ys[2].xs[0].msg_txrx[32].east_tx  ( .i(\e[0][2][32] ), .c(
        \e_tx[0][2][32] ) );
  low_swing_rx_533 \ys[2].xs[0].msg_txrx[33].north_rx  ( .i(\s_tx[0][1][33] ), 
        .o(\n[0][2][33] ) );
  low_swing_rx_532 \ys[2].xs[0].msg_txrx[33].west_rx  ( .i(\e_tx[3][2][33] ), 
        .o(\w[0][2][33] ) );
  low_swing_tx_533 \ys[2].xs[0].msg_txrx[33].south_tx  ( .i(\s[0][2][33] ), 
        .c(\s_tx[0][2][33] ) );
  low_swing_tx_532 \ys[2].xs[0].msg_txrx[33].east_tx  ( .i(\e[0][2][33] ), .c(
        \e_tx[0][2][33] ) );
  low_swing_rx_531 \ys[2].xs[0].msg_txrx[34].north_rx  ( .i(\s_tx[0][1][34] ), 
        .o(\n[0][2][34] ) );
  low_swing_rx_530 \ys[2].xs[0].msg_txrx[34].west_rx  ( .i(\e_tx[3][2][34] ), 
        .o(\w[0][2][34] ) );
  low_swing_tx_531 \ys[2].xs[0].msg_txrx[34].south_tx  ( .i(\s[0][2][34] ), 
        .c(\s_tx[0][2][34] ) );
  low_swing_tx_530 \ys[2].xs[0].msg_txrx[34].east_tx  ( .i(\e[0][2][34] ), .c(
        \e_tx[0][2][34] ) );
  low_swing_rx_529 \ys[2].xs[0].msg_txrx[35].north_rx  ( .i(\s_tx[0][1][35] ), 
        .o(\n[0][2][35] ) );
  low_swing_rx_528 \ys[2].xs[0].msg_txrx[35].west_rx  ( .i(\e_tx[3][2][35] ), 
        .o(\w[0][2][35] ) );
  low_swing_tx_529 \ys[2].xs[0].msg_txrx[35].south_tx  ( .i(\s[0][2][35] ), 
        .c(\s_tx[0][2][35] ) );
  low_swing_tx_528 \ys[2].xs[0].msg_txrx[35].east_tx  ( .i(\e[0][2][35] ), .c(
        \e_tx[0][2][35] ) );
  low_swing_rx_527 \ys[2].xs[0].msg_txrx[36].north_rx  ( .i(\s_tx[0][1][36] ), 
        .o(\n[0][2][36] ) );
  low_swing_rx_526 \ys[2].xs[0].msg_txrx[36].west_rx  ( .i(\e_tx[3][2][36] ), 
        .o(\w[0][2][36] ) );
  low_swing_tx_527 \ys[2].xs[0].msg_txrx[36].south_tx  ( .i(\s[0][2][36] ), 
        .c(\s_tx[0][2][36] ) );
  low_swing_tx_526 \ys[2].xs[0].msg_txrx[36].east_tx  ( .i(\e[0][2][36] ), .c(
        \e_tx[0][2][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X1_Y2_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[2].xs[1].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[1][2] ), .i_v(\i[1][2][36] ), 
        .i_x({\i[1][2][35] , \i[1][2][34] }), .i_y({\i[1][2][33] , 
        \i[1][2][32] }), .i_data({\i[1][2][31] , \i[1][2][30] , \i[1][2][29] , 
        \i[1][2][28] , \i[1][2][27] , \i[1][2][26] , \i[1][2][25] , 
        \i[1][2][24] , \i[1][2][23] , \i[1][2][22] , \i[1][2][21] , 
        \i[1][2][20] , \i[1][2][19] , \i[1][2][18] , \i[1][2][17] , 
        \i[1][2][16] , \i[1][2][15] , \i[1][2][14] , \i[1][2][13] , 
        \i[1][2][12] , \i[1][2][11] , \i[1][2][10] , \i[1][2][9] , 
        \i[1][2][8] , \i[1][2][7] , \i[1][2][6] , \i[1][2][5] , \i[1][2][4] , 
        \i[1][2][3] , \i[1][2][2] , \i[1][2][1] , \i[1][2][0] }), .o_v(
        \o_v[1][2] ), .o_x({\s[1][2][35] , \s[1][2][34] }), .o_y({
        \s[1][2][33] , \s[1][2][32] }), .o_data({\s[1][2][31] , \s[1][2][30] , 
        \s[1][2][29] , \s[1][2][28] , \s[1][2][27] , \s[1][2][26] , 
        \s[1][2][25] , \s[1][2][24] , \s[1][2][23] , \s[1][2][22] , 
        \s[1][2][21] , \s[1][2][20] , \s[1][2][19] , \s[1][2][18] , 
        \s[1][2][17] , \s[1][2][16] , \s[1][2][15] , \s[1][2][14] , 
        \s[1][2][13] , \s[1][2][12] , \s[1][2][11] , \s[1][2][10] , 
        \s[1][2][9] , \s[1][2][8] , \s[1][2][7] , \s[1][2][6] , \s[1][2][5] , 
        \s[1][2][4] , \s[1][2][3] , \s[1][2][2] , \s[1][2][1] , \s[1][2][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X1_Y2 \ys[2].xs[1].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[1][2][36] ), .n_in_x({\n[1][2][35] , 
        \n[1][2][34] }), .n_in_y({\n[1][2][33] , \n[1][2][32] }), .n_in_data({
        \n[1][2][31] , \n[1][2][30] , \n[1][2][29] , \n[1][2][28] , 
        \n[1][2][27] , \n[1][2][26] , \n[1][2][25] , \n[1][2][24] , 
        \n[1][2][23] , \n[1][2][22] , \n[1][2][21] , \n[1][2][20] , 
        \n[1][2][19] , \n[1][2][18] , \n[1][2][17] , \n[1][2][16] , 
        \n[1][2][15] , \n[1][2][14] , \n[1][2][13] , \n[1][2][12] , 
        \n[1][2][11] , \n[1][2][10] , \n[1][2][9] , \n[1][2][8] , \n[1][2][7] , 
        \n[1][2][6] , \n[1][2][5] , \n[1][2][4] , \n[1][2][3] , \n[1][2][2] , 
        \n[1][2][1] , \n[1][2][0] }), .w_in_v(\w[1][2][36] ), .w_in_x({
        \w[1][2][35] , \w[1][2][34] }), .w_in_y({\w[1][2][33] , \w[1][2][32] }), .w_in_data({\w[1][2][31] , \w[1][2][30] , \w[1][2][29] , \w[1][2][28] , 
        \w[1][2][27] , \w[1][2][26] , \w[1][2][25] , \w[1][2][24] , 
        \w[1][2][23] , \w[1][2][22] , \w[1][2][21] , \w[1][2][20] , 
        \w[1][2][19] , \w[1][2][18] , \w[1][2][17] , \w[1][2][16] , 
        \w[1][2][15] , \w[1][2][14] , \w[1][2][13] , \w[1][2][12] , 
        \w[1][2][11] , \w[1][2][10] , \w[1][2][9] , \w[1][2][8] , \w[1][2][7] , 
        \w[1][2][6] , \w[1][2][5] , \w[1][2][4] , \w[1][2][3] , \w[1][2][2] , 
        \w[1][2][1] , \w[1][2][0] }), .i_v(\i[1][2][36] ), .i_x({\i[1][2][35] , 
        \i[1][2][34] }), .i_y({\i[1][2][33] , \i[1][2][32] }), .i_data({
        \i[1][2][31] , \i[1][2][30] , \i[1][2][29] , \i[1][2][28] , 
        \i[1][2][27] , \i[1][2][26] , \i[1][2][25] , \i[1][2][24] , 
        \i[1][2][23] , \i[1][2][22] , \i[1][2][21] , \i[1][2][20] , 
        \i[1][2][19] , \i[1][2][18] , \i[1][2][17] , \i[1][2][16] , 
        \i[1][2][15] , \i[1][2][14] , \i[1][2][13] , \i[1][2][12] , 
        \i[1][2][11] , \i[1][2][10] , \i[1][2][9] , \i[1][2][8] , \i[1][2][7] , 
        \i[1][2][6] , \i[1][2][5] , \i[1][2][4] , \i[1][2][3] , \i[1][2][2] , 
        \i[1][2][1] , \i[1][2][0] }), .e_b(\e_b[1][2] ), .w_b(\w_b[1][2] ), 
        .i_ack(\i_ack[1][2] ), .o_v(\o_v[1][2] ), .s_out_v(\s[1][2][36] ), 
        .s_out_x({\s[1][2][35] , \s[1][2][34] }), .s_out_y({\s[1][2][33] , 
        \s[1][2][32] }), .s_out_data({\s[1][2][31] , \s[1][2][30] , 
        \s[1][2][29] , \s[1][2][28] , \s[1][2][27] , \s[1][2][26] , 
        \s[1][2][25] , \s[1][2][24] , \s[1][2][23] , \s[1][2][22] , 
        \s[1][2][21] , \s[1][2][20] , \s[1][2][19] , \s[1][2][18] , 
        \s[1][2][17] , \s[1][2][16] , \s[1][2][15] , \s[1][2][14] , 
        \s[1][2][13] , \s[1][2][12] , \s[1][2][11] , \s[1][2][10] , 
        \s[1][2][9] , \s[1][2][8] , \s[1][2][7] , \s[1][2][6] , \s[1][2][5] , 
        \s[1][2][4] , \s[1][2][3] , \s[1][2][2] , \s[1][2][1] , \s[1][2][0] }), 
        .e_out_v(\e[1][2][36] ), .e_out_x({\e[1][2][35] , \e[1][2][34] }), 
        .e_out_y({\e[1][2][33] , \e[1][2][32] }), .e_out_data({\e[1][2][31] , 
        \e[1][2][30] , \e[1][2][29] , \e[1][2][28] , \e[1][2][27] , 
        \e[1][2][26] , \e[1][2][25] , \e[1][2][24] , \e[1][2][23] , 
        \e[1][2][22] , \e[1][2][21] , \e[1][2][20] , \e[1][2][19] , 
        \e[1][2][18] , \e[1][2][17] , \e[1][2][16] , \e[1][2][15] , 
        \e[1][2][14] , \e[1][2][13] , \e[1][2][12] , \e[1][2][11] , 
        \e[1][2][10] , \e[1][2][9] , \e[1][2][8] , \e[1][2][7] , \e[1][2][6] , 
        \e[1][2][5] , \e[1][2][4] , \e[1][2][3] , \e[1][2][2] , \e[1][2][1] , 
        \e[1][2][0] }) );
  low_swing_rx_525 \ys[2].xs[1].east_bp_rx  ( .i(\w_b_tx[2][2] ), .o(
        \e_b[1][2] ) );
  low_swing_tx_525 \ys[2].xs[1].west_bp_tx  ( .i(\w_b[1][2] ), .c(
        \w_b_tx[1][2] ) );
  low_swing_rx_524 \ys[2].xs[1].msg_txrx[0].north_rx  ( .i(\s_tx[1][1][0] ), 
        .o(\n[1][2][0] ) );
  low_swing_rx_523 \ys[2].xs[1].msg_txrx[0].west_rx  ( .i(\e_tx[0][2][0] ), 
        .o(\w[1][2][0] ) );
  low_swing_tx_524 \ys[2].xs[1].msg_txrx[0].south_tx  ( .i(\s[1][2][0] ), .c(
        \s_tx[1][2][0] ) );
  low_swing_tx_523 \ys[2].xs[1].msg_txrx[0].east_tx  ( .i(\e[1][2][0] ), .c(
        \e_tx[1][2][0] ) );
  low_swing_rx_522 \ys[2].xs[1].msg_txrx[1].north_rx  ( .i(\s_tx[1][1][1] ), 
        .o(\n[1][2][1] ) );
  low_swing_rx_521 \ys[2].xs[1].msg_txrx[1].west_rx  ( .i(\e_tx[0][2][1] ), 
        .o(\w[1][2][1] ) );
  low_swing_tx_522 \ys[2].xs[1].msg_txrx[1].south_tx  ( .i(\s[1][2][1] ), .c(
        \s_tx[1][2][1] ) );
  low_swing_tx_521 \ys[2].xs[1].msg_txrx[1].east_tx  ( .i(\e[1][2][1] ), .c(
        \e_tx[1][2][1] ) );
  low_swing_rx_520 \ys[2].xs[1].msg_txrx[2].north_rx  ( .i(\s_tx[1][1][2] ), 
        .o(\n[1][2][2] ) );
  low_swing_rx_519 \ys[2].xs[1].msg_txrx[2].west_rx  ( .i(\e_tx[0][2][2] ), 
        .o(\w[1][2][2] ) );
  low_swing_tx_520 \ys[2].xs[1].msg_txrx[2].south_tx  ( .i(\s[1][2][2] ), .c(
        \s_tx[1][2][2] ) );
  low_swing_tx_519 \ys[2].xs[1].msg_txrx[2].east_tx  ( .i(\e[1][2][2] ), .c(
        \e_tx[1][2][2] ) );
  low_swing_rx_518 \ys[2].xs[1].msg_txrx[3].north_rx  ( .i(\s_tx[1][1][3] ), 
        .o(\n[1][2][3] ) );
  low_swing_rx_517 \ys[2].xs[1].msg_txrx[3].west_rx  ( .i(\e_tx[0][2][3] ), 
        .o(\w[1][2][3] ) );
  low_swing_tx_518 \ys[2].xs[1].msg_txrx[3].south_tx  ( .i(\s[1][2][3] ), .c(
        \s_tx[1][2][3] ) );
  low_swing_tx_517 \ys[2].xs[1].msg_txrx[3].east_tx  ( .i(\e[1][2][3] ), .c(
        \e_tx[1][2][3] ) );
  low_swing_rx_516 \ys[2].xs[1].msg_txrx[4].north_rx  ( .i(\s_tx[1][1][4] ), 
        .o(\n[1][2][4] ) );
  low_swing_rx_515 \ys[2].xs[1].msg_txrx[4].west_rx  ( .i(\e_tx[0][2][4] ), 
        .o(\w[1][2][4] ) );
  low_swing_tx_516 \ys[2].xs[1].msg_txrx[4].south_tx  ( .i(\s[1][2][4] ), .c(
        \s_tx[1][2][4] ) );
  low_swing_tx_515 \ys[2].xs[1].msg_txrx[4].east_tx  ( .i(\e[1][2][4] ), .c(
        \e_tx[1][2][4] ) );
  low_swing_rx_514 \ys[2].xs[1].msg_txrx[5].north_rx  ( .i(\s_tx[1][1][5] ), 
        .o(\n[1][2][5] ) );
  low_swing_rx_513 \ys[2].xs[1].msg_txrx[5].west_rx  ( .i(\e_tx[0][2][5] ), 
        .o(\w[1][2][5] ) );
  low_swing_tx_514 \ys[2].xs[1].msg_txrx[5].south_tx  ( .i(\s[1][2][5] ), .c(
        \s_tx[1][2][5] ) );
  low_swing_tx_513 \ys[2].xs[1].msg_txrx[5].east_tx  ( .i(\e[1][2][5] ), .c(
        \e_tx[1][2][5] ) );
  low_swing_rx_512 \ys[2].xs[1].msg_txrx[6].north_rx  ( .i(\s_tx[1][1][6] ), 
        .o(\n[1][2][6] ) );
  low_swing_rx_511 \ys[2].xs[1].msg_txrx[6].west_rx  ( .i(\e_tx[0][2][6] ), 
        .o(\w[1][2][6] ) );
  low_swing_tx_512 \ys[2].xs[1].msg_txrx[6].south_tx  ( .i(\s[1][2][6] ), .c(
        \s_tx[1][2][6] ) );
  low_swing_tx_511 \ys[2].xs[1].msg_txrx[6].east_tx  ( .i(\e[1][2][6] ), .c(
        \e_tx[1][2][6] ) );
  low_swing_rx_510 \ys[2].xs[1].msg_txrx[7].north_rx  ( .i(\s_tx[1][1][7] ), 
        .o(\n[1][2][7] ) );
  low_swing_rx_509 \ys[2].xs[1].msg_txrx[7].west_rx  ( .i(\e_tx[0][2][7] ), 
        .o(\w[1][2][7] ) );
  low_swing_tx_510 \ys[2].xs[1].msg_txrx[7].south_tx  ( .i(\s[1][2][7] ), .c(
        \s_tx[1][2][7] ) );
  low_swing_tx_509 \ys[2].xs[1].msg_txrx[7].east_tx  ( .i(\e[1][2][7] ), .c(
        \e_tx[1][2][7] ) );
  low_swing_rx_508 \ys[2].xs[1].msg_txrx[8].north_rx  ( .i(\s_tx[1][1][8] ), 
        .o(\n[1][2][8] ) );
  low_swing_rx_507 \ys[2].xs[1].msg_txrx[8].west_rx  ( .i(\e_tx[0][2][8] ), 
        .o(\w[1][2][8] ) );
  low_swing_tx_508 \ys[2].xs[1].msg_txrx[8].south_tx  ( .i(\s[1][2][8] ), .c(
        \s_tx[1][2][8] ) );
  low_swing_tx_507 \ys[2].xs[1].msg_txrx[8].east_tx  ( .i(\e[1][2][8] ), .c(
        \e_tx[1][2][8] ) );
  low_swing_rx_506 \ys[2].xs[1].msg_txrx[9].north_rx  ( .i(\s_tx[1][1][9] ), 
        .o(\n[1][2][9] ) );
  low_swing_rx_505 \ys[2].xs[1].msg_txrx[9].west_rx  ( .i(\e_tx[0][2][9] ), 
        .o(\w[1][2][9] ) );
  low_swing_tx_506 \ys[2].xs[1].msg_txrx[9].south_tx  ( .i(\s[1][2][9] ), .c(
        \s_tx[1][2][9] ) );
  low_swing_tx_505 \ys[2].xs[1].msg_txrx[9].east_tx  ( .i(\e[1][2][9] ), .c(
        \e_tx[1][2][9] ) );
  low_swing_rx_504 \ys[2].xs[1].msg_txrx[10].north_rx  ( .i(\s_tx[1][1][10] ), 
        .o(\n[1][2][10] ) );
  low_swing_rx_503 \ys[2].xs[1].msg_txrx[10].west_rx  ( .i(\e_tx[0][2][10] ), 
        .o(\w[1][2][10] ) );
  low_swing_tx_504 \ys[2].xs[1].msg_txrx[10].south_tx  ( .i(\s[1][2][10] ), 
        .c(\s_tx[1][2][10] ) );
  low_swing_tx_503 \ys[2].xs[1].msg_txrx[10].east_tx  ( .i(\e[1][2][10] ), .c(
        \e_tx[1][2][10] ) );
  low_swing_rx_502 \ys[2].xs[1].msg_txrx[11].north_rx  ( .i(\s_tx[1][1][11] ), 
        .o(\n[1][2][11] ) );
  low_swing_rx_501 \ys[2].xs[1].msg_txrx[11].west_rx  ( .i(\e_tx[0][2][11] ), 
        .o(\w[1][2][11] ) );
  low_swing_tx_502 \ys[2].xs[1].msg_txrx[11].south_tx  ( .i(\s[1][2][11] ), 
        .c(\s_tx[1][2][11] ) );
  low_swing_tx_501 \ys[2].xs[1].msg_txrx[11].east_tx  ( .i(\e[1][2][11] ), .c(
        \e_tx[1][2][11] ) );
  low_swing_rx_500 \ys[2].xs[1].msg_txrx[12].north_rx  ( .i(\s_tx[1][1][12] ), 
        .o(\n[1][2][12] ) );
  low_swing_rx_499 \ys[2].xs[1].msg_txrx[12].west_rx  ( .i(\e_tx[0][2][12] ), 
        .o(\w[1][2][12] ) );
  low_swing_tx_500 \ys[2].xs[1].msg_txrx[12].south_tx  ( .i(\s[1][2][12] ), 
        .c(\s_tx[1][2][12] ) );
  low_swing_tx_499 \ys[2].xs[1].msg_txrx[12].east_tx  ( .i(\e[1][2][12] ), .c(
        \e_tx[1][2][12] ) );
  low_swing_rx_498 \ys[2].xs[1].msg_txrx[13].north_rx  ( .i(\s_tx[1][1][13] ), 
        .o(\n[1][2][13] ) );
  low_swing_rx_497 \ys[2].xs[1].msg_txrx[13].west_rx  ( .i(\e_tx[0][2][13] ), 
        .o(\w[1][2][13] ) );
  low_swing_tx_498 \ys[2].xs[1].msg_txrx[13].south_tx  ( .i(\s[1][2][13] ), 
        .c(\s_tx[1][2][13] ) );
  low_swing_tx_497 \ys[2].xs[1].msg_txrx[13].east_tx  ( .i(\e[1][2][13] ), .c(
        \e_tx[1][2][13] ) );
  low_swing_rx_496 \ys[2].xs[1].msg_txrx[14].north_rx  ( .i(\s_tx[1][1][14] ), 
        .o(\n[1][2][14] ) );
  low_swing_rx_495 \ys[2].xs[1].msg_txrx[14].west_rx  ( .i(\e_tx[0][2][14] ), 
        .o(\w[1][2][14] ) );
  low_swing_tx_496 \ys[2].xs[1].msg_txrx[14].south_tx  ( .i(\s[1][2][14] ), 
        .c(\s_tx[1][2][14] ) );
  low_swing_tx_495 \ys[2].xs[1].msg_txrx[14].east_tx  ( .i(\e[1][2][14] ), .c(
        \e_tx[1][2][14] ) );
  low_swing_rx_494 \ys[2].xs[1].msg_txrx[15].north_rx  ( .i(\s_tx[1][1][15] ), 
        .o(\n[1][2][15] ) );
  low_swing_rx_493 \ys[2].xs[1].msg_txrx[15].west_rx  ( .i(\e_tx[0][2][15] ), 
        .o(\w[1][2][15] ) );
  low_swing_tx_494 \ys[2].xs[1].msg_txrx[15].south_tx  ( .i(\s[1][2][15] ), 
        .c(\s_tx[1][2][15] ) );
  low_swing_tx_493 \ys[2].xs[1].msg_txrx[15].east_tx  ( .i(\e[1][2][15] ), .c(
        \e_tx[1][2][15] ) );
  low_swing_rx_492 \ys[2].xs[1].msg_txrx[16].north_rx  ( .i(\s_tx[1][1][16] ), 
        .o(\n[1][2][16] ) );
  low_swing_rx_491 \ys[2].xs[1].msg_txrx[16].west_rx  ( .i(\e_tx[0][2][16] ), 
        .o(\w[1][2][16] ) );
  low_swing_tx_492 \ys[2].xs[1].msg_txrx[16].south_tx  ( .i(\s[1][2][16] ), 
        .c(\s_tx[1][2][16] ) );
  low_swing_tx_491 \ys[2].xs[1].msg_txrx[16].east_tx  ( .i(\e[1][2][16] ), .c(
        \e_tx[1][2][16] ) );
  low_swing_rx_490 \ys[2].xs[1].msg_txrx[17].north_rx  ( .i(\s_tx[1][1][17] ), 
        .o(\n[1][2][17] ) );
  low_swing_rx_489 \ys[2].xs[1].msg_txrx[17].west_rx  ( .i(\e_tx[0][2][17] ), 
        .o(\w[1][2][17] ) );
  low_swing_tx_490 \ys[2].xs[1].msg_txrx[17].south_tx  ( .i(\s[1][2][17] ), 
        .c(\s_tx[1][2][17] ) );
  low_swing_tx_489 \ys[2].xs[1].msg_txrx[17].east_tx  ( .i(\e[1][2][17] ), .c(
        \e_tx[1][2][17] ) );
  low_swing_rx_488 \ys[2].xs[1].msg_txrx[18].north_rx  ( .i(\s_tx[1][1][18] ), 
        .o(\n[1][2][18] ) );
  low_swing_rx_487 \ys[2].xs[1].msg_txrx[18].west_rx  ( .i(\e_tx[0][2][18] ), 
        .o(\w[1][2][18] ) );
  low_swing_tx_488 \ys[2].xs[1].msg_txrx[18].south_tx  ( .i(\s[1][2][18] ), 
        .c(\s_tx[1][2][18] ) );
  low_swing_tx_487 \ys[2].xs[1].msg_txrx[18].east_tx  ( .i(\e[1][2][18] ), .c(
        \e_tx[1][2][18] ) );
  low_swing_rx_486 \ys[2].xs[1].msg_txrx[19].north_rx  ( .i(\s_tx[1][1][19] ), 
        .o(\n[1][2][19] ) );
  low_swing_rx_485 \ys[2].xs[1].msg_txrx[19].west_rx  ( .i(\e_tx[0][2][19] ), 
        .o(\w[1][2][19] ) );
  low_swing_tx_486 \ys[2].xs[1].msg_txrx[19].south_tx  ( .i(\s[1][2][19] ), 
        .c(\s_tx[1][2][19] ) );
  low_swing_tx_485 \ys[2].xs[1].msg_txrx[19].east_tx  ( .i(\e[1][2][19] ), .c(
        \e_tx[1][2][19] ) );
  low_swing_rx_484 \ys[2].xs[1].msg_txrx[20].north_rx  ( .i(\s_tx[1][1][20] ), 
        .o(\n[1][2][20] ) );
  low_swing_rx_483 \ys[2].xs[1].msg_txrx[20].west_rx  ( .i(\e_tx[0][2][20] ), 
        .o(\w[1][2][20] ) );
  low_swing_tx_484 \ys[2].xs[1].msg_txrx[20].south_tx  ( .i(\s[1][2][20] ), 
        .c(\s_tx[1][2][20] ) );
  low_swing_tx_483 \ys[2].xs[1].msg_txrx[20].east_tx  ( .i(\e[1][2][20] ), .c(
        \e_tx[1][2][20] ) );
  low_swing_rx_482 \ys[2].xs[1].msg_txrx[21].north_rx  ( .i(\s_tx[1][1][21] ), 
        .o(\n[1][2][21] ) );
  low_swing_rx_481 \ys[2].xs[1].msg_txrx[21].west_rx  ( .i(\e_tx[0][2][21] ), 
        .o(\w[1][2][21] ) );
  low_swing_tx_482 \ys[2].xs[1].msg_txrx[21].south_tx  ( .i(\s[1][2][21] ), 
        .c(\s_tx[1][2][21] ) );
  low_swing_tx_481 \ys[2].xs[1].msg_txrx[21].east_tx  ( .i(\e[1][2][21] ), .c(
        \e_tx[1][2][21] ) );
  low_swing_rx_480 \ys[2].xs[1].msg_txrx[22].north_rx  ( .i(\s_tx[1][1][22] ), 
        .o(\n[1][2][22] ) );
  low_swing_rx_479 \ys[2].xs[1].msg_txrx[22].west_rx  ( .i(\e_tx[0][2][22] ), 
        .o(\w[1][2][22] ) );
  low_swing_tx_480 \ys[2].xs[1].msg_txrx[22].south_tx  ( .i(\s[1][2][22] ), 
        .c(\s_tx[1][2][22] ) );
  low_swing_tx_479 \ys[2].xs[1].msg_txrx[22].east_tx  ( .i(\e[1][2][22] ), .c(
        \e_tx[1][2][22] ) );
  low_swing_rx_478 \ys[2].xs[1].msg_txrx[23].north_rx  ( .i(\s_tx[1][1][23] ), 
        .o(\n[1][2][23] ) );
  low_swing_rx_477 \ys[2].xs[1].msg_txrx[23].west_rx  ( .i(\e_tx[0][2][23] ), 
        .o(\w[1][2][23] ) );
  low_swing_tx_478 \ys[2].xs[1].msg_txrx[23].south_tx  ( .i(\s[1][2][23] ), 
        .c(\s_tx[1][2][23] ) );
  low_swing_tx_477 \ys[2].xs[1].msg_txrx[23].east_tx  ( .i(\e[1][2][23] ), .c(
        \e_tx[1][2][23] ) );
  low_swing_rx_476 \ys[2].xs[1].msg_txrx[24].north_rx  ( .i(\s_tx[1][1][24] ), 
        .o(\n[1][2][24] ) );
  low_swing_rx_475 \ys[2].xs[1].msg_txrx[24].west_rx  ( .i(\e_tx[0][2][24] ), 
        .o(\w[1][2][24] ) );
  low_swing_tx_476 \ys[2].xs[1].msg_txrx[24].south_tx  ( .i(\s[1][2][24] ), 
        .c(\s_tx[1][2][24] ) );
  low_swing_tx_475 \ys[2].xs[1].msg_txrx[24].east_tx  ( .i(\e[1][2][24] ), .c(
        \e_tx[1][2][24] ) );
  low_swing_rx_474 \ys[2].xs[1].msg_txrx[25].north_rx  ( .i(\s_tx[1][1][25] ), 
        .o(\n[1][2][25] ) );
  low_swing_rx_473 \ys[2].xs[1].msg_txrx[25].west_rx  ( .i(\e_tx[0][2][25] ), 
        .o(\w[1][2][25] ) );
  low_swing_tx_474 \ys[2].xs[1].msg_txrx[25].south_tx  ( .i(\s[1][2][25] ), 
        .c(\s_tx[1][2][25] ) );
  low_swing_tx_473 \ys[2].xs[1].msg_txrx[25].east_tx  ( .i(\e[1][2][25] ), .c(
        \e_tx[1][2][25] ) );
  low_swing_rx_472 \ys[2].xs[1].msg_txrx[26].north_rx  ( .i(\s_tx[1][1][26] ), 
        .o(\n[1][2][26] ) );
  low_swing_rx_471 \ys[2].xs[1].msg_txrx[26].west_rx  ( .i(\e_tx[0][2][26] ), 
        .o(\w[1][2][26] ) );
  low_swing_tx_472 \ys[2].xs[1].msg_txrx[26].south_tx  ( .i(\s[1][2][26] ), 
        .c(\s_tx[1][2][26] ) );
  low_swing_tx_471 \ys[2].xs[1].msg_txrx[26].east_tx  ( .i(\e[1][2][26] ), .c(
        \e_tx[1][2][26] ) );
  low_swing_rx_470 \ys[2].xs[1].msg_txrx[27].north_rx  ( .i(\s_tx[1][1][27] ), 
        .o(\n[1][2][27] ) );
  low_swing_rx_469 \ys[2].xs[1].msg_txrx[27].west_rx  ( .i(\e_tx[0][2][27] ), 
        .o(\w[1][2][27] ) );
  low_swing_tx_470 \ys[2].xs[1].msg_txrx[27].south_tx  ( .i(\s[1][2][27] ), 
        .c(\s_tx[1][2][27] ) );
  low_swing_tx_469 \ys[2].xs[1].msg_txrx[27].east_tx  ( .i(\e[1][2][27] ), .c(
        \e_tx[1][2][27] ) );
  low_swing_rx_468 \ys[2].xs[1].msg_txrx[28].north_rx  ( .i(\s_tx[1][1][28] ), 
        .o(\n[1][2][28] ) );
  low_swing_rx_467 \ys[2].xs[1].msg_txrx[28].west_rx  ( .i(\e_tx[0][2][28] ), 
        .o(\w[1][2][28] ) );
  low_swing_tx_468 \ys[2].xs[1].msg_txrx[28].south_tx  ( .i(\s[1][2][28] ), 
        .c(\s_tx[1][2][28] ) );
  low_swing_tx_467 \ys[2].xs[1].msg_txrx[28].east_tx  ( .i(\e[1][2][28] ), .c(
        \e_tx[1][2][28] ) );
  low_swing_rx_466 \ys[2].xs[1].msg_txrx[29].north_rx  ( .i(\s_tx[1][1][29] ), 
        .o(\n[1][2][29] ) );
  low_swing_rx_465 \ys[2].xs[1].msg_txrx[29].west_rx  ( .i(\e_tx[0][2][29] ), 
        .o(\w[1][2][29] ) );
  low_swing_tx_466 \ys[2].xs[1].msg_txrx[29].south_tx  ( .i(\s[1][2][29] ), 
        .c(\s_tx[1][2][29] ) );
  low_swing_tx_465 \ys[2].xs[1].msg_txrx[29].east_tx  ( .i(\e[1][2][29] ), .c(
        \e_tx[1][2][29] ) );
  low_swing_rx_464 \ys[2].xs[1].msg_txrx[30].north_rx  ( .i(\s_tx[1][1][30] ), 
        .o(\n[1][2][30] ) );
  low_swing_rx_463 \ys[2].xs[1].msg_txrx[30].west_rx  ( .i(\e_tx[0][2][30] ), 
        .o(\w[1][2][30] ) );
  low_swing_tx_464 \ys[2].xs[1].msg_txrx[30].south_tx  ( .i(\s[1][2][30] ), 
        .c(\s_tx[1][2][30] ) );
  low_swing_tx_463 \ys[2].xs[1].msg_txrx[30].east_tx  ( .i(\e[1][2][30] ), .c(
        \e_tx[1][2][30] ) );
  low_swing_rx_462 \ys[2].xs[1].msg_txrx[31].north_rx  ( .i(\s_tx[1][1][31] ), 
        .o(\n[1][2][31] ) );
  low_swing_rx_461 \ys[2].xs[1].msg_txrx[31].west_rx  ( .i(\e_tx[0][2][31] ), 
        .o(\w[1][2][31] ) );
  low_swing_tx_462 \ys[2].xs[1].msg_txrx[31].south_tx  ( .i(\s[1][2][31] ), 
        .c(\s_tx[1][2][31] ) );
  low_swing_tx_461 \ys[2].xs[1].msg_txrx[31].east_tx  ( .i(\e[1][2][31] ), .c(
        \e_tx[1][2][31] ) );
  low_swing_rx_460 \ys[2].xs[1].msg_txrx[32].north_rx  ( .i(\s_tx[1][1][32] ), 
        .o(\n[1][2][32] ) );
  low_swing_rx_459 \ys[2].xs[1].msg_txrx[32].west_rx  ( .i(\e_tx[0][2][32] ), 
        .o(\w[1][2][32] ) );
  low_swing_tx_460 \ys[2].xs[1].msg_txrx[32].south_tx  ( .i(\s[1][2][32] ), 
        .c(\s_tx[1][2][32] ) );
  low_swing_tx_459 \ys[2].xs[1].msg_txrx[32].east_tx  ( .i(\e[1][2][32] ), .c(
        \e_tx[1][2][32] ) );
  low_swing_rx_458 \ys[2].xs[1].msg_txrx[33].north_rx  ( .i(\s_tx[1][1][33] ), 
        .o(\n[1][2][33] ) );
  low_swing_rx_457 \ys[2].xs[1].msg_txrx[33].west_rx  ( .i(\e_tx[0][2][33] ), 
        .o(\w[1][2][33] ) );
  low_swing_tx_458 \ys[2].xs[1].msg_txrx[33].south_tx  ( .i(\s[1][2][33] ), 
        .c(\s_tx[1][2][33] ) );
  low_swing_tx_457 \ys[2].xs[1].msg_txrx[33].east_tx  ( .i(\e[1][2][33] ), .c(
        \e_tx[1][2][33] ) );
  low_swing_rx_456 \ys[2].xs[1].msg_txrx[34].north_rx  ( .i(\s_tx[1][1][34] ), 
        .o(\n[1][2][34] ) );
  low_swing_rx_455 \ys[2].xs[1].msg_txrx[34].west_rx  ( .i(\e_tx[0][2][34] ), 
        .o(\w[1][2][34] ) );
  low_swing_tx_456 \ys[2].xs[1].msg_txrx[34].south_tx  ( .i(\s[1][2][34] ), 
        .c(\s_tx[1][2][34] ) );
  low_swing_tx_455 \ys[2].xs[1].msg_txrx[34].east_tx  ( .i(\e[1][2][34] ), .c(
        \e_tx[1][2][34] ) );
  low_swing_rx_454 \ys[2].xs[1].msg_txrx[35].north_rx  ( .i(\s_tx[1][1][35] ), 
        .o(\n[1][2][35] ) );
  low_swing_rx_453 \ys[2].xs[1].msg_txrx[35].west_rx  ( .i(\e_tx[0][2][35] ), 
        .o(\w[1][2][35] ) );
  low_swing_tx_454 \ys[2].xs[1].msg_txrx[35].south_tx  ( .i(\s[1][2][35] ), 
        .c(\s_tx[1][2][35] ) );
  low_swing_tx_453 \ys[2].xs[1].msg_txrx[35].east_tx  ( .i(\e[1][2][35] ), .c(
        \e_tx[1][2][35] ) );
  low_swing_rx_452 \ys[2].xs[1].msg_txrx[36].north_rx  ( .i(\s_tx[1][1][36] ), 
        .o(\n[1][2][36] ) );
  low_swing_rx_451 \ys[2].xs[1].msg_txrx[36].west_rx  ( .i(\e_tx[0][2][36] ), 
        .o(\w[1][2][36] ) );
  low_swing_tx_452 \ys[2].xs[1].msg_txrx[36].south_tx  ( .i(\s[1][2][36] ), 
        .c(\s_tx[1][2][36] ) );
  low_swing_tx_451 \ys[2].xs[1].msg_txrx[36].east_tx  ( .i(\e[1][2][36] ), .c(
        \e_tx[1][2][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X2_Y2_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[2].xs[2].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[2][2] ), .i_v(\i[2][2][36] ), 
        .i_x({\i[2][2][35] , \i[2][2][34] }), .i_y({\i[2][2][33] , 
        \i[2][2][32] }), .i_data({\i[2][2][31] , \i[2][2][30] , \i[2][2][29] , 
        \i[2][2][28] , \i[2][2][27] , \i[2][2][26] , \i[2][2][25] , 
        \i[2][2][24] , \i[2][2][23] , \i[2][2][22] , \i[2][2][21] , 
        \i[2][2][20] , \i[2][2][19] , \i[2][2][18] , \i[2][2][17] , 
        \i[2][2][16] , \i[2][2][15] , \i[2][2][14] , \i[2][2][13] , 
        \i[2][2][12] , \i[2][2][11] , \i[2][2][10] , \i[2][2][9] , 
        \i[2][2][8] , \i[2][2][7] , \i[2][2][6] , \i[2][2][5] , \i[2][2][4] , 
        \i[2][2][3] , \i[2][2][2] , \i[2][2][1] , \i[2][2][0] }), .o_v(
        \o_v[2][2] ), .o_x({\s[2][2][35] , \s[2][2][34] }), .o_y({
        \s[2][2][33] , \s[2][2][32] }), .o_data({\s[2][2][31] , \s[2][2][30] , 
        \s[2][2][29] , \s[2][2][28] , \s[2][2][27] , \s[2][2][26] , 
        \s[2][2][25] , \s[2][2][24] , \s[2][2][23] , \s[2][2][22] , 
        \s[2][2][21] , \s[2][2][20] , \s[2][2][19] , \s[2][2][18] , 
        \s[2][2][17] , \s[2][2][16] , \s[2][2][15] , \s[2][2][14] , 
        \s[2][2][13] , \s[2][2][12] , \s[2][2][11] , \s[2][2][10] , 
        \s[2][2][9] , \s[2][2][8] , \s[2][2][7] , \s[2][2][6] , \s[2][2][5] , 
        \s[2][2][4] , \s[2][2][3] , \s[2][2][2] , \s[2][2][1] , \s[2][2][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X2_Y2 \ys[2].xs[2].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[2][2][36] ), .n_in_x({\n[2][2][35] , 
        \n[2][2][34] }), .n_in_y({\n[2][2][33] , \n[2][2][32] }), .n_in_data({
        \n[2][2][31] , \n[2][2][30] , \n[2][2][29] , \n[2][2][28] , 
        \n[2][2][27] , \n[2][2][26] , \n[2][2][25] , \n[2][2][24] , 
        \n[2][2][23] , \n[2][2][22] , \n[2][2][21] , \n[2][2][20] , 
        \n[2][2][19] , \n[2][2][18] , \n[2][2][17] , \n[2][2][16] , 
        \n[2][2][15] , \n[2][2][14] , \n[2][2][13] , \n[2][2][12] , 
        \n[2][2][11] , \n[2][2][10] , \n[2][2][9] , \n[2][2][8] , \n[2][2][7] , 
        \n[2][2][6] , \n[2][2][5] , \n[2][2][4] , \n[2][2][3] , \n[2][2][2] , 
        \n[2][2][1] , \n[2][2][0] }), .w_in_v(\w[2][2][36] ), .w_in_x({
        \w[2][2][35] , \w[2][2][34] }), .w_in_y({\w[2][2][33] , \w[2][2][32] }), .w_in_data({\w[2][2][31] , \w[2][2][30] , \w[2][2][29] , \w[2][2][28] , 
        \w[2][2][27] , \w[2][2][26] , \w[2][2][25] , \w[2][2][24] , 
        \w[2][2][23] , \w[2][2][22] , \w[2][2][21] , \w[2][2][20] , 
        \w[2][2][19] , \w[2][2][18] , \w[2][2][17] , \w[2][2][16] , 
        \w[2][2][15] , \w[2][2][14] , \w[2][2][13] , \w[2][2][12] , 
        \w[2][2][11] , \w[2][2][10] , \w[2][2][9] , \w[2][2][8] , \w[2][2][7] , 
        \w[2][2][6] , \w[2][2][5] , \w[2][2][4] , \w[2][2][3] , \w[2][2][2] , 
        \w[2][2][1] , \w[2][2][0] }), .i_v(\i[2][2][36] ), .i_x({\i[2][2][35] , 
        \i[2][2][34] }), .i_y({\i[2][2][33] , \i[2][2][32] }), .i_data({
        \i[2][2][31] , \i[2][2][30] , \i[2][2][29] , \i[2][2][28] , 
        \i[2][2][27] , \i[2][2][26] , \i[2][2][25] , \i[2][2][24] , 
        \i[2][2][23] , \i[2][2][22] , \i[2][2][21] , \i[2][2][20] , 
        \i[2][2][19] , \i[2][2][18] , \i[2][2][17] , \i[2][2][16] , 
        \i[2][2][15] , \i[2][2][14] , \i[2][2][13] , \i[2][2][12] , 
        \i[2][2][11] , \i[2][2][10] , \i[2][2][9] , \i[2][2][8] , \i[2][2][7] , 
        \i[2][2][6] , \i[2][2][5] , \i[2][2][4] , \i[2][2][3] , \i[2][2][2] , 
        \i[2][2][1] , \i[2][2][0] }), .e_b(\e_b[2][2] ), .w_b(\w_b[2][2] ), 
        .i_ack(\i_ack[2][2] ), .o_v(\o_v[2][2] ), .s_out_v(\s[2][2][36] ), 
        .s_out_x({\s[2][2][35] , \s[2][2][34] }), .s_out_y({\s[2][2][33] , 
        \s[2][2][32] }), .s_out_data({\s[2][2][31] , \s[2][2][30] , 
        \s[2][2][29] , \s[2][2][28] , \s[2][2][27] , \s[2][2][26] , 
        \s[2][2][25] , \s[2][2][24] , \s[2][2][23] , \s[2][2][22] , 
        \s[2][2][21] , \s[2][2][20] , \s[2][2][19] , \s[2][2][18] , 
        \s[2][2][17] , \s[2][2][16] , \s[2][2][15] , \s[2][2][14] , 
        \s[2][2][13] , \s[2][2][12] , \s[2][2][11] , \s[2][2][10] , 
        \s[2][2][9] , \s[2][2][8] , \s[2][2][7] , \s[2][2][6] , \s[2][2][5] , 
        \s[2][2][4] , \s[2][2][3] , \s[2][2][2] , \s[2][2][1] , \s[2][2][0] }), 
        .e_out_v(\e[2][2][36] ), .e_out_x({\e[2][2][35] , \e[2][2][34] }), 
        .e_out_y({\e[2][2][33] , \e[2][2][32] }), .e_out_data({\e[2][2][31] , 
        \e[2][2][30] , \e[2][2][29] , \e[2][2][28] , \e[2][2][27] , 
        \e[2][2][26] , \e[2][2][25] , \e[2][2][24] , \e[2][2][23] , 
        \e[2][2][22] , \e[2][2][21] , \e[2][2][20] , \e[2][2][19] , 
        \e[2][2][18] , \e[2][2][17] , \e[2][2][16] , \e[2][2][15] , 
        \e[2][2][14] , \e[2][2][13] , \e[2][2][12] , \e[2][2][11] , 
        \e[2][2][10] , \e[2][2][9] , \e[2][2][8] , \e[2][2][7] , \e[2][2][6] , 
        \e[2][2][5] , \e[2][2][4] , \e[2][2][3] , \e[2][2][2] , \e[2][2][1] , 
        \e[2][2][0] }) );
  low_swing_rx_450 \ys[2].xs[2].east_bp_rx  ( .i(\w_b_tx[3][2] ), .o(
        \e_b[2][2] ) );
  low_swing_tx_450 \ys[2].xs[2].west_bp_tx  ( .i(\w_b[2][2] ), .c(
        \w_b_tx[2][2] ) );
  low_swing_rx_449 \ys[2].xs[2].msg_txrx[0].north_rx  ( .i(\s_tx[2][1][0] ), 
        .o(\n[2][2][0] ) );
  low_swing_rx_448 \ys[2].xs[2].msg_txrx[0].west_rx  ( .i(\e_tx[1][2][0] ), 
        .o(\w[2][2][0] ) );
  low_swing_tx_449 \ys[2].xs[2].msg_txrx[0].south_tx  ( .i(\s[2][2][0] ), .c(
        \s_tx[2][2][0] ) );
  low_swing_tx_448 \ys[2].xs[2].msg_txrx[0].east_tx  ( .i(\e[2][2][0] ), .c(
        \e_tx[2][2][0] ) );
  low_swing_rx_447 \ys[2].xs[2].msg_txrx[1].north_rx  ( .i(\s_tx[2][1][1] ), 
        .o(\n[2][2][1] ) );
  low_swing_rx_446 \ys[2].xs[2].msg_txrx[1].west_rx  ( .i(\e_tx[1][2][1] ), 
        .o(\w[2][2][1] ) );
  low_swing_tx_447 \ys[2].xs[2].msg_txrx[1].south_tx  ( .i(\s[2][2][1] ), .c(
        \s_tx[2][2][1] ) );
  low_swing_tx_446 \ys[2].xs[2].msg_txrx[1].east_tx  ( .i(\e[2][2][1] ), .c(
        \e_tx[2][2][1] ) );
  low_swing_rx_445 \ys[2].xs[2].msg_txrx[2].north_rx  ( .i(\s_tx[2][1][2] ), 
        .o(\n[2][2][2] ) );
  low_swing_rx_444 \ys[2].xs[2].msg_txrx[2].west_rx  ( .i(\e_tx[1][2][2] ), 
        .o(\w[2][2][2] ) );
  low_swing_tx_445 \ys[2].xs[2].msg_txrx[2].south_tx  ( .i(\s[2][2][2] ), .c(
        \s_tx[2][2][2] ) );
  low_swing_tx_444 \ys[2].xs[2].msg_txrx[2].east_tx  ( .i(\e[2][2][2] ), .c(
        \e_tx[2][2][2] ) );
  low_swing_rx_443 \ys[2].xs[2].msg_txrx[3].north_rx  ( .i(\s_tx[2][1][3] ), 
        .o(\n[2][2][3] ) );
  low_swing_rx_442 \ys[2].xs[2].msg_txrx[3].west_rx  ( .i(\e_tx[1][2][3] ), 
        .o(\w[2][2][3] ) );
  low_swing_tx_443 \ys[2].xs[2].msg_txrx[3].south_tx  ( .i(\s[2][2][3] ), .c(
        \s_tx[2][2][3] ) );
  low_swing_tx_442 \ys[2].xs[2].msg_txrx[3].east_tx  ( .i(\e[2][2][3] ), .c(
        \e_tx[2][2][3] ) );
  low_swing_rx_441 \ys[2].xs[2].msg_txrx[4].north_rx  ( .i(\s_tx[2][1][4] ), 
        .o(\n[2][2][4] ) );
  low_swing_rx_440 \ys[2].xs[2].msg_txrx[4].west_rx  ( .i(\e_tx[1][2][4] ), 
        .o(\w[2][2][4] ) );
  low_swing_tx_441 \ys[2].xs[2].msg_txrx[4].south_tx  ( .i(\s[2][2][4] ), .c(
        \s_tx[2][2][4] ) );
  low_swing_tx_440 \ys[2].xs[2].msg_txrx[4].east_tx  ( .i(\e[2][2][4] ), .c(
        \e_tx[2][2][4] ) );
  low_swing_rx_439 \ys[2].xs[2].msg_txrx[5].north_rx  ( .i(\s_tx[2][1][5] ), 
        .o(\n[2][2][5] ) );
  low_swing_rx_438 \ys[2].xs[2].msg_txrx[5].west_rx  ( .i(\e_tx[1][2][5] ), 
        .o(\w[2][2][5] ) );
  low_swing_tx_439 \ys[2].xs[2].msg_txrx[5].south_tx  ( .i(\s[2][2][5] ), .c(
        \s_tx[2][2][5] ) );
  low_swing_tx_438 \ys[2].xs[2].msg_txrx[5].east_tx  ( .i(\e[2][2][5] ), .c(
        \e_tx[2][2][5] ) );
  low_swing_rx_437 \ys[2].xs[2].msg_txrx[6].north_rx  ( .i(\s_tx[2][1][6] ), 
        .o(\n[2][2][6] ) );
  low_swing_rx_436 \ys[2].xs[2].msg_txrx[6].west_rx  ( .i(\e_tx[1][2][6] ), 
        .o(\w[2][2][6] ) );
  low_swing_tx_437 \ys[2].xs[2].msg_txrx[6].south_tx  ( .i(\s[2][2][6] ), .c(
        \s_tx[2][2][6] ) );
  low_swing_tx_436 \ys[2].xs[2].msg_txrx[6].east_tx  ( .i(\e[2][2][6] ), .c(
        \e_tx[2][2][6] ) );
  low_swing_rx_435 \ys[2].xs[2].msg_txrx[7].north_rx  ( .i(\s_tx[2][1][7] ), 
        .o(\n[2][2][7] ) );
  low_swing_rx_434 \ys[2].xs[2].msg_txrx[7].west_rx  ( .i(\e_tx[1][2][7] ), 
        .o(\w[2][2][7] ) );
  low_swing_tx_435 \ys[2].xs[2].msg_txrx[7].south_tx  ( .i(\s[2][2][7] ), .c(
        \s_tx[2][2][7] ) );
  low_swing_tx_434 \ys[2].xs[2].msg_txrx[7].east_tx  ( .i(\e[2][2][7] ), .c(
        \e_tx[2][2][7] ) );
  low_swing_rx_433 \ys[2].xs[2].msg_txrx[8].north_rx  ( .i(\s_tx[2][1][8] ), 
        .o(\n[2][2][8] ) );
  low_swing_rx_432 \ys[2].xs[2].msg_txrx[8].west_rx  ( .i(\e_tx[1][2][8] ), 
        .o(\w[2][2][8] ) );
  low_swing_tx_433 \ys[2].xs[2].msg_txrx[8].south_tx  ( .i(\s[2][2][8] ), .c(
        \s_tx[2][2][8] ) );
  low_swing_tx_432 \ys[2].xs[2].msg_txrx[8].east_tx  ( .i(\e[2][2][8] ), .c(
        \e_tx[2][2][8] ) );
  low_swing_rx_431 \ys[2].xs[2].msg_txrx[9].north_rx  ( .i(\s_tx[2][1][9] ), 
        .o(\n[2][2][9] ) );
  low_swing_rx_430 \ys[2].xs[2].msg_txrx[9].west_rx  ( .i(\e_tx[1][2][9] ), 
        .o(\w[2][2][9] ) );
  low_swing_tx_431 \ys[2].xs[2].msg_txrx[9].south_tx  ( .i(\s[2][2][9] ), .c(
        \s_tx[2][2][9] ) );
  low_swing_tx_430 \ys[2].xs[2].msg_txrx[9].east_tx  ( .i(\e[2][2][9] ), .c(
        \e_tx[2][2][9] ) );
  low_swing_rx_429 \ys[2].xs[2].msg_txrx[10].north_rx  ( .i(\s_tx[2][1][10] ), 
        .o(\n[2][2][10] ) );
  low_swing_rx_428 \ys[2].xs[2].msg_txrx[10].west_rx  ( .i(\e_tx[1][2][10] ), 
        .o(\w[2][2][10] ) );
  low_swing_tx_429 \ys[2].xs[2].msg_txrx[10].south_tx  ( .i(\s[2][2][10] ), 
        .c(\s_tx[2][2][10] ) );
  low_swing_tx_428 \ys[2].xs[2].msg_txrx[10].east_tx  ( .i(\e[2][2][10] ), .c(
        \e_tx[2][2][10] ) );
  low_swing_rx_427 \ys[2].xs[2].msg_txrx[11].north_rx  ( .i(\s_tx[2][1][11] ), 
        .o(\n[2][2][11] ) );
  low_swing_rx_426 \ys[2].xs[2].msg_txrx[11].west_rx  ( .i(\e_tx[1][2][11] ), 
        .o(\w[2][2][11] ) );
  low_swing_tx_427 \ys[2].xs[2].msg_txrx[11].south_tx  ( .i(\s[2][2][11] ), 
        .c(\s_tx[2][2][11] ) );
  low_swing_tx_426 \ys[2].xs[2].msg_txrx[11].east_tx  ( .i(\e[2][2][11] ), .c(
        \e_tx[2][2][11] ) );
  low_swing_rx_425 \ys[2].xs[2].msg_txrx[12].north_rx  ( .i(\s_tx[2][1][12] ), 
        .o(\n[2][2][12] ) );
  low_swing_rx_424 \ys[2].xs[2].msg_txrx[12].west_rx  ( .i(\e_tx[1][2][12] ), 
        .o(\w[2][2][12] ) );
  low_swing_tx_425 \ys[2].xs[2].msg_txrx[12].south_tx  ( .i(\s[2][2][12] ), 
        .c(\s_tx[2][2][12] ) );
  low_swing_tx_424 \ys[2].xs[2].msg_txrx[12].east_tx  ( .i(\e[2][2][12] ), .c(
        \e_tx[2][2][12] ) );
  low_swing_rx_423 \ys[2].xs[2].msg_txrx[13].north_rx  ( .i(\s_tx[2][1][13] ), 
        .o(\n[2][2][13] ) );
  low_swing_rx_422 \ys[2].xs[2].msg_txrx[13].west_rx  ( .i(\e_tx[1][2][13] ), 
        .o(\w[2][2][13] ) );
  low_swing_tx_423 \ys[2].xs[2].msg_txrx[13].south_tx  ( .i(\s[2][2][13] ), 
        .c(\s_tx[2][2][13] ) );
  low_swing_tx_422 \ys[2].xs[2].msg_txrx[13].east_tx  ( .i(\e[2][2][13] ), .c(
        \e_tx[2][2][13] ) );
  low_swing_rx_421 \ys[2].xs[2].msg_txrx[14].north_rx  ( .i(\s_tx[2][1][14] ), 
        .o(\n[2][2][14] ) );
  low_swing_rx_420 \ys[2].xs[2].msg_txrx[14].west_rx  ( .i(\e_tx[1][2][14] ), 
        .o(\w[2][2][14] ) );
  low_swing_tx_421 \ys[2].xs[2].msg_txrx[14].south_tx  ( .i(\s[2][2][14] ), 
        .c(\s_tx[2][2][14] ) );
  low_swing_tx_420 \ys[2].xs[2].msg_txrx[14].east_tx  ( .i(\e[2][2][14] ), .c(
        \e_tx[2][2][14] ) );
  low_swing_rx_419 \ys[2].xs[2].msg_txrx[15].north_rx  ( .i(\s_tx[2][1][15] ), 
        .o(\n[2][2][15] ) );
  low_swing_rx_418 \ys[2].xs[2].msg_txrx[15].west_rx  ( .i(\e_tx[1][2][15] ), 
        .o(\w[2][2][15] ) );
  low_swing_tx_419 \ys[2].xs[2].msg_txrx[15].south_tx  ( .i(\s[2][2][15] ), 
        .c(\s_tx[2][2][15] ) );
  low_swing_tx_418 \ys[2].xs[2].msg_txrx[15].east_tx  ( .i(\e[2][2][15] ), .c(
        \e_tx[2][2][15] ) );
  low_swing_rx_417 \ys[2].xs[2].msg_txrx[16].north_rx  ( .i(\s_tx[2][1][16] ), 
        .o(\n[2][2][16] ) );
  low_swing_rx_416 \ys[2].xs[2].msg_txrx[16].west_rx  ( .i(\e_tx[1][2][16] ), 
        .o(\w[2][2][16] ) );
  low_swing_tx_417 \ys[2].xs[2].msg_txrx[16].south_tx  ( .i(\s[2][2][16] ), 
        .c(\s_tx[2][2][16] ) );
  low_swing_tx_416 \ys[2].xs[2].msg_txrx[16].east_tx  ( .i(\e[2][2][16] ), .c(
        \e_tx[2][2][16] ) );
  low_swing_rx_415 \ys[2].xs[2].msg_txrx[17].north_rx  ( .i(\s_tx[2][1][17] ), 
        .o(\n[2][2][17] ) );
  low_swing_rx_414 \ys[2].xs[2].msg_txrx[17].west_rx  ( .i(\e_tx[1][2][17] ), 
        .o(\w[2][2][17] ) );
  low_swing_tx_415 \ys[2].xs[2].msg_txrx[17].south_tx  ( .i(\s[2][2][17] ), 
        .c(\s_tx[2][2][17] ) );
  low_swing_tx_414 \ys[2].xs[2].msg_txrx[17].east_tx  ( .i(\e[2][2][17] ), .c(
        \e_tx[2][2][17] ) );
  low_swing_rx_413 \ys[2].xs[2].msg_txrx[18].north_rx  ( .i(\s_tx[2][1][18] ), 
        .o(\n[2][2][18] ) );
  low_swing_rx_412 \ys[2].xs[2].msg_txrx[18].west_rx  ( .i(\e_tx[1][2][18] ), 
        .o(\w[2][2][18] ) );
  low_swing_tx_413 \ys[2].xs[2].msg_txrx[18].south_tx  ( .i(\s[2][2][18] ), 
        .c(\s_tx[2][2][18] ) );
  low_swing_tx_412 \ys[2].xs[2].msg_txrx[18].east_tx  ( .i(\e[2][2][18] ), .c(
        \e_tx[2][2][18] ) );
  low_swing_rx_411 \ys[2].xs[2].msg_txrx[19].north_rx  ( .i(\s_tx[2][1][19] ), 
        .o(\n[2][2][19] ) );
  low_swing_rx_410 \ys[2].xs[2].msg_txrx[19].west_rx  ( .i(\e_tx[1][2][19] ), 
        .o(\w[2][2][19] ) );
  low_swing_tx_411 \ys[2].xs[2].msg_txrx[19].south_tx  ( .i(\s[2][2][19] ), 
        .c(\s_tx[2][2][19] ) );
  low_swing_tx_410 \ys[2].xs[2].msg_txrx[19].east_tx  ( .i(\e[2][2][19] ), .c(
        \e_tx[2][2][19] ) );
  low_swing_rx_409 \ys[2].xs[2].msg_txrx[20].north_rx  ( .i(\s_tx[2][1][20] ), 
        .o(\n[2][2][20] ) );
  low_swing_rx_408 \ys[2].xs[2].msg_txrx[20].west_rx  ( .i(\e_tx[1][2][20] ), 
        .o(\w[2][2][20] ) );
  low_swing_tx_409 \ys[2].xs[2].msg_txrx[20].south_tx  ( .i(\s[2][2][20] ), 
        .c(\s_tx[2][2][20] ) );
  low_swing_tx_408 \ys[2].xs[2].msg_txrx[20].east_tx  ( .i(\e[2][2][20] ), .c(
        \e_tx[2][2][20] ) );
  low_swing_rx_407 \ys[2].xs[2].msg_txrx[21].north_rx  ( .i(\s_tx[2][1][21] ), 
        .o(\n[2][2][21] ) );
  low_swing_rx_406 \ys[2].xs[2].msg_txrx[21].west_rx  ( .i(\e_tx[1][2][21] ), 
        .o(\w[2][2][21] ) );
  low_swing_tx_407 \ys[2].xs[2].msg_txrx[21].south_tx  ( .i(\s[2][2][21] ), 
        .c(\s_tx[2][2][21] ) );
  low_swing_tx_406 \ys[2].xs[2].msg_txrx[21].east_tx  ( .i(\e[2][2][21] ), .c(
        \e_tx[2][2][21] ) );
  low_swing_rx_405 \ys[2].xs[2].msg_txrx[22].north_rx  ( .i(\s_tx[2][1][22] ), 
        .o(\n[2][2][22] ) );
  low_swing_rx_404 \ys[2].xs[2].msg_txrx[22].west_rx  ( .i(\e_tx[1][2][22] ), 
        .o(\w[2][2][22] ) );
  low_swing_tx_405 \ys[2].xs[2].msg_txrx[22].south_tx  ( .i(\s[2][2][22] ), 
        .c(\s_tx[2][2][22] ) );
  low_swing_tx_404 \ys[2].xs[2].msg_txrx[22].east_tx  ( .i(\e[2][2][22] ), .c(
        \e_tx[2][2][22] ) );
  low_swing_rx_403 \ys[2].xs[2].msg_txrx[23].north_rx  ( .i(\s_tx[2][1][23] ), 
        .o(\n[2][2][23] ) );
  low_swing_rx_402 \ys[2].xs[2].msg_txrx[23].west_rx  ( .i(\e_tx[1][2][23] ), 
        .o(\w[2][2][23] ) );
  low_swing_tx_403 \ys[2].xs[2].msg_txrx[23].south_tx  ( .i(\s[2][2][23] ), 
        .c(\s_tx[2][2][23] ) );
  low_swing_tx_402 \ys[2].xs[2].msg_txrx[23].east_tx  ( .i(\e[2][2][23] ), .c(
        \e_tx[2][2][23] ) );
  low_swing_rx_401 \ys[2].xs[2].msg_txrx[24].north_rx  ( .i(\s_tx[2][1][24] ), 
        .o(\n[2][2][24] ) );
  low_swing_rx_400 \ys[2].xs[2].msg_txrx[24].west_rx  ( .i(\e_tx[1][2][24] ), 
        .o(\w[2][2][24] ) );
  low_swing_tx_401 \ys[2].xs[2].msg_txrx[24].south_tx  ( .i(\s[2][2][24] ), 
        .c(\s_tx[2][2][24] ) );
  low_swing_tx_400 \ys[2].xs[2].msg_txrx[24].east_tx  ( .i(\e[2][2][24] ), .c(
        \e_tx[2][2][24] ) );
  low_swing_rx_399 \ys[2].xs[2].msg_txrx[25].north_rx  ( .i(\s_tx[2][1][25] ), 
        .o(\n[2][2][25] ) );
  low_swing_rx_398 \ys[2].xs[2].msg_txrx[25].west_rx  ( .i(\e_tx[1][2][25] ), 
        .o(\w[2][2][25] ) );
  low_swing_tx_399 \ys[2].xs[2].msg_txrx[25].south_tx  ( .i(\s[2][2][25] ), 
        .c(\s_tx[2][2][25] ) );
  low_swing_tx_398 \ys[2].xs[2].msg_txrx[25].east_tx  ( .i(\e[2][2][25] ), .c(
        \e_tx[2][2][25] ) );
  low_swing_rx_397 \ys[2].xs[2].msg_txrx[26].north_rx  ( .i(\s_tx[2][1][26] ), 
        .o(\n[2][2][26] ) );
  low_swing_rx_396 \ys[2].xs[2].msg_txrx[26].west_rx  ( .i(\e_tx[1][2][26] ), 
        .o(\w[2][2][26] ) );
  low_swing_tx_397 \ys[2].xs[2].msg_txrx[26].south_tx  ( .i(\s[2][2][26] ), 
        .c(\s_tx[2][2][26] ) );
  low_swing_tx_396 \ys[2].xs[2].msg_txrx[26].east_tx  ( .i(\e[2][2][26] ), .c(
        \e_tx[2][2][26] ) );
  low_swing_rx_395 \ys[2].xs[2].msg_txrx[27].north_rx  ( .i(\s_tx[2][1][27] ), 
        .o(\n[2][2][27] ) );
  low_swing_rx_394 \ys[2].xs[2].msg_txrx[27].west_rx  ( .i(\e_tx[1][2][27] ), 
        .o(\w[2][2][27] ) );
  low_swing_tx_395 \ys[2].xs[2].msg_txrx[27].south_tx  ( .i(\s[2][2][27] ), 
        .c(\s_tx[2][2][27] ) );
  low_swing_tx_394 \ys[2].xs[2].msg_txrx[27].east_tx  ( .i(\e[2][2][27] ), .c(
        \e_tx[2][2][27] ) );
  low_swing_rx_393 \ys[2].xs[2].msg_txrx[28].north_rx  ( .i(\s_tx[2][1][28] ), 
        .o(\n[2][2][28] ) );
  low_swing_rx_392 \ys[2].xs[2].msg_txrx[28].west_rx  ( .i(\e_tx[1][2][28] ), 
        .o(\w[2][2][28] ) );
  low_swing_tx_393 \ys[2].xs[2].msg_txrx[28].south_tx  ( .i(\s[2][2][28] ), 
        .c(\s_tx[2][2][28] ) );
  low_swing_tx_392 \ys[2].xs[2].msg_txrx[28].east_tx  ( .i(\e[2][2][28] ), .c(
        \e_tx[2][2][28] ) );
  low_swing_rx_391 \ys[2].xs[2].msg_txrx[29].north_rx  ( .i(\s_tx[2][1][29] ), 
        .o(\n[2][2][29] ) );
  low_swing_rx_390 \ys[2].xs[2].msg_txrx[29].west_rx  ( .i(\e_tx[1][2][29] ), 
        .o(\w[2][2][29] ) );
  low_swing_tx_391 \ys[2].xs[2].msg_txrx[29].south_tx  ( .i(\s[2][2][29] ), 
        .c(\s_tx[2][2][29] ) );
  low_swing_tx_390 \ys[2].xs[2].msg_txrx[29].east_tx  ( .i(\e[2][2][29] ), .c(
        \e_tx[2][2][29] ) );
  low_swing_rx_389 \ys[2].xs[2].msg_txrx[30].north_rx  ( .i(\s_tx[2][1][30] ), 
        .o(\n[2][2][30] ) );
  low_swing_rx_388 \ys[2].xs[2].msg_txrx[30].west_rx  ( .i(\e_tx[1][2][30] ), 
        .o(\w[2][2][30] ) );
  low_swing_tx_389 \ys[2].xs[2].msg_txrx[30].south_tx  ( .i(\s[2][2][30] ), 
        .c(\s_tx[2][2][30] ) );
  low_swing_tx_388 \ys[2].xs[2].msg_txrx[30].east_tx  ( .i(\e[2][2][30] ), .c(
        \e_tx[2][2][30] ) );
  low_swing_rx_387 \ys[2].xs[2].msg_txrx[31].north_rx  ( .i(\s_tx[2][1][31] ), 
        .o(\n[2][2][31] ) );
  low_swing_rx_386 \ys[2].xs[2].msg_txrx[31].west_rx  ( .i(\e_tx[1][2][31] ), 
        .o(\w[2][2][31] ) );
  low_swing_tx_387 \ys[2].xs[2].msg_txrx[31].south_tx  ( .i(\s[2][2][31] ), 
        .c(\s_tx[2][2][31] ) );
  low_swing_tx_386 \ys[2].xs[2].msg_txrx[31].east_tx  ( .i(\e[2][2][31] ), .c(
        \e_tx[2][2][31] ) );
  low_swing_rx_385 \ys[2].xs[2].msg_txrx[32].north_rx  ( .i(\s_tx[2][1][32] ), 
        .o(\n[2][2][32] ) );
  low_swing_rx_384 \ys[2].xs[2].msg_txrx[32].west_rx  ( .i(\e_tx[1][2][32] ), 
        .o(\w[2][2][32] ) );
  low_swing_tx_385 \ys[2].xs[2].msg_txrx[32].south_tx  ( .i(\s[2][2][32] ), 
        .c(\s_tx[2][2][32] ) );
  low_swing_tx_384 \ys[2].xs[2].msg_txrx[32].east_tx  ( .i(\e[2][2][32] ), .c(
        \e_tx[2][2][32] ) );
  low_swing_rx_383 \ys[2].xs[2].msg_txrx[33].north_rx  ( .i(\s_tx[2][1][33] ), 
        .o(\n[2][2][33] ) );
  low_swing_rx_382 \ys[2].xs[2].msg_txrx[33].west_rx  ( .i(\e_tx[1][2][33] ), 
        .o(\w[2][2][33] ) );
  low_swing_tx_383 \ys[2].xs[2].msg_txrx[33].south_tx  ( .i(\s[2][2][33] ), 
        .c(\s_tx[2][2][33] ) );
  low_swing_tx_382 \ys[2].xs[2].msg_txrx[33].east_tx  ( .i(\e[2][2][33] ), .c(
        \e_tx[2][2][33] ) );
  low_swing_rx_381 \ys[2].xs[2].msg_txrx[34].north_rx  ( .i(\s_tx[2][1][34] ), 
        .o(\n[2][2][34] ) );
  low_swing_rx_380 \ys[2].xs[2].msg_txrx[34].west_rx  ( .i(\e_tx[1][2][34] ), 
        .o(\w[2][2][34] ) );
  low_swing_tx_381 \ys[2].xs[2].msg_txrx[34].south_tx  ( .i(\s[2][2][34] ), 
        .c(\s_tx[2][2][34] ) );
  low_swing_tx_380 \ys[2].xs[2].msg_txrx[34].east_tx  ( .i(\e[2][2][34] ), .c(
        \e_tx[2][2][34] ) );
  low_swing_rx_379 \ys[2].xs[2].msg_txrx[35].north_rx  ( .i(\s_tx[2][1][35] ), 
        .o(\n[2][2][35] ) );
  low_swing_rx_378 \ys[2].xs[2].msg_txrx[35].west_rx  ( .i(\e_tx[1][2][35] ), 
        .o(\w[2][2][35] ) );
  low_swing_tx_379 \ys[2].xs[2].msg_txrx[35].south_tx  ( .i(\s[2][2][35] ), 
        .c(\s_tx[2][2][35] ) );
  low_swing_tx_378 \ys[2].xs[2].msg_txrx[35].east_tx  ( .i(\e[2][2][35] ), .c(
        \e_tx[2][2][35] ) );
  low_swing_rx_377 \ys[2].xs[2].msg_txrx[36].north_rx  ( .i(\s_tx[2][1][36] ), 
        .o(\n[2][2][36] ) );
  low_swing_rx_376 \ys[2].xs[2].msg_txrx[36].west_rx  ( .i(\e_tx[1][2][36] ), 
        .o(\w[2][2][36] ) );
  low_swing_tx_377 \ys[2].xs[2].msg_txrx[36].south_tx  ( .i(\s[2][2][36] ), 
        .c(\s_tx[2][2][36] ) );
  low_swing_tx_376 \ys[2].xs[2].msg_txrx[36].east_tx  ( .i(\e[2][2][36] ), .c(
        \e_tx[2][2][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X3_Y2_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[2].xs[3].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[3][2] ), .i_v(\i[3][2][36] ), 
        .i_x({\i[3][2][35] , \i[3][2][34] }), .i_y({\i[3][2][33] , 
        \i[3][2][32] }), .i_data({\i[3][2][31] , \i[3][2][30] , \i[3][2][29] , 
        \i[3][2][28] , \i[3][2][27] , \i[3][2][26] , \i[3][2][25] , 
        \i[3][2][24] , \i[3][2][23] , \i[3][2][22] , \i[3][2][21] , 
        \i[3][2][20] , \i[3][2][19] , \i[3][2][18] , \i[3][2][17] , 
        \i[3][2][16] , \i[3][2][15] , \i[3][2][14] , \i[3][2][13] , 
        \i[3][2][12] , \i[3][2][11] , \i[3][2][10] , \i[3][2][9] , 
        \i[3][2][8] , \i[3][2][7] , \i[3][2][6] , \i[3][2][5] , \i[3][2][4] , 
        \i[3][2][3] , \i[3][2][2] , \i[3][2][1] , \i[3][2][0] }), .o_v(
        \o_v[3][2] ), .o_x({\s[3][2][35] , \s[3][2][34] }), .o_y({
        \s[3][2][33] , \s[3][2][32] }), .o_data({\s[3][2][31] , \s[3][2][30] , 
        \s[3][2][29] , \s[3][2][28] , \s[3][2][27] , \s[3][2][26] , 
        \s[3][2][25] , \s[3][2][24] , \s[3][2][23] , \s[3][2][22] , 
        \s[3][2][21] , \s[3][2][20] , \s[3][2][19] , \s[3][2][18] , 
        \s[3][2][17] , \s[3][2][16] , \s[3][2][15] , \s[3][2][14] , 
        \s[3][2][13] , \s[3][2][12] , \s[3][2][11] , \s[3][2][10] , 
        \s[3][2][9] , \s[3][2][8] , \s[3][2][7] , \s[3][2][6] , \s[3][2][5] , 
        \s[3][2][4] , \s[3][2][3] , \s[3][2][2] , \s[3][2][1] , \s[3][2][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X3_Y2 \ys[2].xs[3].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[3][2][36] ), .n_in_x({\n[3][2][35] , 
        \n[3][2][34] }), .n_in_y({\n[3][2][33] , \n[3][2][32] }), .n_in_data({
        \n[3][2][31] , \n[3][2][30] , \n[3][2][29] , \n[3][2][28] , 
        \n[3][2][27] , \n[3][2][26] , \n[3][2][25] , \n[3][2][24] , 
        \n[3][2][23] , \n[3][2][22] , \n[3][2][21] , \n[3][2][20] , 
        \n[3][2][19] , \n[3][2][18] , \n[3][2][17] , \n[3][2][16] , 
        \n[3][2][15] , \n[3][2][14] , \n[3][2][13] , \n[3][2][12] , 
        \n[3][2][11] , \n[3][2][10] , \n[3][2][9] , \n[3][2][8] , \n[3][2][7] , 
        \n[3][2][6] , \n[3][2][5] , \n[3][2][4] , \n[3][2][3] , \n[3][2][2] , 
        \n[3][2][1] , \n[3][2][0] }), .w_in_v(\w[3][2][36] ), .w_in_x({
        \w[3][2][35] , \w[3][2][34] }), .w_in_y({\w[3][2][33] , \w[3][2][32] }), .w_in_data({\w[3][2][31] , \w[3][2][30] , \w[3][2][29] , \w[3][2][28] , 
        \w[3][2][27] , \w[3][2][26] , \w[3][2][25] , \w[3][2][24] , 
        \w[3][2][23] , \w[3][2][22] , \w[3][2][21] , \w[3][2][20] , 
        \w[3][2][19] , \w[3][2][18] , \w[3][2][17] , \w[3][2][16] , 
        \w[3][2][15] , \w[3][2][14] , \w[3][2][13] , \w[3][2][12] , 
        \w[3][2][11] , \w[3][2][10] , \w[3][2][9] , \w[3][2][8] , \w[3][2][7] , 
        \w[3][2][6] , \w[3][2][5] , \w[3][2][4] , \w[3][2][3] , \w[3][2][2] , 
        \w[3][2][1] , \w[3][2][0] }), .i_v(\i[3][2][36] ), .i_x({\i[3][2][35] , 
        \i[3][2][34] }), .i_y({\i[3][2][33] , \i[3][2][32] }), .i_data({
        \i[3][2][31] , \i[3][2][30] , \i[3][2][29] , \i[3][2][28] , 
        \i[3][2][27] , \i[3][2][26] , \i[3][2][25] , \i[3][2][24] , 
        \i[3][2][23] , \i[3][2][22] , \i[3][2][21] , \i[3][2][20] , 
        \i[3][2][19] , \i[3][2][18] , \i[3][2][17] , \i[3][2][16] , 
        \i[3][2][15] , \i[3][2][14] , \i[3][2][13] , \i[3][2][12] , 
        \i[3][2][11] , \i[3][2][10] , \i[3][2][9] , \i[3][2][8] , \i[3][2][7] , 
        \i[3][2][6] , \i[3][2][5] , \i[3][2][4] , \i[3][2][3] , \i[3][2][2] , 
        \i[3][2][1] , \i[3][2][0] }), .e_b(\e_b[3][2] ), .w_b(\w_b[3][2] ), 
        .i_ack(\i_ack[3][2] ), .o_v(\o_v[3][2] ), .s_out_v(\s[3][2][36] ), 
        .s_out_x({\s[3][2][35] , \s[3][2][34] }), .s_out_y({\s[3][2][33] , 
        \s[3][2][32] }), .s_out_data({\s[3][2][31] , \s[3][2][30] , 
        \s[3][2][29] , \s[3][2][28] , \s[3][2][27] , \s[3][2][26] , 
        \s[3][2][25] , \s[3][2][24] , \s[3][2][23] , \s[3][2][22] , 
        \s[3][2][21] , \s[3][2][20] , \s[3][2][19] , \s[3][2][18] , 
        \s[3][2][17] , \s[3][2][16] , \s[3][2][15] , \s[3][2][14] , 
        \s[3][2][13] , \s[3][2][12] , \s[3][2][11] , \s[3][2][10] , 
        \s[3][2][9] , \s[3][2][8] , \s[3][2][7] , \s[3][2][6] , \s[3][2][5] , 
        \s[3][2][4] , \s[3][2][3] , \s[3][2][2] , \s[3][2][1] , \s[3][2][0] }), 
        .e_out_v(\e[3][2][36] ), .e_out_x({\e[3][2][35] , \e[3][2][34] }), 
        .e_out_y({\e[3][2][33] , \e[3][2][32] }), .e_out_data({\e[3][2][31] , 
        \e[3][2][30] , \e[3][2][29] , \e[3][2][28] , \e[3][2][27] , 
        \e[3][2][26] , \e[3][2][25] , \e[3][2][24] , \e[3][2][23] , 
        \e[3][2][22] , \e[3][2][21] , \e[3][2][20] , \e[3][2][19] , 
        \e[3][2][18] , \e[3][2][17] , \e[3][2][16] , \e[3][2][15] , 
        \e[3][2][14] , \e[3][2][13] , \e[3][2][12] , \e[3][2][11] , 
        \e[3][2][10] , \e[3][2][9] , \e[3][2][8] , \e[3][2][7] , \e[3][2][6] , 
        \e[3][2][5] , \e[3][2][4] , \e[3][2][3] , \e[3][2][2] , \e[3][2][1] , 
        \e[3][2][0] }) );
  low_swing_rx_375 \ys[2].xs[3].east_bp_rx  ( .i(\w_b_tx[0][2] ), .o(
        \e_b[3][2] ) );
  low_swing_tx_375 \ys[2].xs[3].west_bp_tx  ( .i(\w_b[3][2] ), .c(
        \w_b_tx[3][2] ) );
  low_swing_rx_374 \ys[2].xs[3].msg_txrx[0].north_rx  ( .i(\s_tx[3][1][0] ), 
        .o(\n[3][2][0] ) );
  low_swing_rx_373 \ys[2].xs[3].msg_txrx[0].west_rx  ( .i(\e_tx[2][2][0] ), 
        .o(\w[3][2][0] ) );
  low_swing_tx_374 \ys[2].xs[3].msg_txrx[0].south_tx  ( .i(\s[3][2][0] ), .c(
        \s_tx[3][2][0] ) );
  low_swing_tx_373 \ys[2].xs[3].msg_txrx[0].east_tx  ( .i(\e[3][2][0] ), .c(
        \e_tx[3][2][0] ) );
  low_swing_rx_372 \ys[2].xs[3].msg_txrx[1].north_rx  ( .i(\s_tx[3][1][1] ), 
        .o(\n[3][2][1] ) );
  low_swing_rx_371 \ys[2].xs[3].msg_txrx[1].west_rx  ( .i(\e_tx[2][2][1] ), 
        .o(\w[3][2][1] ) );
  low_swing_tx_372 \ys[2].xs[3].msg_txrx[1].south_tx  ( .i(\s[3][2][1] ), .c(
        \s_tx[3][2][1] ) );
  low_swing_tx_371 \ys[2].xs[3].msg_txrx[1].east_tx  ( .i(\e[3][2][1] ), .c(
        \e_tx[3][2][1] ) );
  low_swing_rx_370 \ys[2].xs[3].msg_txrx[2].north_rx  ( .i(\s_tx[3][1][2] ), 
        .o(\n[3][2][2] ) );
  low_swing_rx_369 \ys[2].xs[3].msg_txrx[2].west_rx  ( .i(\e_tx[2][2][2] ), 
        .o(\w[3][2][2] ) );
  low_swing_tx_370 \ys[2].xs[3].msg_txrx[2].south_tx  ( .i(\s[3][2][2] ), .c(
        \s_tx[3][2][2] ) );
  low_swing_tx_369 \ys[2].xs[3].msg_txrx[2].east_tx  ( .i(\e[3][2][2] ), .c(
        \e_tx[3][2][2] ) );
  low_swing_rx_368 \ys[2].xs[3].msg_txrx[3].north_rx  ( .i(\s_tx[3][1][3] ), 
        .o(\n[3][2][3] ) );
  low_swing_rx_367 \ys[2].xs[3].msg_txrx[3].west_rx  ( .i(\e_tx[2][2][3] ), 
        .o(\w[3][2][3] ) );
  low_swing_tx_368 \ys[2].xs[3].msg_txrx[3].south_tx  ( .i(\s[3][2][3] ), .c(
        \s_tx[3][2][3] ) );
  low_swing_tx_367 \ys[2].xs[3].msg_txrx[3].east_tx  ( .i(\e[3][2][3] ), .c(
        \e_tx[3][2][3] ) );
  low_swing_rx_366 \ys[2].xs[3].msg_txrx[4].north_rx  ( .i(\s_tx[3][1][4] ), 
        .o(\n[3][2][4] ) );
  low_swing_rx_365 \ys[2].xs[3].msg_txrx[4].west_rx  ( .i(\e_tx[2][2][4] ), 
        .o(\w[3][2][4] ) );
  low_swing_tx_366 \ys[2].xs[3].msg_txrx[4].south_tx  ( .i(\s[3][2][4] ), .c(
        \s_tx[3][2][4] ) );
  low_swing_tx_365 \ys[2].xs[3].msg_txrx[4].east_tx  ( .i(\e[3][2][4] ), .c(
        \e_tx[3][2][4] ) );
  low_swing_rx_364 \ys[2].xs[3].msg_txrx[5].north_rx  ( .i(\s_tx[3][1][5] ), 
        .o(\n[3][2][5] ) );
  low_swing_rx_363 \ys[2].xs[3].msg_txrx[5].west_rx  ( .i(\e_tx[2][2][5] ), 
        .o(\w[3][2][5] ) );
  low_swing_tx_364 \ys[2].xs[3].msg_txrx[5].south_tx  ( .i(\s[3][2][5] ), .c(
        \s_tx[3][2][5] ) );
  low_swing_tx_363 \ys[2].xs[3].msg_txrx[5].east_tx  ( .i(\e[3][2][5] ), .c(
        \e_tx[3][2][5] ) );
  low_swing_rx_362 \ys[2].xs[3].msg_txrx[6].north_rx  ( .i(\s_tx[3][1][6] ), 
        .o(\n[3][2][6] ) );
  low_swing_rx_361 \ys[2].xs[3].msg_txrx[6].west_rx  ( .i(\e_tx[2][2][6] ), 
        .o(\w[3][2][6] ) );
  low_swing_tx_362 \ys[2].xs[3].msg_txrx[6].south_tx  ( .i(\s[3][2][6] ), .c(
        \s_tx[3][2][6] ) );
  low_swing_tx_361 \ys[2].xs[3].msg_txrx[6].east_tx  ( .i(\e[3][2][6] ), .c(
        \e_tx[3][2][6] ) );
  low_swing_rx_360 \ys[2].xs[3].msg_txrx[7].north_rx  ( .i(\s_tx[3][1][7] ), 
        .o(\n[3][2][7] ) );
  low_swing_rx_359 \ys[2].xs[3].msg_txrx[7].west_rx  ( .i(\e_tx[2][2][7] ), 
        .o(\w[3][2][7] ) );
  low_swing_tx_360 \ys[2].xs[3].msg_txrx[7].south_tx  ( .i(\s[3][2][7] ), .c(
        \s_tx[3][2][7] ) );
  low_swing_tx_359 \ys[2].xs[3].msg_txrx[7].east_tx  ( .i(\e[3][2][7] ), .c(
        \e_tx[3][2][7] ) );
  low_swing_rx_358 \ys[2].xs[3].msg_txrx[8].north_rx  ( .i(\s_tx[3][1][8] ), 
        .o(\n[3][2][8] ) );
  low_swing_rx_357 \ys[2].xs[3].msg_txrx[8].west_rx  ( .i(\e_tx[2][2][8] ), 
        .o(\w[3][2][8] ) );
  low_swing_tx_358 \ys[2].xs[3].msg_txrx[8].south_tx  ( .i(\s[3][2][8] ), .c(
        \s_tx[3][2][8] ) );
  low_swing_tx_357 \ys[2].xs[3].msg_txrx[8].east_tx  ( .i(\e[3][2][8] ), .c(
        \e_tx[3][2][8] ) );
  low_swing_rx_356 \ys[2].xs[3].msg_txrx[9].north_rx  ( .i(\s_tx[3][1][9] ), 
        .o(\n[3][2][9] ) );
  low_swing_rx_355 \ys[2].xs[3].msg_txrx[9].west_rx  ( .i(\e_tx[2][2][9] ), 
        .o(\w[3][2][9] ) );
  low_swing_tx_356 \ys[2].xs[3].msg_txrx[9].south_tx  ( .i(\s[3][2][9] ), .c(
        \s_tx[3][2][9] ) );
  low_swing_tx_355 \ys[2].xs[3].msg_txrx[9].east_tx  ( .i(\e[3][2][9] ), .c(
        \e_tx[3][2][9] ) );
  low_swing_rx_354 \ys[2].xs[3].msg_txrx[10].north_rx  ( .i(\s_tx[3][1][10] ), 
        .o(\n[3][2][10] ) );
  low_swing_rx_353 \ys[2].xs[3].msg_txrx[10].west_rx  ( .i(\e_tx[2][2][10] ), 
        .o(\w[3][2][10] ) );
  low_swing_tx_354 \ys[2].xs[3].msg_txrx[10].south_tx  ( .i(\s[3][2][10] ), 
        .c(\s_tx[3][2][10] ) );
  low_swing_tx_353 \ys[2].xs[3].msg_txrx[10].east_tx  ( .i(\e[3][2][10] ), .c(
        \e_tx[3][2][10] ) );
  low_swing_rx_352 \ys[2].xs[3].msg_txrx[11].north_rx  ( .i(\s_tx[3][1][11] ), 
        .o(\n[3][2][11] ) );
  low_swing_rx_351 \ys[2].xs[3].msg_txrx[11].west_rx  ( .i(\e_tx[2][2][11] ), 
        .o(\w[3][2][11] ) );
  low_swing_tx_352 \ys[2].xs[3].msg_txrx[11].south_tx  ( .i(\s[3][2][11] ), 
        .c(\s_tx[3][2][11] ) );
  low_swing_tx_351 \ys[2].xs[3].msg_txrx[11].east_tx  ( .i(\e[3][2][11] ), .c(
        \e_tx[3][2][11] ) );
  low_swing_rx_350 \ys[2].xs[3].msg_txrx[12].north_rx  ( .i(\s_tx[3][1][12] ), 
        .o(\n[3][2][12] ) );
  low_swing_rx_349 \ys[2].xs[3].msg_txrx[12].west_rx  ( .i(\e_tx[2][2][12] ), 
        .o(\w[3][2][12] ) );
  low_swing_tx_350 \ys[2].xs[3].msg_txrx[12].south_tx  ( .i(\s[3][2][12] ), 
        .c(\s_tx[3][2][12] ) );
  low_swing_tx_349 \ys[2].xs[3].msg_txrx[12].east_tx  ( .i(\e[3][2][12] ), .c(
        \e_tx[3][2][12] ) );
  low_swing_rx_348 \ys[2].xs[3].msg_txrx[13].north_rx  ( .i(\s_tx[3][1][13] ), 
        .o(\n[3][2][13] ) );
  low_swing_rx_347 \ys[2].xs[3].msg_txrx[13].west_rx  ( .i(\e_tx[2][2][13] ), 
        .o(\w[3][2][13] ) );
  low_swing_tx_348 \ys[2].xs[3].msg_txrx[13].south_tx  ( .i(\s[3][2][13] ), 
        .c(\s_tx[3][2][13] ) );
  low_swing_tx_347 \ys[2].xs[3].msg_txrx[13].east_tx  ( .i(\e[3][2][13] ), .c(
        \e_tx[3][2][13] ) );
  low_swing_rx_346 \ys[2].xs[3].msg_txrx[14].north_rx  ( .i(\s_tx[3][1][14] ), 
        .o(\n[3][2][14] ) );
  low_swing_rx_345 \ys[2].xs[3].msg_txrx[14].west_rx  ( .i(\e_tx[2][2][14] ), 
        .o(\w[3][2][14] ) );
  low_swing_tx_346 \ys[2].xs[3].msg_txrx[14].south_tx  ( .i(\s[3][2][14] ), 
        .c(\s_tx[3][2][14] ) );
  low_swing_tx_345 \ys[2].xs[3].msg_txrx[14].east_tx  ( .i(\e[3][2][14] ), .c(
        \e_tx[3][2][14] ) );
  low_swing_rx_344 \ys[2].xs[3].msg_txrx[15].north_rx  ( .i(\s_tx[3][1][15] ), 
        .o(\n[3][2][15] ) );
  low_swing_rx_343 \ys[2].xs[3].msg_txrx[15].west_rx  ( .i(\e_tx[2][2][15] ), 
        .o(\w[3][2][15] ) );
  low_swing_tx_344 \ys[2].xs[3].msg_txrx[15].south_tx  ( .i(\s[3][2][15] ), 
        .c(\s_tx[3][2][15] ) );
  low_swing_tx_343 \ys[2].xs[3].msg_txrx[15].east_tx  ( .i(\e[3][2][15] ), .c(
        \e_tx[3][2][15] ) );
  low_swing_rx_342 \ys[2].xs[3].msg_txrx[16].north_rx  ( .i(\s_tx[3][1][16] ), 
        .o(\n[3][2][16] ) );
  low_swing_rx_341 \ys[2].xs[3].msg_txrx[16].west_rx  ( .i(\e_tx[2][2][16] ), 
        .o(\w[3][2][16] ) );
  low_swing_tx_342 \ys[2].xs[3].msg_txrx[16].south_tx  ( .i(\s[3][2][16] ), 
        .c(\s_tx[3][2][16] ) );
  low_swing_tx_341 \ys[2].xs[3].msg_txrx[16].east_tx  ( .i(\e[3][2][16] ), .c(
        \e_tx[3][2][16] ) );
  low_swing_rx_340 \ys[2].xs[3].msg_txrx[17].north_rx  ( .i(\s_tx[3][1][17] ), 
        .o(\n[3][2][17] ) );
  low_swing_rx_339 \ys[2].xs[3].msg_txrx[17].west_rx  ( .i(\e_tx[2][2][17] ), 
        .o(\w[3][2][17] ) );
  low_swing_tx_340 \ys[2].xs[3].msg_txrx[17].south_tx  ( .i(\s[3][2][17] ), 
        .c(\s_tx[3][2][17] ) );
  low_swing_tx_339 \ys[2].xs[3].msg_txrx[17].east_tx  ( .i(\e[3][2][17] ), .c(
        \e_tx[3][2][17] ) );
  low_swing_rx_338 \ys[2].xs[3].msg_txrx[18].north_rx  ( .i(\s_tx[3][1][18] ), 
        .o(\n[3][2][18] ) );
  low_swing_rx_337 \ys[2].xs[3].msg_txrx[18].west_rx  ( .i(\e_tx[2][2][18] ), 
        .o(\w[3][2][18] ) );
  low_swing_tx_338 \ys[2].xs[3].msg_txrx[18].south_tx  ( .i(\s[3][2][18] ), 
        .c(\s_tx[3][2][18] ) );
  low_swing_tx_337 \ys[2].xs[3].msg_txrx[18].east_tx  ( .i(\e[3][2][18] ), .c(
        \e_tx[3][2][18] ) );
  low_swing_rx_336 \ys[2].xs[3].msg_txrx[19].north_rx  ( .i(\s_tx[3][1][19] ), 
        .o(\n[3][2][19] ) );
  low_swing_rx_335 \ys[2].xs[3].msg_txrx[19].west_rx  ( .i(\e_tx[2][2][19] ), 
        .o(\w[3][2][19] ) );
  low_swing_tx_336 \ys[2].xs[3].msg_txrx[19].south_tx  ( .i(\s[3][2][19] ), 
        .c(\s_tx[3][2][19] ) );
  low_swing_tx_335 \ys[2].xs[3].msg_txrx[19].east_tx  ( .i(\e[3][2][19] ), .c(
        \e_tx[3][2][19] ) );
  low_swing_rx_334 \ys[2].xs[3].msg_txrx[20].north_rx  ( .i(\s_tx[3][1][20] ), 
        .o(\n[3][2][20] ) );
  low_swing_rx_333 \ys[2].xs[3].msg_txrx[20].west_rx  ( .i(\e_tx[2][2][20] ), 
        .o(\w[3][2][20] ) );
  low_swing_tx_334 \ys[2].xs[3].msg_txrx[20].south_tx  ( .i(\s[3][2][20] ), 
        .c(\s_tx[3][2][20] ) );
  low_swing_tx_333 \ys[2].xs[3].msg_txrx[20].east_tx  ( .i(\e[3][2][20] ), .c(
        \e_tx[3][2][20] ) );
  low_swing_rx_332 \ys[2].xs[3].msg_txrx[21].north_rx  ( .i(\s_tx[3][1][21] ), 
        .o(\n[3][2][21] ) );
  low_swing_rx_331 \ys[2].xs[3].msg_txrx[21].west_rx  ( .i(\e_tx[2][2][21] ), 
        .o(\w[3][2][21] ) );
  low_swing_tx_332 \ys[2].xs[3].msg_txrx[21].south_tx  ( .i(\s[3][2][21] ), 
        .c(\s_tx[3][2][21] ) );
  low_swing_tx_331 \ys[2].xs[3].msg_txrx[21].east_tx  ( .i(\e[3][2][21] ), .c(
        \e_tx[3][2][21] ) );
  low_swing_rx_330 \ys[2].xs[3].msg_txrx[22].north_rx  ( .i(\s_tx[3][1][22] ), 
        .o(\n[3][2][22] ) );
  low_swing_rx_329 \ys[2].xs[3].msg_txrx[22].west_rx  ( .i(\e_tx[2][2][22] ), 
        .o(\w[3][2][22] ) );
  low_swing_tx_330 \ys[2].xs[3].msg_txrx[22].south_tx  ( .i(\s[3][2][22] ), 
        .c(\s_tx[3][2][22] ) );
  low_swing_tx_329 \ys[2].xs[3].msg_txrx[22].east_tx  ( .i(\e[3][2][22] ), .c(
        \e_tx[3][2][22] ) );
  low_swing_rx_328 \ys[2].xs[3].msg_txrx[23].north_rx  ( .i(\s_tx[3][1][23] ), 
        .o(\n[3][2][23] ) );
  low_swing_rx_327 \ys[2].xs[3].msg_txrx[23].west_rx  ( .i(\e_tx[2][2][23] ), 
        .o(\w[3][2][23] ) );
  low_swing_tx_328 \ys[2].xs[3].msg_txrx[23].south_tx  ( .i(\s[3][2][23] ), 
        .c(\s_tx[3][2][23] ) );
  low_swing_tx_327 \ys[2].xs[3].msg_txrx[23].east_tx  ( .i(\e[3][2][23] ), .c(
        \e_tx[3][2][23] ) );
  low_swing_rx_326 \ys[2].xs[3].msg_txrx[24].north_rx  ( .i(\s_tx[3][1][24] ), 
        .o(\n[3][2][24] ) );
  low_swing_rx_325 \ys[2].xs[3].msg_txrx[24].west_rx  ( .i(\e_tx[2][2][24] ), 
        .o(\w[3][2][24] ) );
  low_swing_tx_326 \ys[2].xs[3].msg_txrx[24].south_tx  ( .i(\s[3][2][24] ), 
        .c(\s_tx[3][2][24] ) );
  low_swing_tx_325 \ys[2].xs[3].msg_txrx[24].east_tx  ( .i(\e[3][2][24] ), .c(
        \e_tx[3][2][24] ) );
  low_swing_rx_324 \ys[2].xs[3].msg_txrx[25].north_rx  ( .i(\s_tx[3][1][25] ), 
        .o(\n[3][2][25] ) );
  low_swing_rx_323 \ys[2].xs[3].msg_txrx[25].west_rx  ( .i(\e_tx[2][2][25] ), 
        .o(\w[3][2][25] ) );
  low_swing_tx_324 \ys[2].xs[3].msg_txrx[25].south_tx  ( .i(\s[3][2][25] ), 
        .c(\s_tx[3][2][25] ) );
  low_swing_tx_323 \ys[2].xs[3].msg_txrx[25].east_tx  ( .i(\e[3][2][25] ), .c(
        \e_tx[3][2][25] ) );
  low_swing_rx_322 \ys[2].xs[3].msg_txrx[26].north_rx  ( .i(\s_tx[3][1][26] ), 
        .o(\n[3][2][26] ) );
  low_swing_rx_321 \ys[2].xs[3].msg_txrx[26].west_rx  ( .i(\e_tx[2][2][26] ), 
        .o(\w[3][2][26] ) );
  low_swing_tx_322 \ys[2].xs[3].msg_txrx[26].south_tx  ( .i(\s[3][2][26] ), 
        .c(\s_tx[3][2][26] ) );
  low_swing_tx_321 \ys[2].xs[3].msg_txrx[26].east_tx  ( .i(\e[3][2][26] ), .c(
        \e_tx[3][2][26] ) );
  low_swing_rx_320 \ys[2].xs[3].msg_txrx[27].north_rx  ( .i(\s_tx[3][1][27] ), 
        .o(\n[3][2][27] ) );
  low_swing_rx_319 \ys[2].xs[3].msg_txrx[27].west_rx  ( .i(\e_tx[2][2][27] ), 
        .o(\w[3][2][27] ) );
  low_swing_tx_320 \ys[2].xs[3].msg_txrx[27].south_tx  ( .i(\s[3][2][27] ), 
        .c(\s_tx[3][2][27] ) );
  low_swing_tx_319 \ys[2].xs[3].msg_txrx[27].east_tx  ( .i(\e[3][2][27] ), .c(
        \e_tx[3][2][27] ) );
  low_swing_rx_318 \ys[2].xs[3].msg_txrx[28].north_rx  ( .i(\s_tx[3][1][28] ), 
        .o(\n[3][2][28] ) );
  low_swing_rx_317 \ys[2].xs[3].msg_txrx[28].west_rx  ( .i(\e_tx[2][2][28] ), 
        .o(\w[3][2][28] ) );
  low_swing_tx_318 \ys[2].xs[3].msg_txrx[28].south_tx  ( .i(\s[3][2][28] ), 
        .c(\s_tx[3][2][28] ) );
  low_swing_tx_317 \ys[2].xs[3].msg_txrx[28].east_tx  ( .i(\e[3][2][28] ), .c(
        \e_tx[3][2][28] ) );
  low_swing_rx_316 \ys[2].xs[3].msg_txrx[29].north_rx  ( .i(\s_tx[3][1][29] ), 
        .o(\n[3][2][29] ) );
  low_swing_rx_315 \ys[2].xs[3].msg_txrx[29].west_rx  ( .i(\e_tx[2][2][29] ), 
        .o(\w[3][2][29] ) );
  low_swing_tx_316 \ys[2].xs[3].msg_txrx[29].south_tx  ( .i(\s[3][2][29] ), 
        .c(\s_tx[3][2][29] ) );
  low_swing_tx_315 \ys[2].xs[3].msg_txrx[29].east_tx  ( .i(\e[3][2][29] ), .c(
        \e_tx[3][2][29] ) );
  low_swing_rx_314 \ys[2].xs[3].msg_txrx[30].north_rx  ( .i(\s_tx[3][1][30] ), 
        .o(\n[3][2][30] ) );
  low_swing_rx_313 \ys[2].xs[3].msg_txrx[30].west_rx  ( .i(\e_tx[2][2][30] ), 
        .o(\w[3][2][30] ) );
  low_swing_tx_314 \ys[2].xs[3].msg_txrx[30].south_tx  ( .i(\s[3][2][30] ), 
        .c(\s_tx[3][2][30] ) );
  low_swing_tx_313 \ys[2].xs[3].msg_txrx[30].east_tx  ( .i(\e[3][2][30] ), .c(
        \e_tx[3][2][30] ) );
  low_swing_rx_312 \ys[2].xs[3].msg_txrx[31].north_rx  ( .i(\s_tx[3][1][31] ), 
        .o(\n[3][2][31] ) );
  low_swing_rx_311 \ys[2].xs[3].msg_txrx[31].west_rx  ( .i(\e_tx[2][2][31] ), 
        .o(\w[3][2][31] ) );
  low_swing_tx_312 \ys[2].xs[3].msg_txrx[31].south_tx  ( .i(\s[3][2][31] ), 
        .c(\s_tx[3][2][31] ) );
  low_swing_tx_311 \ys[2].xs[3].msg_txrx[31].east_tx  ( .i(\e[3][2][31] ), .c(
        \e_tx[3][2][31] ) );
  low_swing_rx_310 \ys[2].xs[3].msg_txrx[32].north_rx  ( .i(\s_tx[3][1][32] ), 
        .o(\n[3][2][32] ) );
  low_swing_rx_309 \ys[2].xs[3].msg_txrx[32].west_rx  ( .i(\e_tx[2][2][32] ), 
        .o(\w[3][2][32] ) );
  low_swing_tx_310 \ys[2].xs[3].msg_txrx[32].south_tx  ( .i(\s[3][2][32] ), 
        .c(\s_tx[3][2][32] ) );
  low_swing_tx_309 \ys[2].xs[3].msg_txrx[32].east_tx  ( .i(\e[3][2][32] ), .c(
        \e_tx[3][2][32] ) );
  low_swing_rx_308 \ys[2].xs[3].msg_txrx[33].north_rx  ( .i(\s_tx[3][1][33] ), 
        .o(\n[3][2][33] ) );
  low_swing_rx_307 \ys[2].xs[3].msg_txrx[33].west_rx  ( .i(\e_tx[2][2][33] ), 
        .o(\w[3][2][33] ) );
  low_swing_tx_308 \ys[2].xs[3].msg_txrx[33].south_tx  ( .i(\s[3][2][33] ), 
        .c(\s_tx[3][2][33] ) );
  low_swing_tx_307 \ys[2].xs[3].msg_txrx[33].east_tx  ( .i(\e[3][2][33] ), .c(
        \e_tx[3][2][33] ) );
  low_swing_rx_306 \ys[2].xs[3].msg_txrx[34].north_rx  ( .i(\s_tx[3][1][34] ), 
        .o(\n[3][2][34] ) );
  low_swing_rx_305 \ys[2].xs[3].msg_txrx[34].west_rx  ( .i(\e_tx[2][2][34] ), 
        .o(\w[3][2][34] ) );
  low_swing_tx_306 \ys[2].xs[3].msg_txrx[34].south_tx  ( .i(\s[3][2][34] ), 
        .c(\s_tx[3][2][34] ) );
  low_swing_tx_305 \ys[2].xs[3].msg_txrx[34].east_tx  ( .i(\e[3][2][34] ), .c(
        \e_tx[3][2][34] ) );
  low_swing_rx_304 \ys[2].xs[3].msg_txrx[35].north_rx  ( .i(\s_tx[3][1][35] ), 
        .o(\n[3][2][35] ) );
  low_swing_rx_303 \ys[2].xs[3].msg_txrx[35].west_rx  ( .i(\e_tx[2][2][35] ), 
        .o(\w[3][2][35] ) );
  low_swing_tx_304 \ys[2].xs[3].msg_txrx[35].south_tx  ( .i(\s[3][2][35] ), 
        .c(\s_tx[3][2][35] ) );
  low_swing_tx_303 \ys[2].xs[3].msg_txrx[35].east_tx  ( .i(\e[3][2][35] ), .c(
        \e_tx[3][2][35] ) );
  low_swing_rx_302 \ys[2].xs[3].msg_txrx[36].north_rx  ( .i(\s_tx[3][1][36] ), 
        .o(\n[3][2][36] ) );
  low_swing_rx_301 \ys[2].xs[3].msg_txrx[36].west_rx  ( .i(\e_tx[2][2][36] ), 
        .o(\w[3][2][36] ) );
  low_swing_tx_302 \ys[2].xs[3].msg_txrx[36].south_tx  ( .i(\s[3][2][36] ), 
        .c(\s_tx[3][2][36] ) );
  low_swing_tx_301 \ys[2].xs[3].msg_txrx[36].east_tx  ( .i(\e[3][2][36] ), .c(
        \e_tx[3][2][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X0_Y3_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[3].xs[0].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[0][3] ), .i_v(\i[0][3][36] ), 
        .i_x({\i[0][3][35] , \i[0][3][34] }), .i_y({\i[0][3][33] , 
        \i[0][3][32] }), .i_data({\i[0][3][31] , \i[0][3][30] , \i[0][3][29] , 
        \i[0][3][28] , \i[0][3][27] , \i[0][3][26] , \i[0][3][25] , 
        \i[0][3][24] , \i[0][3][23] , \i[0][3][22] , \i[0][3][21] , 
        \i[0][3][20] , \i[0][3][19] , \i[0][3][18] , \i[0][3][17] , 
        \i[0][3][16] , \i[0][3][15] , \i[0][3][14] , \i[0][3][13] , 
        \i[0][3][12] , \i[0][3][11] , \i[0][3][10] , \i[0][3][9] , 
        \i[0][3][8] , \i[0][3][7] , \i[0][3][6] , \i[0][3][5] , \i[0][3][4] , 
        \i[0][3][3] , \i[0][3][2] , \i[0][3][1] , \i[0][3][0] }), .o_v(
        \o_v[0][3] ), .o_x({\s[0][3][35] , \s[0][3][34] }), .o_y({
        \s[0][3][33] , \s[0][3][32] }), .o_data({\s[0][3][31] , \s[0][3][30] , 
        \s[0][3][29] , \s[0][3][28] , \s[0][3][27] , \s[0][3][26] , 
        \s[0][3][25] , \s[0][3][24] , \s[0][3][23] , \s[0][3][22] , 
        \s[0][3][21] , \s[0][3][20] , \s[0][3][19] , \s[0][3][18] , 
        \s[0][3][17] , \s[0][3][16] , \s[0][3][15] , \s[0][3][14] , 
        \s[0][3][13] , \s[0][3][12] , \s[0][3][11] , \s[0][3][10] , 
        \s[0][3][9] , \s[0][3][8] , \s[0][3][7] , \s[0][3][6] , \s[0][3][5] , 
        \s[0][3][4] , \s[0][3][3] , \s[0][3][2] , \s[0][3][1] , \s[0][3][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X0_Y3 \ys[3].xs[0].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[0][3][36] ), .n_in_x({\n[0][3][35] , 
        \n[0][3][34] }), .n_in_y({\n[0][3][33] , \n[0][3][32] }), .n_in_data({
        \n[0][3][31] , \n[0][3][30] , \n[0][3][29] , \n[0][3][28] , 
        \n[0][3][27] , \n[0][3][26] , \n[0][3][25] , \n[0][3][24] , 
        \n[0][3][23] , \n[0][3][22] , \n[0][3][21] , \n[0][3][20] , 
        \n[0][3][19] , \n[0][3][18] , \n[0][3][17] , \n[0][3][16] , 
        \n[0][3][15] , \n[0][3][14] , \n[0][3][13] , \n[0][3][12] , 
        \n[0][3][11] , \n[0][3][10] , \n[0][3][9] , \n[0][3][8] , \n[0][3][7] , 
        \n[0][3][6] , \n[0][3][5] , \n[0][3][4] , \n[0][3][3] , \n[0][3][2] , 
        \n[0][3][1] , \n[0][3][0] }), .w_in_v(\w[0][3][36] ), .w_in_x({
        \w[0][3][35] , \w[0][3][34] }), .w_in_y({\w[0][3][33] , \w[0][3][32] }), .w_in_data({\w[0][3][31] , \w[0][3][30] , \w[0][3][29] , \w[0][3][28] , 
        \w[0][3][27] , \w[0][3][26] , \w[0][3][25] , \w[0][3][24] , 
        \w[0][3][23] , \w[0][3][22] , \w[0][3][21] , \w[0][3][20] , 
        \w[0][3][19] , \w[0][3][18] , \w[0][3][17] , \w[0][3][16] , 
        \w[0][3][15] , \w[0][3][14] , \w[0][3][13] , \w[0][3][12] , 
        \w[0][3][11] , \w[0][3][10] , \w[0][3][9] , \w[0][3][8] , \w[0][3][7] , 
        \w[0][3][6] , \w[0][3][5] , \w[0][3][4] , \w[0][3][3] , \w[0][3][2] , 
        \w[0][3][1] , \w[0][3][0] }), .i_v(\i[0][3][36] ), .i_x({\i[0][3][35] , 
        \i[0][3][34] }), .i_y({\i[0][3][33] , \i[0][3][32] }), .i_data({
        \i[0][3][31] , \i[0][3][30] , \i[0][3][29] , \i[0][3][28] , 
        \i[0][3][27] , \i[0][3][26] , \i[0][3][25] , \i[0][3][24] , 
        \i[0][3][23] , \i[0][3][22] , \i[0][3][21] , \i[0][3][20] , 
        \i[0][3][19] , \i[0][3][18] , \i[0][3][17] , \i[0][3][16] , 
        \i[0][3][15] , \i[0][3][14] , \i[0][3][13] , \i[0][3][12] , 
        \i[0][3][11] , \i[0][3][10] , \i[0][3][9] , \i[0][3][8] , \i[0][3][7] , 
        \i[0][3][6] , \i[0][3][5] , \i[0][3][4] , \i[0][3][3] , \i[0][3][2] , 
        \i[0][3][1] , \i[0][3][0] }), .e_b(\e_b[0][3] ), .w_b(\w_b[0][3] ), 
        .i_ack(\i_ack[0][3] ), .o_v(\o_v[0][3] ), .s_out_v(\s[0][3][36] ), 
        .s_out_x({\s[0][3][35] , \s[0][3][34] }), .s_out_y({\s[0][3][33] , 
        \s[0][3][32] }), .s_out_data({\s[0][3][31] , \s[0][3][30] , 
        \s[0][3][29] , \s[0][3][28] , \s[0][3][27] , \s[0][3][26] , 
        \s[0][3][25] , \s[0][3][24] , \s[0][3][23] , \s[0][3][22] , 
        \s[0][3][21] , \s[0][3][20] , \s[0][3][19] , \s[0][3][18] , 
        \s[0][3][17] , \s[0][3][16] , \s[0][3][15] , \s[0][3][14] , 
        \s[0][3][13] , \s[0][3][12] , \s[0][3][11] , \s[0][3][10] , 
        \s[0][3][9] , \s[0][3][8] , \s[0][3][7] , \s[0][3][6] , \s[0][3][5] , 
        \s[0][3][4] , \s[0][3][3] , \s[0][3][2] , \s[0][3][1] , \s[0][3][0] }), 
        .e_out_v(\e[0][3][36] ), .e_out_x({\e[0][3][35] , \e[0][3][34] }), 
        .e_out_y({\e[0][3][33] , \e[0][3][32] }), .e_out_data({\e[0][3][31] , 
        \e[0][3][30] , \e[0][3][29] , \e[0][3][28] , \e[0][3][27] , 
        \e[0][3][26] , \e[0][3][25] , \e[0][3][24] , \e[0][3][23] , 
        \e[0][3][22] , \e[0][3][21] , \e[0][3][20] , \e[0][3][19] , 
        \e[0][3][18] , \e[0][3][17] , \e[0][3][16] , \e[0][3][15] , 
        \e[0][3][14] , \e[0][3][13] , \e[0][3][12] , \e[0][3][11] , 
        \e[0][3][10] , \e[0][3][9] , \e[0][3][8] , \e[0][3][7] , \e[0][3][6] , 
        \e[0][3][5] , \e[0][3][4] , \e[0][3][3] , \e[0][3][2] , \e[0][3][1] , 
        \e[0][3][0] }) );
  low_swing_rx_300 \ys[3].xs[0].east_bp_rx  ( .i(\w_b_tx[1][3] ), .o(
        \e_b[0][3] ) );
  low_swing_tx_300 \ys[3].xs[0].west_bp_tx  ( .i(\w_b[0][3] ), .c(
        \w_b_tx[0][3] ) );
  low_swing_rx_299 \ys[3].xs[0].msg_txrx[0].north_rx  ( .i(\s_tx[0][2][0] ), 
        .o(\n[0][3][0] ) );
  low_swing_rx_298 \ys[3].xs[0].msg_txrx[0].west_rx  ( .i(\e_tx[3][3][0] ), 
        .o(\w[0][3][0] ) );
  low_swing_tx_299 \ys[3].xs[0].msg_txrx[0].south_tx  ( .i(\s[0][3][0] ), .c(
        \s_tx[0][3][0] ) );
  low_swing_tx_298 \ys[3].xs[0].msg_txrx[0].east_tx  ( .i(\e[0][3][0] ), .c(
        \e_tx[0][3][0] ) );
  low_swing_rx_297 \ys[3].xs[0].msg_txrx[1].north_rx  ( .i(\s_tx[0][2][1] ), 
        .o(\n[0][3][1] ) );
  low_swing_rx_296 \ys[3].xs[0].msg_txrx[1].west_rx  ( .i(\e_tx[3][3][1] ), 
        .o(\w[0][3][1] ) );
  low_swing_tx_297 \ys[3].xs[0].msg_txrx[1].south_tx  ( .i(\s[0][3][1] ), .c(
        \s_tx[0][3][1] ) );
  low_swing_tx_296 \ys[3].xs[0].msg_txrx[1].east_tx  ( .i(\e[0][3][1] ), .c(
        \e_tx[0][3][1] ) );
  low_swing_rx_295 \ys[3].xs[0].msg_txrx[2].north_rx  ( .i(\s_tx[0][2][2] ), 
        .o(\n[0][3][2] ) );
  low_swing_rx_294 \ys[3].xs[0].msg_txrx[2].west_rx  ( .i(\e_tx[3][3][2] ), 
        .o(\w[0][3][2] ) );
  low_swing_tx_295 \ys[3].xs[0].msg_txrx[2].south_tx  ( .i(\s[0][3][2] ), .c(
        \s_tx[0][3][2] ) );
  low_swing_tx_294 \ys[3].xs[0].msg_txrx[2].east_tx  ( .i(\e[0][3][2] ), .c(
        \e_tx[0][3][2] ) );
  low_swing_rx_293 \ys[3].xs[0].msg_txrx[3].north_rx  ( .i(\s_tx[0][2][3] ), 
        .o(\n[0][3][3] ) );
  low_swing_rx_292 \ys[3].xs[0].msg_txrx[3].west_rx  ( .i(\e_tx[3][3][3] ), 
        .o(\w[0][3][3] ) );
  low_swing_tx_293 \ys[3].xs[0].msg_txrx[3].south_tx  ( .i(\s[0][3][3] ), .c(
        \s_tx[0][3][3] ) );
  low_swing_tx_292 \ys[3].xs[0].msg_txrx[3].east_tx  ( .i(\e[0][3][3] ), .c(
        \e_tx[0][3][3] ) );
  low_swing_rx_291 \ys[3].xs[0].msg_txrx[4].north_rx  ( .i(\s_tx[0][2][4] ), 
        .o(\n[0][3][4] ) );
  low_swing_rx_290 \ys[3].xs[0].msg_txrx[4].west_rx  ( .i(\e_tx[3][3][4] ), 
        .o(\w[0][3][4] ) );
  low_swing_tx_291 \ys[3].xs[0].msg_txrx[4].south_tx  ( .i(\s[0][3][4] ), .c(
        \s_tx[0][3][4] ) );
  low_swing_tx_290 \ys[3].xs[0].msg_txrx[4].east_tx  ( .i(\e[0][3][4] ), .c(
        \e_tx[0][3][4] ) );
  low_swing_rx_289 \ys[3].xs[0].msg_txrx[5].north_rx  ( .i(\s_tx[0][2][5] ), 
        .o(\n[0][3][5] ) );
  low_swing_rx_288 \ys[3].xs[0].msg_txrx[5].west_rx  ( .i(\e_tx[3][3][5] ), 
        .o(\w[0][3][5] ) );
  low_swing_tx_289 \ys[3].xs[0].msg_txrx[5].south_tx  ( .i(\s[0][3][5] ), .c(
        \s_tx[0][3][5] ) );
  low_swing_tx_288 \ys[3].xs[0].msg_txrx[5].east_tx  ( .i(\e[0][3][5] ), .c(
        \e_tx[0][3][5] ) );
  low_swing_rx_287 \ys[3].xs[0].msg_txrx[6].north_rx  ( .i(\s_tx[0][2][6] ), 
        .o(\n[0][3][6] ) );
  low_swing_rx_286 \ys[3].xs[0].msg_txrx[6].west_rx  ( .i(\e_tx[3][3][6] ), 
        .o(\w[0][3][6] ) );
  low_swing_tx_287 \ys[3].xs[0].msg_txrx[6].south_tx  ( .i(\s[0][3][6] ), .c(
        \s_tx[0][3][6] ) );
  low_swing_tx_286 \ys[3].xs[0].msg_txrx[6].east_tx  ( .i(\e[0][3][6] ), .c(
        \e_tx[0][3][6] ) );
  low_swing_rx_285 \ys[3].xs[0].msg_txrx[7].north_rx  ( .i(\s_tx[0][2][7] ), 
        .o(\n[0][3][7] ) );
  low_swing_rx_284 \ys[3].xs[0].msg_txrx[7].west_rx  ( .i(\e_tx[3][3][7] ), 
        .o(\w[0][3][7] ) );
  low_swing_tx_285 \ys[3].xs[0].msg_txrx[7].south_tx  ( .i(\s[0][3][7] ), .c(
        \s_tx[0][3][7] ) );
  low_swing_tx_284 \ys[3].xs[0].msg_txrx[7].east_tx  ( .i(\e[0][3][7] ), .c(
        \e_tx[0][3][7] ) );
  low_swing_rx_283 \ys[3].xs[0].msg_txrx[8].north_rx  ( .i(\s_tx[0][2][8] ), 
        .o(\n[0][3][8] ) );
  low_swing_rx_282 \ys[3].xs[0].msg_txrx[8].west_rx  ( .i(\e_tx[3][3][8] ), 
        .o(\w[0][3][8] ) );
  low_swing_tx_283 \ys[3].xs[0].msg_txrx[8].south_tx  ( .i(\s[0][3][8] ), .c(
        \s_tx[0][3][8] ) );
  low_swing_tx_282 \ys[3].xs[0].msg_txrx[8].east_tx  ( .i(\e[0][3][8] ), .c(
        \e_tx[0][3][8] ) );
  low_swing_rx_281 \ys[3].xs[0].msg_txrx[9].north_rx  ( .i(\s_tx[0][2][9] ), 
        .o(\n[0][3][9] ) );
  low_swing_rx_280 \ys[3].xs[0].msg_txrx[9].west_rx  ( .i(\e_tx[3][3][9] ), 
        .o(\w[0][3][9] ) );
  low_swing_tx_281 \ys[3].xs[0].msg_txrx[9].south_tx  ( .i(\s[0][3][9] ), .c(
        \s_tx[0][3][9] ) );
  low_swing_tx_280 \ys[3].xs[0].msg_txrx[9].east_tx  ( .i(\e[0][3][9] ), .c(
        \e_tx[0][3][9] ) );
  low_swing_rx_279 \ys[3].xs[0].msg_txrx[10].north_rx  ( .i(\s_tx[0][2][10] ), 
        .o(\n[0][3][10] ) );
  low_swing_rx_278 \ys[3].xs[0].msg_txrx[10].west_rx  ( .i(\e_tx[3][3][10] ), 
        .o(\w[0][3][10] ) );
  low_swing_tx_279 \ys[3].xs[0].msg_txrx[10].south_tx  ( .i(\s[0][3][10] ), 
        .c(\s_tx[0][3][10] ) );
  low_swing_tx_278 \ys[3].xs[0].msg_txrx[10].east_tx  ( .i(\e[0][3][10] ), .c(
        \e_tx[0][3][10] ) );
  low_swing_rx_277 \ys[3].xs[0].msg_txrx[11].north_rx  ( .i(\s_tx[0][2][11] ), 
        .o(\n[0][3][11] ) );
  low_swing_rx_276 \ys[3].xs[0].msg_txrx[11].west_rx  ( .i(\e_tx[3][3][11] ), 
        .o(\w[0][3][11] ) );
  low_swing_tx_277 \ys[3].xs[0].msg_txrx[11].south_tx  ( .i(\s[0][3][11] ), 
        .c(\s_tx[0][3][11] ) );
  low_swing_tx_276 \ys[3].xs[0].msg_txrx[11].east_tx  ( .i(\e[0][3][11] ), .c(
        \e_tx[0][3][11] ) );
  low_swing_rx_275 \ys[3].xs[0].msg_txrx[12].north_rx  ( .i(\s_tx[0][2][12] ), 
        .o(\n[0][3][12] ) );
  low_swing_rx_274 \ys[3].xs[0].msg_txrx[12].west_rx  ( .i(\e_tx[3][3][12] ), 
        .o(\w[0][3][12] ) );
  low_swing_tx_275 \ys[3].xs[0].msg_txrx[12].south_tx  ( .i(\s[0][3][12] ), 
        .c(\s_tx[0][3][12] ) );
  low_swing_tx_274 \ys[3].xs[0].msg_txrx[12].east_tx  ( .i(\e[0][3][12] ), .c(
        \e_tx[0][3][12] ) );
  low_swing_rx_273 \ys[3].xs[0].msg_txrx[13].north_rx  ( .i(\s_tx[0][2][13] ), 
        .o(\n[0][3][13] ) );
  low_swing_rx_272 \ys[3].xs[0].msg_txrx[13].west_rx  ( .i(\e_tx[3][3][13] ), 
        .o(\w[0][3][13] ) );
  low_swing_tx_273 \ys[3].xs[0].msg_txrx[13].south_tx  ( .i(\s[0][3][13] ), 
        .c(\s_tx[0][3][13] ) );
  low_swing_tx_272 \ys[3].xs[0].msg_txrx[13].east_tx  ( .i(\e[0][3][13] ), .c(
        \e_tx[0][3][13] ) );
  low_swing_rx_271 \ys[3].xs[0].msg_txrx[14].north_rx  ( .i(\s_tx[0][2][14] ), 
        .o(\n[0][3][14] ) );
  low_swing_rx_270 \ys[3].xs[0].msg_txrx[14].west_rx  ( .i(\e_tx[3][3][14] ), 
        .o(\w[0][3][14] ) );
  low_swing_tx_271 \ys[3].xs[0].msg_txrx[14].south_tx  ( .i(\s[0][3][14] ), 
        .c(\s_tx[0][3][14] ) );
  low_swing_tx_270 \ys[3].xs[0].msg_txrx[14].east_tx  ( .i(\e[0][3][14] ), .c(
        \e_tx[0][3][14] ) );
  low_swing_rx_269 \ys[3].xs[0].msg_txrx[15].north_rx  ( .i(\s_tx[0][2][15] ), 
        .o(\n[0][3][15] ) );
  low_swing_rx_268 \ys[3].xs[0].msg_txrx[15].west_rx  ( .i(\e_tx[3][3][15] ), 
        .o(\w[0][3][15] ) );
  low_swing_tx_269 \ys[3].xs[0].msg_txrx[15].south_tx  ( .i(\s[0][3][15] ), 
        .c(\s_tx[0][3][15] ) );
  low_swing_tx_268 \ys[3].xs[0].msg_txrx[15].east_tx  ( .i(\e[0][3][15] ), .c(
        \e_tx[0][3][15] ) );
  low_swing_rx_267 \ys[3].xs[0].msg_txrx[16].north_rx  ( .i(\s_tx[0][2][16] ), 
        .o(\n[0][3][16] ) );
  low_swing_rx_266 \ys[3].xs[0].msg_txrx[16].west_rx  ( .i(\e_tx[3][3][16] ), 
        .o(\w[0][3][16] ) );
  low_swing_tx_267 \ys[3].xs[0].msg_txrx[16].south_tx  ( .i(\s[0][3][16] ), 
        .c(\s_tx[0][3][16] ) );
  low_swing_tx_266 \ys[3].xs[0].msg_txrx[16].east_tx  ( .i(\e[0][3][16] ), .c(
        \e_tx[0][3][16] ) );
  low_swing_rx_265 \ys[3].xs[0].msg_txrx[17].north_rx  ( .i(\s_tx[0][2][17] ), 
        .o(\n[0][3][17] ) );
  low_swing_rx_264 \ys[3].xs[0].msg_txrx[17].west_rx  ( .i(\e_tx[3][3][17] ), 
        .o(\w[0][3][17] ) );
  low_swing_tx_265 \ys[3].xs[0].msg_txrx[17].south_tx  ( .i(\s[0][3][17] ), 
        .c(\s_tx[0][3][17] ) );
  low_swing_tx_264 \ys[3].xs[0].msg_txrx[17].east_tx  ( .i(\e[0][3][17] ), .c(
        \e_tx[0][3][17] ) );
  low_swing_rx_263 \ys[3].xs[0].msg_txrx[18].north_rx  ( .i(\s_tx[0][2][18] ), 
        .o(\n[0][3][18] ) );
  low_swing_rx_262 \ys[3].xs[0].msg_txrx[18].west_rx  ( .i(\e_tx[3][3][18] ), 
        .o(\w[0][3][18] ) );
  low_swing_tx_263 \ys[3].xs[0].msg_txrx[18].south_tx  ( .i(\s[0][3][18] ), 
        .c(\s_tx[0][3][18] ) );
  low_swing_tx_262 \ys[3].xs[0].msg_txrx[18].east_tx  ( .i(\e[0][3][18] ), .c(
        \e_tx[0][3][18] ) );
  low_swing_rx_261 \ys[3].xs[0].msg_txrx[19].north_rx  ( .i(\s_tx[0][2][19] ), 
        .o(\n[0][3][19] ) );
  low_swing_rx_260 \ys[3].xs[0].msg_txrx[19].west_rx  ( .i(\e_tx[3][3][19] ), 
        .o(\w[0][3][19] ) );
  low_swing_tx_261 \ys[3].xs[0].msg_txrx[19].south_tx  ( .i(\s[0][3][19] ), 
        .c(\s_tx[0][3][19] ) );
  low_swing_tx_260 \ys[3].xs[0].msg_txrx[19].east_tx  ( .i(\e[0][3][19] ), .c(
        \e_tx[0][3][19] ) );
  low_swing_rx_259 \ys[3].xs[0].msg_txrx[20].north_rx  ( .i(\s_tx[0][2][20] ), 
        .o(\n[0][3][20] ) );
  low_swing_rx_258 \ys[3].xs[0].msg_txrx[20].west_rx  ( .i(\e_tx[3][3][20] ), 
        .o(\w[0][3][20] ) );
  low_swing_tx_259 \ys[3].xs[0].msg_txrx[20].south_tx  ( .i(\s[0][3][20] ), 
        .c(\s_tx[0][3][20] ) );
  low_swing_tx_258 \ys[3].xs[0].msg_txrx[20].east_tx  ( .i(\e[0][3][20] ), .c(
        \e_tx[0][3][20] ) );
  low_swing_rx_257 \ys[3].xs[0].msg_txrx[21].north_rx  ( .i(\s_tx[0][2][21] ), 
        .o(\n[0][3][21] ) );
  low_swing_rx_256 \ys[3].xs[0].msg_txrx[21].west_rx  ( .i(\e_tx[3][3][21] ), 
        .o(\w[0][3][21] ) );
  low_swing_tx_257 \ys[3].xs[0].msg_txrx[21].south_tx  ( .i(\s[0][3][21] ), 
        .c(\s_tx[0][3][21] ) );
  low_swing_tx_256 \ys[3].xs[0].msg_txrx[21].east_tx  ( .i(\e[0][3][21] ), .c(
        \e_tx[0][3][21] ) );
  low_swing_rx_255 \ys[3].xs[0].msg_txrx[22].north_rx  ( .i(\s_tx[0][2][22] ), 
        .o(\n[0][3][22] ) );
  low_swing_rx_254 \ys[3].xs[0].msg_txrx[22].west_rx  ( .i(\e_tx[3][3][22] ), 
        .o(\w[0][3][22] ) );
  low_swing_tx_255 \ys[3].xs[0].msg_txrx[22].south_tx  ( .i(\s[0][3][22] ), 
        .c(\s_tx[0][3][22] ) );
  low_swing_tx_254 \ys[3].xs[0].msg_txrx[22].east_tx  ( .i(\e[0][3][22] ), .c(
        \e_tx[0][3][22] ) );
  low_swing_rx_253 \ys[3].xs[0].msg_txrx[23].north_rx  ( .i(\s_tx[0][2][23] ), 
        .o(\n[0][3][23] ) );
  low_swing_rx_252 \ys[3].xs[0].msg_txrx[23].west_rx  ( .i(\e_tx[3][3][23] ), 
        .o(\w[0][3][23] ) );
  low_swing_tx_253 \ys[3].xs[0].msg_txrx[23].south_tx  ( .i(\s[0][3][23] ), 
        .c(\s_tx[0][3][23] ) );
  low_swing_tx_252 \ys[3].xs[0].msg_txrx[23].east_tx  ( .i(\e[0][3][23] ), .c(
        \e_tx[0][3][23] ) );
  low_swing_rx_251 \ys[3].xs[0].msg_txrx[24].north_rx  ( .i(\s_tx[0][2][24] ), 
        .o(\n[0][3][24] ) );
  low_swing_rx_250 \ys[3].xs[0].msg_txrx[24].west_rx  ( .i(\e_tx[3][3][24] ), 
        .o(\w[0][3][24] ) );
  low_swing_tx_251 \ys[3].xs[0].msg_txrx[24].south_tx  ( .i(\s[0][3][24] ), 
        .c(\s_tx[0][3][24] ) );
  low_swing_tx_250 \ys[3].xs[0].msg_txrx[24].east_tx  ( .i(\e[0][3][24] ), .c(
        \e_tx[0][3][24] ) );
  low_swing_rx_249 \ys[3].xs[0].msg_txrx[25].north_rx  ( .i(\s_tx[0][2][25] ), 
        .o(\n[0][3][25] ) );
  low_swing_rx_248 \ys[3].xs[0].msg_txrx[25].west_rx  ( .i(\e_tx[3][3][25] ), 
        .o(\w[0][3][25] ) );
  low_swing_tx_249 \ys[3].xs[0].msg_txrx[25].south_tx  ( .i(\s[0][3][25] ), 
        .c(\s_tx[0][3][25] ) );
  low_swing_tx_248 \ys[3].xs[0].msg_txrx[25].east_tx  ( .i(\e[0][3][25] ), .c(
        \e_tx[0][3][25] ) );
  low_swing_rx_247 \ys[3].xs[0].msg_txrx[26].north_rx  ( .i(\s_tx[0][2][26] ), 
        .o(\n[0][3][26] ) );
  low_swing_rx_246 \ys[3].xs[0].msg_txrx[26].west_rx  ( .i(\e_tx[3][3][26] ), 
        .o(\w[0][3][26] ) );
  low_swing_tx_247 \ys[3].xs[0].msg_txrx[26].south_tx  ( .i(\s[0][3][26] ), 
        .c(\s_tx[0][3][26] ) );
  low_swing_tx_246 \ys[3].xs[0].msg_txrx[26].east_tx  ( .i(\e[0][3][26] ), .c(
        \e_tx[0][3][26] ) );
  low_swing_rx_245 \ys[3].xs[0].msg_txrx[27].north_rx  ( .i(\s_tx[0][2][27] ), 
        .o(\n[0][3][27] ) );
  low_swing_rx_244 \ys[3].xs[0].msg_txrx[27].west_rx  ( .i(\e_tx[3][3][27] ), 
        .o(\w[0][3][27] ) );
  low_swing_tx_245 \ys[3].xs[0].msg_txrx[27].south_tx  ( .i(\s[0][3][27] ), 
        .c(\s_tx[0][3][27] ) );
  low_swing_tx_244 \ys[3].xs[0].msg_txrx[27].east_tx  ( .i(\e[0][3][27] ), .c(
        \e_tx[0][3][27] ) );
  low_swing_rx_243 \ys[3].xs[0].msg_txrx[28].north_rx  ( .i(\s_tx[0][2][28] ), 
        .o(\n[0][3][28] ) );
  low_swing_rx_242 \ys[3].xs[0].msg_txrx[28].west_rx  ( .i(\e_tx[3][3][28] ), 
        .o(\w[0][3][28] ) );
  low_swing_tx_243 \ys[3].xs[0].msg_txrx[28].south_tx  ( .i(\s[0][3][28] ), 
        .c(\s_tx[0][3][28] ) );
  low_swing_tx_242 \ys[3].xs[0].msg_txrx[28].east_tx  ( .i(\e[0][3][28] ), .c(
        \e_tx[0][3][28] ) );
  low_swing_rx_241 \ys[3].xs[0].msg_txrx[29].north_rx  ( .i(\s_tx[0][2][29] ), 
        .o(\n[0][3][29] ) );
  low_swing_rx_240 \ys[3].xs[0].msg_txrx[29].west_rx  ( .i(\e_tx[3][3][29] ), 
        .o(\w[0][3][29] ) );
  low_swing_tx_241 \ys[3].xs[0].msg_txrx[29].south_tx  ( .i(\s[0][3][29] ), 
        .c(\s_tx[0][3][29] ) );
  low_swing_tx_240 \ys[3].xs[0].msg_txrx[29].east_tx  ( .i(\e[0][3][29] ), .c(
        \e_tx[0][3][29] ) );
  low_swing_rx_239 \ys[3].xs[0].msg_txrx[30].north_rx  ( .i(\s_tx[0][2][30] ), 
        .o(\n[0][3][30] ) );
  low_swing_rx_238 \ys[3].xs[0].msg_txrx[30].west_rx  ( .i(\e_tx[3][3][30] ), 
        .o(\w[0][3][30] ) );
  low_swing_tx_239 \ys[3].xs[0].msg_txrx[30].south_tx  ( .i(\s[0][3][30] ), 
        .c(\s_tx[0][3][30] ) );
  low_swing_tx_238 \ys[3].xs[0].msg_txrx[30].east_tx  ( .i(\e[0][3][30] ), .c(
        \e_tx[0][3][30] ) );
  low_swing_rx_237 \ys[3].xs[0].msg_txrx[31].north_rx  ( .i(\s_tx[0][2][31] ), 
        .o(\n[0][3][31] ) );
  low_swing_rx_236 \ys[3].xs[0].msg_txrx[31].west_rx  ( .i(\e_tx[3][3][31] ), 
        .o(\w[0][3][31] ) );
  low_swing_tx_237 \ys[3].xs[0].msg_txrx[31].south_tx  ( .i(\s[0][3][31] ), 
        .c(\s_tx[0][3][31] ) );
  low_swing_tx_236 \ys[3].xs[0].msg_txrx[31].east_tx  ( .i(\e[0][3][31] ), .c(
        \e_tx[0][3][31] ) );
  low_swing_rx_235 \ys[3].xs[0].msg_txrx[32].north_rx  ( .i(\s_tx[0][2][32] ), 
        .o(\n[0][3][32] ) );
  low_swing_rx_234 \ys[3].xs[0].msg_txrx[32].west_rx  ( .i(\e_tx[3][3][32] ), 
        .o(\w[0][3][32] ) );
  low_swing_tx_235 \ys[3].xs[0].msg_txrx[32].south_tx  ( .i(\s[0][3][32] ), 
        .c(\s_tx[0][3][32] ) );
  low_swing_tx_234 \ys[3].xs[0].msg_txrx[32].east_tx  ( .i(\e[0][3][32] ), .c(
        \e_tx[0][3][32] ) );
  low_swing_rx_233 \ys[3].xs[0].msg_txrx[33].north_rx  ( .i(\s_tx[0][2][33] ), 
        .o(\n[0][3][33] ) );
  low_swing_rx_232 \ys[3].xs[0].msg_txrx[33].west_rx  ( .i(\e_tx[3][3][33] ), 
        .o(\w[0][3][33] ) );
  low_swing_tx_233 \ys[3].xs[0].msg_txrx[33].south_tx  ( .i(\s[0][3][33] ), 
        .c(\s_tx[0][3][33] ) );
  low_swing_tx_232 \ys[3].xs[0].msg_txrx[33].east_tx  ( .i(\e[0][3][33] ), .c(
        \e_tx[0][3][33] ) );
  low_swing_rx_231 \ys[3].xs[0].msg_txrx[34].north_rx  ( .i(\s_tx[0][2][34] ), 
        .o(\n[0][3][34] ) );
  low_swing_rx_230 \ys[3].xs[0].msg_txrx[34].west_rx  ( .i(\e_tx[3][3][34] ), 
        .o(\w[0][3][34] ) );
  low_swing_tx_231 \ys[3].xs[0].msg_txrx[34].south_tx  ( .i(\s[0][3][34] ), 
        .c(\s_tx[0][3][34] ) );
  low_swing_tx_230 \ys[3].xs[0].msg_txrx[34].east_tx  ( .i(\e[0][3][34] ), .c(
        \e_tx[0][3][34] ) );
  low_swing_rx_229 \ys[3].xs[0].msg_txrx[35].north_rx  ( .i(\s_tx[0][2][35] ), 
        .o(\n[0][3][35] ) );
  low_swing_rx_228 \ys[3].xs[0].msg_txrx[35].west_rx  ( .i(\e_tx[3][3][35] ), 
        .o(\w[0][3][35] ) );
  low_swing_tx_229 \ys[3].xs[0].msg_txrx[35].south_tx  ( .i(\s[0][3][35] ), 
        .c(\s_tx[0][3][35] ) );
  low_swing_tx_228 \ys[3].xs[0].msg_txrx[35].east_tx  ( .i(\e[0][3][35] ), .c(
        \e_tx[0][3][35] ) );
  low_swing_rx_227 \ys[3].xs[0].msg_txrx[36].north_rx  ( .i(\s_tx[0][2][36] ), 
        .o(\n[0][3][36] ) );
  low_swing_rx_226 \ys[3].xs[0].msg_txrx[36].west_rx  ( .i(\e_tx[3][3][36] ), 
        .o(\w[0][3][36] ) );
  low_swing_tx_227 \ys[3].xs[0].msg_txrx[36].south_tx  ( .i(\s[0][3][36] ), 
        .c(\s_tx[0][3][36] ) );
  low_swing_tx_226 \ys[3].xs[0].msg_txrx[36].east_tx  ( .i(\e[0][3][36] ), .c(
        \e_tx[0][3][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X1_Y3_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[3].xs[1].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[1][3] ), .i_v(\i[1][3][36] ), 
        .i_x({\i[1][3][35] , \i[1][3][34] }), .i_y({\i[1][3][33] , 
        \i[1][3][32] }), .i_data({\i[1][3][31] , \i[1][3][30] , \i[1][3][29] , 
        \i[1][3][28] , \i[1][3][27] , \i[1][3][26] , \i[1][3][25] , 
        \i[1][3][24] , \i[1][3][23] , \i[1][3][22] , \i[1][3][21] , 
        \i[1][3][20] , \i[1][3][19] , \i[1][3][18] , \i[1][3][17] , 
        \i[1][3][16] , \i[1][3][15] , \i[1][3][14] , \i[1][3][13] , 
        \i[1][3][12] , \i[1][3][11] , \i[1][3][10] , \i[1][3][9] , 
        \i[1][3][8] , \i[1][3][7] , \i[1][3][6] , \i[1][3][5] , \i[1][3][4] , 
        \i[1][3][3] , \i[1][3][2] , \i[1][3][1] , \i[1][3][0] }), .o_v(
        \o_v[1][3] ), .o_x({\s[1][3][35] , \s[1][3][34] }), .o_y({
        \s[1][3][33] , \s[1][3][32] }), .o_data({\s[1][3][31] , \s[1][3][30] , 
        \s[1][3][29] , \s[1][3][28] , \s[1][3][27] , \s[1][3][26] , 
        \s[1][3][25] , \s[1][3][24] , \s[1][3][23] , \s[1][3][22] , 
        \s[1][3][21] , \s[1][3][20] , \s[1][3][19] , \s[1][3][18] , 
        \s[1][3][17] , \s[1][3][16] , \s[1][3][15] , \s[1][3][14] , 
        \s[1][3][13] , \s[1][3][12] , \s[1][3][11] , \s[1][3][10] , 
        \s[1][3][9] , \s[1][3][8] , \s[1][3][7] , \s[1][3][6] , \s[1][3][5] , 
        \s[1][3][4] , \s[1][3][3] , \s[1][3][2] , \s[1][3][1] , \s[1][3][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X1_Y3 \ys[3].xs[1].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[1][3][36] ), .n_in_x({\n[1][3][35] , 
        \n[1][3][34] }), .n_in_y({\n[1][3][33] , \n[1][3][32] }), .n_in_data({
        \n[1][3][31] , \n[1][3][30] , \n[1][3][29] , \n[1][3][28] , 
        \n[1][3][27] , \n[1][3][26] , \n[1][3][25] , \n[1][3][24] , 
        \n[1][3][23] , \n[1][3][22] , \n[1][3][21] , \n[1][3][20] , 
        \n[1][3][19] , \n[1][3][18] , \n[1][3][17] , \n[1][3][16] , 
        \n[1][3][15] , \n[1][3][14] , \n[1][3][13] , \n[1][3][12] , 
        \n[1][3][11] , \n[1][3][10] , \n[1][3][9] , \n[1][3][8] , \n[1][3][7] , 
        \n[1][3][6] , \n[1][3][5] , \n[1][3][4] , \n[1][3][3] , \n[1][3][2] , 
        \n[1][3][1] , \n[1][3][0] }), .w_in_v(\w[1][3][36] ), .w_in_x({
        \w[1][3][35] , \w[1][3][34] }), .w_in_y({\w[1][3][33] , \w[1][3][32] }), .w_in_data({\w[1][3][31] , \w[1][3][30] , \w[1][3][29] , \w[1][3][28] , 
        \w[1][3][27] , \w[1][3][26] , \w[1][3][25] , \w[1][3][24] , 
        \w[1][3][23] , \w[1][3][22] , \w[1][3][21] , \w[1][3][20] , 
        \w[1][3][19] , \w[1][3][18] , \w[1][3][17] , \w[1][3][16] , 
        \w[1][3][15] , \w[1][3][14] , \w[1][3][13] , \w[1][3][12] , 
        \w[1][3][11] , \w[1][3][10] , \w[1][3][9] , \w[1][3][8] , \w[1][3][7] , 
        \w[1][3][6] , \w[1][3][5] , \w[1][3][4] , \w[1][3][3] , \w[1][3][2] , 
        \w[1][3][1] , \w[1][3][0] }), .i_v(\i[1][3][36] ), .i_x({\i[1][3][35] , 
        \i[1][3][34] }), .i_y({\i[1][3][33] , \i[1][3][32] }), .i_data({
        \i[1][3][31] , \i[1][3][30] , \i[1][3][29] , \i[1][3][28] , 
        \i[1][3][27] , \i[1][3][26] , \i[1][3][25] , \i[1][3][24] , 
        \i[1][3][23] , \i[1][3][22] , \i[1][3][21] , \i[1][3][20] , 
        \i[1][3][19] , \i[1][3][18] , \i[1][3][17] , \i[1][3][16] , 
        \i[1][3][15] , \i[1][3][14] , \i[1][3][13] , \i[1][3][12] , 
        \i[1][3][11] , \i[1][3][10] , \i[1][3][9] , \i[1][3][8] , \i[1][3][7] , 
        \i[1][3][6] , \i[1][3][5] , \i[1][3][4] , \i[1][3][3] , \i[1][3][2] , 
        \i[1][3][1] , \i[1][3][0] }), .e_b(\e_b[1][3] ), .w_b(\w_b[1][3] ), 
        .i_ack(\i_ack[1][3] ), .o_v(\o_v[1][3] ), .s_out_v(\s[1][3][36] ), 
        .s_out_x({\s[1][3][35] , \s[1][3][34] }), .s_out_y({\s[1][3][33] , 
        \s[1][3][32] }), .s_out_data({\s[1][3][31] , \s[1][3][30] , 
        \s[1][3][29] , \s[1][3][28] , \s[1][3][27] , \s[1][3][26] , 
        \s[1][3][25] , \s[1][3][24] , \s[1][3][23] , \s[1][3][22] , 
        \s[1][3][21] , \s[1][3][20] , \s[1][3][19] , \s[1][3][18] , 
        \s[1][3][17] , \s[1][3][16] , \s[1][3][15] , \s[1][3][14] , 
        \s[1][3][13] , \s[1][3][12] , \s[1][3][11] , \s[1][3][10] , 
        \s[1][3][9] , \s[1][3][8] , \s[1][3][7] , \s[1][3][6] , \s[1][3][5] , 
        \s[1][3][4] , \s[1][3][3] , \s[1][3][2] , \s[1][3][1] , \s[1][3][0] }), 
        .e_out_v(\e[1][3][36] ), .e_out_x({\e[1][3][35] , \e[1][3][34] }), 
        .e_out_y({\e[1][3][33] , \e[1][3][32] }), .e_out_data({\e[1][3][31] , 
        \e[1][3][30] , \e[1][3][29] , \e[1][3][28] , \e[1][3][27] , 
        \e[1][3][26] , \e[1][3][25] , \e[1][3][24] , \e[1][3][23] , 
        \e[1][3][22] , \e[1][3][21] , \e[1][3][20] , \e[1][3][19] , 
        \e[1][3][18] , \e[1][3][17] , \e[1][3][16] , \e[1][3][15] , 
        \e[1][3][14] , \e[1][3][13] , \e[1][3][12] , \e[1][3][11] , 
        \e[1][3][10] , \e[1][3][9] , \e[1][3][8] , \e[1][3][7] , \e[1][3][6] , 
        \e[1][3][5] , \e[1][3][4] , \e[1][3][3] , \e[1][3][2] , \e[1][3][1] , 
        \e[1][3][0] }) );
  low_swing_rx_225 \ys[3].xs[1].east_bp_rx  ( .i(\w_b_tx[2][3] ), .o(
        \e_b[1][3] ) );
  low_swing_tx_225 \ys[3].xs[1].west_bp_tx  ( .i(\w_b[1][3] ), .c(
        \w_b_tx[1][3] ) );
  low_swing_rx_224 \ys[3].xs[1].msg_txrx[0].north_rx  ( .i(\s_tx[1][2][0] ), 
        .o(\n[1][3][0] ) );
  low_swing_rx_223 \ys[3].xs[1].msg_txrx[0].west_rx  ( .i(\e_tx[0][3][0] ), 
        .o(\w[1][3][0] ) );
  low_swing_tx_224 \ys[3].xs[1].msg_txrx[0].south_tx  ( .i(\s[1][3][0] ), .c(
        \s_tx[1][3][0] ) );
  low_swing_tx_223 \ys[3].xs[1].msg_txrx[0].east_tx  ( .i(\e[1][3][0] ), .c(
        \e_tx[1][3][0] ) );
  low_swing_rx_222 \ys[3].xs[1].msg_txrx[1].north_rx  ( .i(\s_tx[1][2][1] ), 
        .o(\n[1][3][1] ) );
  low_swing_rx_221 \ys[3].xs[1].msg_txrx[1].west_rx  ( .i(\e_tx[0][3][1] ), 
        .o(\w[1][3][1] ) );
  low_swing_tx_222 \ys[3].xs[1].msg_txrx[1].south_tx  ( .i(\s[1][3][1] ), .c(
        \s_tx[1][3][1] ) );
  low_swing_tx_221 \ys[3].xs[1].msg_txrx[1].east_tx  ( .i(\e[1][3][1] ), .c(
        \e_tx[1][3][1] ) );
  low_swing_rx_220 \ys[3].xs[1].msg_txrx[2].north_rx  ( .i(\s_tx[1][2][2] ), 
        .o(\n[1][3][2] ) );
  low_swing_rx_219 \ys[3].xs[1].msg_txrx[2].west_rx  ( .i(\e_tx[0][3][2] ), 
        .o(\w[1][3][2] ) );
  low_swing_tx_220 \ys[3].xs[1].msg_txrx[2].south_tx  ( .i(\s[1][3][2] ), .c(
        \s_tx[1][3][2] ) );
  low_swing_tx_219 \ys[3].xs[1].msg_txrx[2].east_tx  ( .i(\e[1][3][2] ), .c(
        \e_tx[1][3][2] ) );
  low_swing_rx_218 \ys[3].xs[1].msg_txrx[3].north_rx  ( .i(\s_tx[1][2][3] ), 
        .o(\n[1][3][3] ) );
  low_swing_rx_217 \ys[3].xs[1].msg_txrx[3].west_rx  ( .i(\e_tx[0][3][3] ), 
        .o(\w[1][3][3] ) );
  low_swing_tx_218 \ys[3].xs[1].msg_txrx[3].south_tx  ( .i(\s[1][3][3] ), .c(
        \s_tx[1][3][3] ) );
  low_swing_tx_217 \ys[3].xs[1].msg_txrx[3].east_tx  ( .i(\e[1][3][3] ), .c(
        \e_tx[1][3][3] ) );
  low_swing_rx_216 \ys[3].xs[1].msg_txrx[4].north_rx  ( .i(\s_tx[1][2][4] ), 
        .o(\n[1][3][4] ) );
  low_swing_rx_215 \ys[3].xs[1].msg_txrx[4].west_rx  ( .i(\e_tx[0][3][4] ), 
        .o(\w[1][3][4] ) );
  low_swing_tx_216 \ys[3].xs[1].msg_txrx[4].south_tx  ( .i(\s[1][3][4] ), .c(
        \s_tx[1][3][4] ) );
  low_swing_tx_215 \ys[3].xs[1].msg_txrx[4].east_tx  ( .i(\e[1][3][4] ), .c(
        \e_tx[1][3][4] ) );
  low_swing_rx_214 \ys[3].xs[1].msg_txrx[5].north_rx  ( .i(\s_tx[1][2][5] ), 
        .o(\n[1][3][5] ) );
  low_swing_rx_213 \ys[3].xs[1].msg_txrx[5].west_rx  ( .i(\e_tx[0][3][5] ), 
        .o(\w[1][3][5] ) );
  low_swing_tx_214 \ys[3].xs[1].msg_txrx[5].south_tx  ( .i(\s[1][3][5] ), .c(
        \s_tx[1][3][5] ) );
  low_swing_tx_213 \ys[3].xs[1].msg_txrx[5].east_tx  ( .i(\e[1][3][5] ), .c(
        \e_tx[1][3][5] ) );
  low_swing_rx_212 \ys[3].xs[1].msg_txrx[6].north_rx  ( .i(\s_tx[1][2][6] ), 
        .o(\n[1][3][6] ) );
  low_swing_rx_211 \ys[3].xs[1].msg_txrx[6].west_rx  ( .i(\e_tx[0][3][6] ), 
        .o(\w[1][3][6] ) );
  low_swing_tx_212 \ys[3].xs[1].msg_txrx[6].south_tx  ( .i(\s[1][3][6] ), .c(
        \s_tx[1][3][6] ) );
  low_swing_tx_211 \ys[3].xs[1].msg_txrx[6].east_tx  ( .i(\e[1][3][6] ), .c(
        \e_tx[1][3][6] ) );
  low_swing_rx_210 \ys[3].xs[1].msg_txrx[7].north_rx  ( .i(\s_tx[1][2][7] ), 
        .o(\n[1][3][7] ) );
  low_swing_rx_209 \ys[3].xs[1].msg_txrx[7].west_rx  ( .i(\e_tx[0][3][7] ), 
        .o(\w[1][3][7] ) );
  low_swing_tx_210 \ys[3].xs[1].msg_txrx[7].south_tx  ( .i(\s[1][3][7] ), .c(
        \s_tx[1][3][7] ) );
  low_swing_tx_209 \ys[3].xs[1].msg_txrx[7].east_tx  ( .i(\e[1][3][7] ), .c(
        \e_tx[1][3][7] ) );
  low_swing_rx_208 \ys[3].xs[1].msg_txrx[8].north_rx  ( .i(\s_tx[1][2][8] ), 
        .o(\n[1][3][8] ) );
  low_swing_rx_207 \ys[3].xs[1].msg_txrx[8].west_rx  ( .i(\e_tx[0][3][8] ), 
        .o(\w[1][3][8] ) );
  low_swing_tx_208 \ys[3].xs[1].msg_txrx[8].south_tx  ( .i(\s[1][3][8] ), .c(
        \s_tx[1][3][8] ) );
  low_swing_tx_207 \ys[3].xs[1].msg_txrx[8].east_tx  ( .i(\e[1][3][8] ), .c(
        \e_tx[1][3][8] ) );
  low_swing_rx_206 \ys[3].xs[1].msg_txrx[9].north_rx  ( .i(\s_tx[1][2][9] ), 
        .o(\n[1][3][9] ) );
  low_swing_rx_205 \ys[3].xs[1].msg_txrx[9].west_rx  ( .i(\e_tx[0][3][9] ), 
        .o(\w[1][3][9] ) );
  low_swing_tx_206 \ys[3].xs[1].msg_txrx[9].south_tx  ( .i(\s[1][3][9] ), .c(
        \s_tx[1][3][9] ) );
  low_swing_tx_205 \ys[3].xs[1].msg_txrx[9].east_tx  ( .i(\e[1][3][9] ), .c(
        \e_tx[1][3][9] ) );
  low_swing_rx_204 \ys[3].xs[1].msg_txrx[10].north_rx  ( .i(\s_tx[1][2][10] ), 
        .o(\n[1][3][10] ) );
  low_swing_rx_203 \ys[3].xs[1].msg_txrx[10].west_rx  ( .i(\e_tx[0][3][10] ), 
        .o(\w[1][3][10] ) );
  low_swing_tx_204 \ys[3].xs[1].msg_txrx[10].south_tx  ( .i(\s[1][3][10] ), 
        .c(\s_tx[1][3][10] ) );
  low_swing_tx_203 \ys[3].xs[1].msg_txrx[10].east_tx  ( .i(\e[1][3][10] ), .c(
        \e_tx[1][3][10] ) );
  low_swing_rx_202 \ys[3].xs[1].msg_txrx[11].north_rx  ( .i(\s_tx[1][2][11] ), 
        .o(\n[1][3][11] ) );
  low_swing_rx_201 \ys[3].xs[1].msg_txrx[11].west_rx  ( .i(\e_tx[0][3][11] ), 
        .o(\w[1][3][11] ) );
  low_swing_tx_202 \ys[3].xs[1].msg_txrx[11].south_tx  ( .i(\s[1][3][11] ), 
        .c(\s_tx[1][3][11] ) );
  low_swing_tx_201 \ys[3].xs[1].msg_txrx[11].east_tx  ( .i(\e[1][3][11] ), .c(
        \e_tx[1][3][11] ) );
  low_swing_rx_200 \ys[3].xs[1].msg_txrx[12].north_rx  ( .i(\s_tx[1][2][12] ), 
        .o(\n[1][3][12] ) );
  low_swing_rx_199 \ys[3].xs[1].msg_txrx[12].west_rx  ( .i(\e_tx[0][3][12] ), 
        .o(\w[1][3][12] ) );
  low_swing_tx_200 \ys[3].xs[1].msg_txrx[12].south_tx  ( .i(\s[1][3][12] ), 
        .c(\s_tx[1][3][12] ) );
  low_swing_tx_199 \ys[3].xs[1].msg_txrx[12].east_tx  ( .i(\e[1][3][12] ), .c(
        \e_tx[1][3][12] ) );
  low_swing_rx_198 \ys[3].xs[1].msg_txrx[13].north_rx  ( .i(\s_tx[1][2][13] ), 
        .o(\n[1][3][13] ) );
  low_swing_rx_197 \ys[3].xs[1].msg_txrx[13].west_rx  ( .i(\e_tx[0][3][13] ), 
        .o(\w[1][3][13] ) );
  low_swing_tx_198 \ys[3].xs[1].msg_txrx[13].south_tx  ( .i(\s[1][3][13] ), 
        .c(\s_tx[1][3][13] ) );
  low_swing_tx_197 \ys[3].xs[1].msg_txrx[13].east_tx  ( .i(\e[1][3][13] ), .c(
        \e_tx[1][3][13] ) );
  low_swing_rx_196 \ys[3].xs[1].msg_txrx[14].north_rx  ( .i(\s_tx[1][2][14] ), 
        .o(\n[1][3][14] ) );
  low_swing_rx_195 \ys[3].xs[1].msg_txrx[14].west_rx  ( .i(\e_tx[0][3][14] ), 
        .o(\w[1][3][14] ) );
  low_swing_tx_196 \ys[3].xs[1].msg_txrx[14].south_tx  ( .i(\s[1][3][14] ), 
        .c(\s_tx[1][3][14] ) );
  low_swing_tx_195 \ys[3].xs[1].msg_txrx[14].east_tx  ( .i(\e[1][3][14] ), .c(
        \e_tx[1][3][14] ) );
  low_swing_rx_194 \ys[3].xs[1].msg_txrx[15].north_rx  ( .i(\s_tx[1][2][15] ), 
        .o(\n[1][3][15] ) );
  low_swing_rx_193 \ys[3].xs[1].msg_txrx[15].west_rx  ( .i(\e_tx[0][3][15] ), 
        .o(\w[1][3][15] ) );
  low_swing_tx_194 \ys[3].xs[1].msg_txrx[15].south_tx  ( .i(\s[1][3][15] ), 
        .c(\s_tx[1][3][15] ) );
  low_swing_tx_193 \ys[3].xs[1].msg_txrx[15].east_tx  ( .i(\e[1][3][15] ), .c(
        \e_tx[1][3][15] ) );
  low_swing_rx_192 \ys[3].xs[1].msg_txrx[16].north_rx  ( .i(\s_tx[1][2][16] ), 
        .o(\n[1][3][16] ) );
  low_swing_rx_191 \ys[3].xs[1].msg_txrx[16].west_rx  ( .i(\e_tx[0][3][16] ), 
        .o(\w[1][3][16] ) );
  low_swing_tx_192 \ys[3].xs[1].msg_txrx[16].south_tx  ( .i(\s[1][3][16] ), 
        .c(\s_tx[1][3][16] ) );
  low_swing_tx_191 \ys[3].xs[1].msg_txrx[16].east_tx  ( .i(\e[1][3][16] ), .c(
        \e_tx[1][3][16] ) );
  low_swing_rx_190 \ys[3].xs[1].msg_txrx[17].north_rx  ( .i(\s_tx[1][2][17] ), 
        .o(\n[1][3][17] ) );
  low_swing_rx_189 \ys[3].xs[1].msg_txrx[17].west_rx  ( .i(\e_tx[0][3][17] ), 
        .o(\w[1][3][17] ) );
  low_swing_tx_190 \ys[3].xs[1].msg_txrx[17].south_tx  ( .i(\s[1][3][17] ), 
        .c(\s_tx[1][3][17] ) );
  low_swing_tx_189 \ys[3].xs[1].msg_txrx[17].east_tx  ( .i(\e[1][3][17] ), .c(
        \e_tx[1][3][17] ) );
  low_swing_rx_188 \ys[3].xs[1].msg_txrx[18].north_rx  ( .i(\s_tx[1][2][18] ), 
        .o(\n[1][3][18] ) );
  low_swing_rx_187 \ys[3].xs[1].msg_txrx[18].west_rx  ( .i(\e_tx[0][3][18] ), 
        .o(\w[1][3][18] ) );
  low_swing_tx_188 \ys[3].xs[1].msg_txrx[18].south_tx  ( .i(\s[1][3][18] ), 
        .c(\s_tx[1][3][18] ) );
  low_swing_tx_187 \ys[3].xs[1].msg_txrx[18].east_tx  ( .i(\e[1][3][18] ), .c(
        \e_tx[1][3][18] ) );
  low_swing_rx_186 \ys[3].xs[1].msg_txrx[19].north_rx  ( .i(\s_tx[1][2][19] ), 
        .o(\n[1][3][19] ) );
  low_swing_rx_185 \ys[3].xs[1].msg_txrx[19].west_rx  ( .i(\e_tx[0][3][19] ), 
        .o(\w[1][3][19] ) );
  low_swing_tx_186 \ys[3].xs[1].msg_txrx[19].south_tx  ( .i(\s[1][3][19] ), 
        .c(\s_tx[1][3][19] ) );
  low_swing_tx_185 \ys[3].xs[1].msg_txrx[19].east_tx  ( .i(\e[1][3][19] ), .c(
        \e_tx[1][3][19] ) );
  low_swing_rx_184 \ys[3].xs[1].msg_txrx[20].north_rx  ( .i(\s_tx[1][2][20] ), 
        .o(\n[1][3][20] ) );
  low_swing_rx_183 \ys[3].xs[1].msg_txrx[20].west_rx  ( .i(\e_tx[0][3][20] ), 
        .o(\w[1][3][20] ) );
  low_swing_tx_184 \ys[3].xs[1].msg_txrx[20].south_tx  ( .i(\s[1][3][20] ), 
        .c(\s_tx[1][3][20] ) );
  low_swing_tx_183 \ys[3].xs[1].msg_txrx[20].east_tx  ( .i(\e[1][3][20] ), .c(
        \e_tx[1][3][20] ) );
  low_swing_rx_182 \ys[3].xs[1].msg_txrx[21].north_rx  ( .i(\s_tx[1][2][21] ), 
        .o(\n[1][3][21] ) );
  low_swing_rx_181 \ys[3].xs[1].msg_txrx[21].west_rx  ( .i(\e_tx[0][3][21] ), 
        .o(\w[1][3][21] ) );
  low_swing_tx_182 \ys[3].xs[1].msg_txrx[21].south_tx  ( .i(\s[1][3][21] ), 
        .c(\s_tx[1][3][21] ) );
  low_swing_tx_181 \ys[3].xs[1].msg_txrx[21].east_tx  ( .i(\e[1][3][21] ), .c(
        \e_tx[1][3][21] ) );
  low_swing_rx_180 \ys[3].xs[1].msg_txrx[22].north_rx  ( .i(\s_tx[1][2][22] ), 
        .o(\n[1][3][22] ) );
  low_swing_rx_179 \ys[3].xs[1].msg_txrx[22].west_rx  ( .i(\e_tx[0][3][22] ), 
        .o(\w[1][3][22] ) );
  low_swing_tx_180 \ys[3].xs[1].msg_txrx[22].south_tx  ( .i(\s[1][3][22] ), 
        .c(\s_tx[1][3][22] ) );
  low_swing_tx_179 \ys[3].xs[1].msg_txrx[22].east_tx  ( .i(\e[1][3][22] ), .c(
        \e_tx[1][3][22] ) );
  low_swing_rx_178 \ys[3].xs[1].msg_txrx[23].north_rx  ( .i(\s_tx[1][2][23] ), 
        .o(\n[1][3][23] ) );
  low_swing_rx_177 \ys[3].xs[1].msg_txrx[23].west_rx  ( .i(\e_tx[0][3][23] ), 
        .o(\w[1][3][23] ) );
  low_swing_tx_178 \ys[3].xs[1].msg_txrx[23].south_tx  ( .i(\s[1][3][23] ), 
        .c(\s_tx[1][3][23] ) );
  low_swing_tx_177 \ys[3].xs[1].msg_txrx[23].east_tx  ( .i(\e[1][3][23] ), .c(
        \e_tx[1][3][23] ) );
  low_swing_rx_176 \ys[3].xs[1].msg_txrx[24].north_rx  ( .i(\s_tx[1][2][24] ), 
        .o(\n[1][3][24] ) );
  low_swing_rx_175 \ys[3].xs[1].msg_txrx[24].west_rx  ( .i(\e_tx[0][3][24] ), 
        .o(\w[1][3][24] ) );
  low_swing_tx_176 \ys[3].xs[1].msg_txrx[24].south_tx  ( .i(\s[1][3][24] ), 
        .c(\s_tx[1][3][24] ) );
  low_swing_tx_175 \ys[3].xs[1].msg_txrx[24].east_tx  ( .i(\e[1][3][24] ), .c(
        \e_tx[1][3][24] ) );
  low_swing_rx_174 \ys[3].xs[1].msg_txrx[25].north_rx  ( .i(\s_tx[1][2][25] ), 
        .o(\n[1][3][25] ) );
  low_swing_rx_173 \ys[3].xs[1].msg_txrx[25].west_rx  ( .i(\e_tx[0][3][25] ), 
        .o(\w[1][3][25] ) );
  low_swing_tx_174 \ys[3].xs[1].msg_txrx[25].south_tx  ( .i(\s[1][3][25] ), 
        .c(\s_tx[1][3][25] ) );
  low_swing_tx_173 \ys[3].xs[1].msg_txrx[25].east_tx  ( .i(\e[1][3][25] ), .c(
        \e_tx[1][3][25] ) );
  low_swing_rx_172 \ys[3].xs[1].msg_txrx[26].north_rx  ( .i(\s_tx[1][2][26] ), 
        .o(\n[1][3][26] ) );
  low_swing_rx_171 \ys[3].xs[1].msg_txrx[26].west_rx  ( .i(\e_tx[0][3][26] ), 
        .o(\w[1][3][26] ) );
  low_swing_tx_172 \ys[3].xs[1].msg_txrx[26].south_tx  ( .i(\s[1][3][26] ), 
        .c(\s_tx[1][3][26] ) );
  low_swing_tx_171 \ys[3].xs[1].msg_txrx[26].east_tx  ( .i(\e[1][3][26] ), .c(
        \e_tx[1][3][26] ) );
  low_swing_rx_170 \ys[3].xs[1].msg_txrx[27].north_rx  ( .i(\s_tx[1][2][27] ), 
        .o(\n[1][3][27] ) );
  low_swing_rx_169 \ys[3].xs[1].msg_txrx[27].west_rx  ( .i(\e_tx[0][3][27] ), 
        .o(\w[1][3][27] ) );
  low_swing_tx_170 \ys[3].xs[1].msg_txrx[27].south_tx  ( .i(\s[1][3][27] ), 
        .c(\s_tx[1][3][27] ) );
  low_swing_tx_169 \ys[3].xs[1].msg_txrx[27].east_tx  ( .i(\e[1][3][27] ), .c(
        \e_tx[1][3][27] ) );
  low_swing_rx_168 \ys[3].xs[1].msg_txrx[28].north_rx  ( .i(\s_tx[1][2][28] ), 
        .o(\n[1][3][28] ) );
  low_swing_rx_167 \ys[3].xs[1].msg_txrx[28].west_rx  ( .i(\e_tx[0][3][28] ), 
        .o(\w[1][3][28] ) );
  low_swing_tx_168 \ys[3].xs[1].msg_txrx[28].south_tx  ( .i(\s[1][3][28] ), 
        .c(\s_tx[1][3][28] ) );
  low_swing_tx_167 \ys[3].xs[1].msg_txrx[28].east_tx  ( .i(\e[1][3][28] ), .c(
        \e_tx[1][3][28] ) );
  low_swing_rx_166 \ys[3].xs[1].msg_txrx[29].north_rx  ( .i(\s_tx[1][2][29] ), 
        .o(\n[1][3][29] ) );
  low_swing_rx_165 \ys[3].xs[1].msg_txrx[29].west_rx  ( .i(\e_tx[0][3][29] ), 
        .o(\w[1][3][29] ) );
  low_swing_tx_166 \ys[3].xs[1].msg_txrx[29].south_tx  ( .i(\s[1][3][29] ), 
        .c(\s_tx[1][3][29] ) );
  low_swing_tx_165 \ys[3].xs[1].msg_txrx[29].east_tx  ( .i(\e[1][3][29] ), .c(
        \e_tx[1][3][29] ) );
  low_swing_rx_164 \ys[3].xs[1].msg_txrx[30].north_rx  ( .i(\s_tx[1][2][30] ), 
        .o(\n[1][3][30] ) );
  low_swing_rx_163 \ys[3].xs[1].msg_txrx[30].west_rx  ( .i(\e_tx[0][3][30] ), 
        .o(\w[1][3][30] ) );
  low_swing_tx_164 \ys[3].xs[1].msg_txrx[30].south_tx  ( .i(\s[1][3][30] ), 
        .c(\s_tx[1][3][30] ) );
  low_swing_tx_163 \ys[3].xs[1].msg_txrx[30].east_tx  ( .i(\e[1][3][30] ), .c(
        \e_tx[1][3][30] ) );
  low_swing_rx_162 \ys[3].xs[1].msg_txrx[31].north_rx  ( .i(\s_tx[1][2][31] ), 
        .o(\n[1][3][31] ) );
  low_swing_rx_161 \ys[3].xs[1].msg_txrx[31].west_rx  ( .i(\e_tx[0][3][31] ), 
        .o(\w[1][3][31] ) );
  low_swing_tx_162 \ys[3].xs[1].msg_txrx[31].south_tx  ( .i(\s[1][3][31] ), 
        .c(\s_tx[1][3][31] ) );
  low_swing_tx_161 \ys[3].xs[1].msg_txrx[31].east_tx  ( .i(\e[1][3][31] ), .c(
        \e_tx[1][3][31] ) );
  low_swing_rx_160 \ys[3].xs[1].msg_txrx[32].north_rx  ( .i(\s_tx[1][2][32] ), 
        .o(\n[1][3][32] ) );
  low_swing_rx_159 \ys[3].xs[1].msg_txrx[32].west_rx  ( .i(\e_tx[0][3][32] ), 
        .o(\w[1][3][32] ) );
  low_swing_tx_160 \ys[3].xs[1].msg_txrx[32].south_tx  ( .i(\s[1][3][32] ), 
        .c(\s_tx[1][3][32] ) );
  low_swing_tx_159 \ys[3].xs[1].msg_txrx[32].east_tx  ( .i(\e[1][3][32] ), .c(
        \e_tx[1][3][32] ) );
  low_swing_rx_158 \ys[3].xs[1].msg_txrx[33].north_rx  ( .i(\s_tx[1][2][33] ), 
        .o(\n[1][3][33] ) );
  low_swing_rx_157 \ys[3].xs[1].msg_txrx[33].west_rx  ( .i(\e_tx[0][3][33] ), 
        .o(\w[1][3][33] ) );
  low_swing_tx_158 \ys[3].xs[1].msg_txrx[33].south_tx  ( .i(\s[1][3][33] ), 
        .c(\s_tx[1][3][33] ) );
  low_swing_tx_157 \ys[3].xs[1].msg_txrx[33].east_tx  ( .i(\e[1][3][33] ), .c(
        \e_tx[1][3][33] ) );
  low_swing_rx_156 \ys[3].xs[1].msg_txrx[34].north_rx  ( .i(\s_tx[1][2][34] ), 
        .o(\n[1][3][34] ) );
  low_swing_rx_155 \ys[3].xs[1].msg_txrx[34].west_rx  ( .i(\e_tx[0][3][34] ), 
        .o(\w[1][3][34] ) );
  low_swing_tx_156 \ys[3].xs[1].msg_txrx[34].south_tx  ( .i(\s[1][3][34] ), 
        .c(\s_tx[1][3][34] ) );
  low_swing_tx_155 \ys[3].xs[1].msg_txrx[34].east_tx  ( .i(\e[1][3][34] ), .c(
        \e_tx[1][3][34] ) );
  low_swing_rx_154 \ys[3].xs[1].msg_txrx[35].north_rx  ( .i(\s_tx[1][2][35] ), 
        .o(\n[1][3][35] ) );
  low_swing_rx_153 \ys[3].xs[1].msg_txrx[35].west_rx  ( .i(\e_tx[0][3][35] ), 
        .o(\w[1][3][35] ) );
  low_swing_tx_154 \ys[3].xs[1].msg_txrx[35].south_tx  ( .i(\s[1][3][35] ), 
        .c(\s_tx[1][3][35] ) );
  low_swing_tx_153 \ys[3].xs[1].msg_txrx[35].east_tx  ( .i(\e[1][3][35] ), .c(
        \e_tx[1][3][35] ) );
  low_swing_rx_152 \ys[3].xs[1].msg_txrx[36].north_rx  ( .i(\s_tx[1][2][36] ), 
        .o(\n[1][3][36] ) );
  low_swing_rx_151 \ys[3].xs[1].msg_txrx[36].west_rx  ( .i(\e_tx[0][3][36] ), 
        .o(\w[1][3][36] ) );
  low_swing_tx_152 \ys[3].xs[1].msg_txrx[36].south_tx  ( .i(\s[1][3][36] ), 
        .c(\s_tx[1][3][36] ) );
  low_swing_tx_151 \ys[3].xs[1].msg_txrx[36].east_tx  ( .i(\e[1][3][36] ), .c(
        \e_tx[1][3][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X2_Y3_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[3].xs[2].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[2][3] ), .i_v(\i[2][3][36] ), 
        .i_x({\i[2][3][35] , \i[2][3][34] }), .i_y({\i[2][3][33] , 
        \i[2][3][32] }), .i_data({\i[2][3][31] , \i[2][3][30] , \i[2][3][29] , 
        \i[2][3][28] , \i[2][3][27] , \i[2][3][26] , \i[2][3][25] , 
        \i[2][3][24] , \i[2][3][23] , \i[2][3][22] , \i[2][3][21] , 
        \i[2][3][20] , \i[2][3][19] , \i[2][3][18] , \i[2][3][17] , 
        \i[2][3][16] , \i[2][3][15] , \i[2][3][14] , \i[2][3][13] , 
        \i[2][3][12] , \i[2][3][11] , \i[2][3][10] , \i[2][3][9] , 
        \i[2][3][8] , \i[2][3][7] , \i[2][3][6] , \i[2][3][5] , \i[2][3][4] , 
        \i[2][3][3] , \i[2][3][2] , \i[2][3][1] , \i[2][3][0] }), .o_v(
        \o_v[2][3] ), .o_x({\s[2][3][35] , \s[2][3][34] }), .o_y({
        \s[2][3][33] , \s[2][3][32] }), .o_data({\s[2][3][31] , \s[2][3][30] , 
        \s[2][3][29] , \s[2][3][28] , \s[2][3][27] , \s[2][3][26] , 
        \s[2][3][25] , \s[2][3][24] , \s[2][3][23] , \s[2][3][22] , 
        \s[2][3][21] , \s[2][3][20] , \s[2][3][19] , \s[2][3][18] , 
        \s[2][3][17] , \s[2][3][16] , \s[2][3][15] , \s[2][3][14] , 
        \s[2][3][13] , \s[2][3][12] , \s[2][3][11] , \s[2][3][10] , 
        \s[2][3][9] , \s[2][3][8] , \s[2][3][7] , \s[2][3][6] , \s[2][3][5] , 
        \s[2][3][4] , \s[2][3][3] , \s[2][3][2] , \s[2][3][1] , \s[2][3][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X2_Y3 \ys[3].xs[2].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[2][3][36] ), .n_in_x({\n[2][3][35] , 
        \n[2][3][34] }), .n_in_y({\n[2][3][33] , \n[2][3][32] }), .n_in_data({
        \n[2][3][31] , \n[2][3][30] , \n[2][3][29] , \n[2][3][28] , 
        \n[2][3][27] , \n[2][3][26] , \n[2][3][25] , \n[2][3][24] , 
        \n[2][3][23] , \n[2][3][22] , \n[2][3][21] , \n[2][3][20] , 
        \n[2][3][19] , \n[2][3][18] , \n[2][3][17] , \n[2][3][16] , 
        \n[2][3][15] , \n[2][3][14] , \n[2][3][13] , \n[2][3][12] , 
        \n[2][3][11] , \n[2][3][10] , \n[2][3][9] , \n[2][3][8] , \n[2][3][7] , 
        \n[2][3][6] , \n[2][3][5] , \n[2][3][4] , \n[2][3][3] , \n[2][3][2] , 
        \n[2][3][1] , \n[2][3][0] }), .w_in_v(\w[2][3][36] ), .w_in_x({
        \w[2][3][35] , \w[2][3][34] }), .w_in_y({\w[2][3][33] , \w[2][3][32] }), .w_in_data({\w[2][3][31] , \w[2][3][30] , \w[2][3][29] , \w[2][3][28] , 
        \w[2][3][27] , \w[2][3][26] , \w[2][3][25] , \w[2][3][24] , 
        \w[2][3][23] , \w[2][3][22] , \w[2][3][21] , \w[2][3][20] , 
        \w[2][3][19] , \w[2][3][18] , \w[2][3][17] , \w[2][3][16] , 
        \w[2][3][15] , \w[2][3][14] , \w[2][3][13] , \w[2][3][12] , 
        \w[2][3][11] , \w[2][3][10] , \w[2][3][9] , \w[2][3][8] , \w[2][3][7] , 
        \w[2][3][6] , \w[2][3][5] , \w[2][3][4] , \w[2][3][3] , \w[2][3][2] , 
        \w[2][3][1] , \w[2][3][0] }), .i_v(\i[2][3][36] ), .i_x({\i[2][3][35] , 
        \i[2][3][34] }), .i_y({\i[2][3][33] , \i[2][3][32] }), .i_data({
        \i[2][3][31] , \i[2][3][30] , \i[2][3][29] , \i[2][3][28] , 
        \i[2][3][27] , \i[2][3][26] , \i[2][3][25] , \i[2][3][24] , 
        \i[2][3][23] , \i[2][3][22] , \i[2][3][21] , \i[2][3][20] , 
        \i[2][3][19] , \i[2][3][18] , \i[2][3][17] , \i[2][3][16] , 
        \i[2][3][15] , \i[2][3][14] , \i[2][3][13] , \i[2][3][12] , 
        \i[2][3][11] , \i[2][3][10] , \i[2][3][9] , \i[2][3][8] , \i[2][3][7] , 
        \i[2][3][6] , \i[2][3][5] , \i[2][3][4] , \i[2][3][3] , \i[2][3][2] , 
        \i[2][3][1] , \i[2][3][0] }), .e_b(\e_b[2][3] ), .w_b(\w_b[2][3] ), 
        .i_ack(\i_ack[2][3] ), .o_v(\o_v[2][3] ), .s_out_v(\s[2][3][36] ), 
        .s_out_x({\s[2][3][35] , \s[2][3][34] }), .s_out_y({\s[2][3][33] , 
        \s[2][3][32] }), .s_out_data({\s[2][3][31] , \s[2][3][30] , 
        \s[2][3][29] , \s[2][3][28] , \s[2][3][27] , \s[2][3][26] , 
        \s[2][3][25] , \s[2][3][24] , \s[2][3][23] , \s[2][3][22] , 
        \s[2][3][21] , \s[2][3][20] , \s[2][3][19] , \s[2][3][18] , 
        \s[2][3][17] , \s[2][3][16] , \s[2][3][15] , \s[2][3][14] , 
        \s[2][3][13] , \s[2][3][12] , \s[2][3][11] , \s[2][3][10] , 
        \s[2][3][9] , \s[2][3][8] , \s[2][3][7] , \s[2][3][6] , \s[2][3][5] , 
        \s[2][3][4] , \s[2][3][3] , \s[2][3][2] , \s[2][3][1] , \s[2][3][0] }), 
        .e_out_v(\e[2][3][36] ), .e_out_x({\e[2][3][35] , \e[2][3][34] }), 
        .e_out_y({\e[2][3][33] , \e[2][3][32] }), .e_out_data({\e[2][3][31] , 
        \e[2][3][30] , \e[2][3][29] , \e[2][3][28] , \e[2][3][27] , 
        \e[2][3][26] , \e[2][3][25] , \e[2][3][24] , \e[2][3][23] , 
        \e[2][3][22] , \e[2][3][21] , \e[2][3][20] , \e[2][3][19] , 
        \e[2][3][18] , \e[2][3][17] , \e[2][3][16] , \e[2][3][15] , 
        \e[2][3][14] , \e[2][3][13] , \e[2][3][12] , \e[2][3][11] , 
        \e[2][3][10] , \e[2][3][9] , \e[2][3][8] , \e[2][3][7] , \e[2][3][6] , 
        \e[2][3][5] , \e[2][3][4] , \e[2][3][3] , \e[2][3][2] , \e[2][3][1] , 
        \e[2][3][0] }) );
  low_swing_rx_150 \ys[3].xs[2].east_bp_rx  ( .i(\w_b_tx[3][3] ), .o(
        \e_b[2][3] ) );
  low_swing_tx_150 \ys[3].xs[2].west_bp_tx  ( .i(\w_b[2][3] ), .c(
        \w_b_tx[2][3] ) );
  low_swing_rx_149 \ys[3].xs[2].msg_txrx[0].north_rx  ( .i(\s_tx[2][2][0] ), 
        .o(\n[2][3][0] ) );
  low_swing_rx_148 \ys[3].xs[2].msg_txrx[0].west_rx  ( .i(\e_tx[1][3][0] ), 
        .o(\w[2][3][0] ) );
  low_swing_tx_149 \ys[3].xs[2].msg_txrx[0].south_tx  ( .i(\s[2][3][0] ), .c(
        \s_tx[2][3][0] ) );
  low_swing_tx_148 \ys[3].xs[2].msg_txrx[0].east_tx  ( .i(\e[2][3][0] ), .c(
        \e_tx[2][3][0] ) );
  low_swing_rx_147 \ys[3].xs[2].msg_txrx[1].north_rx  ( .i(\s_tx[2][2][1] ), 
        .o(\n[2][3][1] ) );
  low_swing_rx_146 \ys[3].xs[2].msg_txrx[1].west_rx  ( .i(\e_tx[1][3][1] ), 
        .o(\w[2][3][1] ) );
  low_swing_tx_147 \ys[3].xs[2].msg_txrx[1].south_tx  ( .i(\s[2][3][1] ), .c(
        \s_tx[2][3][1] ) );
  low_swing_tx_146 \ys[3].xs[2].msg_txrx[1].east_tx  ( .i(\e[2][3][1] ), .c(
        \e_tx[2][3][1] ) );
  low_swing_rx_145 \ys[3].xs[2].msg_txrx[2].north_rx  ( .i(\s_tx[2][2][2] ), 
        .o(\n[2][3][2] ) );
  low_swing_rx_144 \ys[3].xs[2].msg_txrx[2].west_rx  ( .i(\e_tx[1][3][2] ), 
        .o(\w[2][3][2] ) );
  low_swing_tx_145 \ys[3].xs[2].msg_txrx[2].south_tx  ( .i(\s[2][3][2] ), .c(
        \s_tx[2][3][2] ) );
  low_swing_tx_144 \ys[3].xs[2].msg_txrx[2].east_tx  ( .i(\e[2][3][2] ), .c(
        \e_tx[2][3][2] ) );
  low_swing_rx_143 \ys[3].xs[2].msg_txrx[3].north_rx  ( .i(\s_tx[2][2][3] ), 
        .o(\n[2][3][3] ) );
  low_swing_rx_142 \ys[3].xs[2].msg_txrx[3].west_rx  ( .i(\e_tx[1][3][3] ), 
        .o(\w[2][3][3] ) );
  low_swing_tx_143 \ys[3].xs[2].msg_txrx[3].south_tx  ( .i(\s[2][3][3] ), .c(
        \s_tx[2][3][3] ) );
  low_swing_tx_142 \ys[3].xs[2].msg_txrx[3].east_tx  ( .i(\e[2][3][3] ), .c(
        \e_tx[2][3][3] ) );
  low_swing_rx_141 \ys[3].xs[2].msg_txrx[4].north_rx  ( .i(\s_tx[2][2][4] ), 
        .o(\n[2][3][4] ) );
  low_swing_rx_140 \ys[3].xs[2].msg_txrx[4].west_rx  ( .i(\e_tx[1][3][4] ), 
        .o(\w[2][3][4] ) );
  low_swing_tx_141 \ys[3].xs[2].msg_txrx[4].south_tx  ( .i(\s[2][3][4] ), .c(
        \s_tx[2][3][4] ) );
  low_swing_tx_140 \ys[3].xs[2].msg_txrx[4].east_tx  ( .i(\e[2][3][4] ), .c(
        \e_tx[2][3][4] ) );
  low_swing_rx_139 \ys[3].xs[2].msg_txrx[5].north_rx  ( .i(\s_tx[2][2][5] ), 
        .o(\n[2][3][5] ) );
  low_swing_rx_138 \ys[3].xs[2].msg_txrx[5].west_rx  ( .i(\e_tx[1][3][5] ), 
        .o(\w[2][3][5] ) );
  low_swing_tx_139 \ys[3].xs[2].msg_txrx[5].south_tx  ( .i(\s[2][3][5] ), .c(
        \s_tx[2][3][5] ) );
  low_swing_tx_138 \ys[3].xs[2].msg_txrx[5].east_tx  ( .i(\e[2][3][5] ), .c(
        \e_tx[2][3][5] ) );
  low_swing_rx_137 \ys[3].xs[2].msg_txrx[6].north_rx  ( .i(\s_tx[2][2][6] ), 
        .o(\n[2][3][6] ) );
  low_swing_rx_136 \ys[3].xs[2].msg_txrx[6].west_rx  ( .i(\e_tx[1][3][6] ), 
        .o(\w[2][3][6] ) );
  low_swing_tx_137 \ys[3].xs[2].msg_txrx[6].south_tx  ( .i(\s[2][3][6] ), .c(
        \s_tx[2][3][6] ) );
  low_swing_tx_136 \ys[3].xs[2].msg_txrx[6].east_tx  ( .i(\e[2][3][6] ), .c(
        \e_tx[2][3][6] ) );
  low_swing_rx_135 \ys[3].xs[2].msg_txrx[7].north_rx  ( .i(\s_tx[2][2][7] ), 
        .o(\n[2][3][7] ) );
  low_swing_rx_134 \ys[3].xs[2].msg_txrx[7].west_rx  ( .i(\e_tx[1][3][7] ), 
        .o(\w[2][3][7] ) );
  low_swing_tx_135 \ys[3].xs[2].msg_txrx[7].south_tx  ( .i(\s[2][3][7] ), .c(
        \s_tx[2][3][7] ) );
  low_swing_tx_134 \ys[3].xs[2].msg_txrx[7].east_tx  ( .i(\e[2][3][7] ), .c(
        \e_tx[2][3][7] ) );
  low_swing_rx_133 \ys[3].xs[2].msg_txrx[8].north_rx  ( .i(\s_tx[2][2][8] ), 
        .o(\n[2][3][8] ) );
  low_swing_rx_132 \ys[3].xs[2].msg_txrx[8].west_rx  ( .i(\e_tx[1][3][8] ), 
        .o(\w[2][3][8] ) );
  low_swing_tx_133 \ys[3].xs[2].msg_txrx[8].south_tx  ( .i(\s[2][3][8] ), .c(
        \s_tx[2][3][8] ) );
  low_swing_tx_132 \ys[3].xs[2].msg_txrx[8].east_tx  ( .i(\e[2][3][8] ), .c(
        \e_tx[2][3][8] ) );
  low_swing_rx_131 \ys[3].xs[2].msg_txrx[9].north_rx  ( .i(\s_tx[2][2][9] ), 
        .o(\n[2][3][9] ) );
  low_swing_rx_130 \ys[3].xs[2].msg_txrx[9].west_rx  ( .i(\e_tx[1][3][9] ), 
        .o(\w[2][3][9] ) );
  low_swing_tx_131 \ys[3].xs[2].msg_txrx[9].south_tx  ( .i(\s[2][3][9] ), .c(
        \s_tx[2][3][9] ) );
  low_swing_tx_130 \ys[3].xs[2].msg_txrx[9].east_tx  ( .i(\e[2][3][9] ), .c(
        \e_tx[2][3][9] ) );
  low_swing_rx_129 \ys[3].xs[2].msg_txrx[10].north_rx  ( .i(\s_tx[2][2][10] ), 
        .o(\n[2][3][10] ) );
  low_swing_rx_128 \ys[3].xs[2].msg_txrx[10].west_rx  ( .i(\e_tx[1][3][10] ), 
        .o(\w[2][3][10] ) );
  low_swing_tx_129 \ys[3].xs[2].msg_txrx[10].south_tx  ( .i(\s[2][3][10] ), 
        .c(\s_tx[2][3][10] ) );
  low_swing_tx_128 \ys[3].xs[2].msg_txrx[10].east_tx  ( .i(\e[2][3][10] ), .c(
        \e_tx[2][3][10] ) );
  low_swing_rx_127 \ys[3].xs[2].msg_txrx[11].north_rx  ( .i(\s_tx[2][2][11] ), 
        .o(\n[2][3][11] ) );
  low_swing_rx_126 \ys[3].xs[2].msg_txrx[11].west_rx  ( .i(\e_tx[1][3][11] ), 
        .o(\w[2][3][11] ) );
  low_swing_tx_127 \ys[3].xs[2].msg_txrx[11].south_tx  ( .i(\s[2][3][11] ), 
        .c(\s_tx[2][3][11] ) );
  low_swing_tx_126 \ys[3].xs[2].msg_txrx[11].east_tx  ( .i(\e[2][3][11] ), .c(
        \e_tx[2][3][11] ) );
  low_swing_rx_125 \ys[3].xs[2].msg_txrx[12].north_rx  ( .i(\s_tx[2][2][12] ), 
        .o(\n[2][3][12] ) );
  low_swing_rx_124 \ys[3].xs[2].msg_txrx[12].west_rx  ( .i(\e_tx[1][3][12] ), 
        .o(\w[2][3][12] ) );
  low_swing_tx_125 \ys[3].xs[2].msg_txrx[12].south_tx  ( .i(\s[2][3][12] ), 
        .c(\s_tx[2][3][12] ) );
  low_swing_tx_124 \ys[3].xs[2].msg_txrx[12].east_tx  ( .i(\e[2][3][12] ), .c(
        \e_tx[2][3][12] ) );
  low_swing_rx_123 \ys[3].xs[2].msg_txrx[13].north_rx  ( .i(\s_tx[2][2][13] ), 
        .o(\n[2][3][13] ) );
  low_swing_rx_122 \ys[3].xs[2].msg_txrx[13].west_rx  ( .i(\e_tx[1][3][13] ), 
        .o(\w[2][3][13] ) );
  low_swing_tx_123 \ys[3].xs[2].msg_txrx[13].south_tx  ( .i(\s[2][3][13] ), 
        .c(\s_tx[2][3][13] ) );
  low_swing_tx_122 \ys[3].xs[2].msg_txrx[13].east_tx  ( .i(\e[2][3][13] ), .c(
        \e_tx[2][3][13] ) );
  low_swing_rx_121 \ys[3].xs[2].msg_txrx[14].north_rx  ( .i(\s_tx[2][2][14] ), 
        .o(\n[2][3][14] ) );
  low_swing_rx_120 \ys[3].xs[2].msg_txrx[14].west_rx  ( .i(\e_tx[1][3][14] ), 
        .o(\w[2][3][14] ) );
  low_swing_tx_121 \ys[3].xs[2].msg_txrx[14].south_tx  ( .i(\s[2][3][14] ), 
        .c(\s_tx[2][3][14] ) );
  low_swing_tx_120 \ys[3].xs[2].msg_txrx[14].east_tx  ( .i(\e[2][3][14] ), .c(
        \e_tx[2][3][14] ) );
  low_swing_rx_119 \ys[3].xs[2].msg_txrx[15].north_rx  ( .i(\s_tx[2][2][15] ), 
        .o(\n[2][3][15] ) );
  low_swing_rx_118 \ys[3].xs[2].msg_txrx[15].west_rx  ( .i(\e_tx[1][3][15] ), 
        .o(\w[2][3][15] ) );
  low_swing_tx_119 \ys[3].xs[2].msg_txrx[15].south_tx  ( .i(\s[2][3][15] ), 
        .c(\s_tx[2][3][15] ) );
  low_swing_tx_118 \ys[3].xs[2].msg_txrx[15].east_tx  ( .i(\e[2][3][15] ), .c(
        \e_tx[2][3][15] ) );
  low_swing_rx_117 \ys[3].xs[2].msg_txrx[16].north_rx  ( .i(\s_tx[2][2][16] ), 
        .o(\n[2][3][16] ) );
  low_swing_rx_116 \ys[3].xs[2].msg_txrx[16].west_rx  ( .i(\e_tx[1][3][16] ), 
        .o(\w[2][3][16] ) );
  low_swing_tx_117 \ys[3].xs[2].msg_txrx[16].south_tx  ( .i(\s[2][3][16] ), 
        .c(\s_tx[2][3][16] ) );
  low_swing_tx_116 \ys[3].xs[2].msg_txrx[16].east_tx  ( .i(\e[2][3][16] ), .c(
        \e_tx[2][3][16] ) );
  low_swing_rx_115 \ys[3].xs[2].msg_txrx[17].north_rx  ( .i(\s_tx[2][2][17] ), 
        .o(\n[2][3][17] ) );
  low_swing_rx_114 \ys[3].xs[2].msg_txrx[17].west_rx  ( .i(\e_tx[1][3][17] ), 
        .o(\w[2][3][17] ) );
  low_swing_tx_115 \ys[3].xs[2].msg_txrx[17].south_tx  ( .i(\s[2][3][17] ), 
        .c(\s_tx[2][3][17] ) );
  low_swing_tx_114 \ys[3].xs[2].msg_txrx[17].east_tx  ( .i(\e[2][3][17] ), .c(
        \e_tx[2][3][17] ) );
  low_swing_rx_113 \ys[3].xs[2].msg_txrx[18].north_rx  ( .i(\s_tx[2][2][18] ), 
        .o(\n[2][3][18] ) );
  low_swing_rx_112 \ys[3].xs[2].msg_txrx[18].west_rx  ( .i(\e_tx[1][3][18] ), 
        .o(\w[2][3][18] ) );
  low_swing_tx_113 \ys[3].xs[2].msg_txrx[18].south_tx  ( .i(\s[2][3][18] ), 
        .c(\s_tx[2][3][18] ) );
  low_swing_tx_112 \ys[3].xs[2].msg_txrx[18].east_tx  ( .i(\e[2][3][18] ), .c(
        \e_tx[2][3][18] ) );
  low_swing_rx_111 \ys[3].xs[2].msg_txrx[19].north_rx  ( .i(\s_tx[2][2][19] ), 
        .o(\n[2][3][19] ) );
  low_swing_rx_110 \ys[3].xs[2].msg_txrx[19].west_rx  ( .i(\e_tx[1][3][19] ), 
        .o(\w[2][3][19] ) );
  low_swing_tx_111 \ys[3].xs[2].msg_txrx[19].south_tx  ( .i(\s[2][3][19] ), 
        .c(\s_tx[2][3][19] ) );
  low_swing_tx_110 \ys[3].xs[2].msg_txrx[19].east_tx  ( .i(\e[2][3][19] ), .c(
        \e_tx[2][3][19] ) );
  low_swing_rx_109 \ys[3].xs[2].msg_txrx[20].north_rx  ( .i(\s_tx[2][2][20] ), 
        .o(\n[2][3][20] ) );
  low_swing_rx_108 \ys[3].xs[2].msg_txrx[20].west_rx  ( .i(\e_tx[1][3][20] ), 
        .o(\w[2][3][20] ) );
  low_swing_tx_109 \ys[3].xs[2].msg_txrx[20].south_tx  ( .i(\s[2][3][20] ), 
        .c(\s_tx[2][3][20] ) );
  low_swing_tx_108 \ys[3].xs[2].msg_txrx[20].east_tx  ( .i(\e[2][3][20] ), .c(
        \e_tx[2][3][20] ) );
  low_swing_rx_107 \ys[3].xs[2].msg_txrx[21].north_rx  ( .i(\s_tx[2][2][21] ), 
        .o(\n[2][3][21] ) );
  low_swing_rx_106 \ys[3].xs[2].msg_txrx[21].west_rx  ( .i(\e_tx[1][3][21] ), 
        .o(\w[2][3][21] ) );
  low_swing_tx_107 \ys[3].xs[2].msg_txrx[21].south_tx  ( .i(\s[2][3][21] ), 
        .c(\s_tx[2][3][21] ) );
  low_swing_tx_106 \ys[3].xs[2].msg_txrx[21].east_tx  ( .i(\e[2][3][21] ), .c(
        \e_tx[2][3][21] ) );
  low_swing_rx_105 \ys[3].xs[2].msg_txrx[22].north_rx  ( .i(\s_tx[2][2][22] ), 
        .o(\n[2][3][22] ) );
  low_swing_rx_104 \ys[3].xs[2].msg_txrx[22].west_rx  ( .i(\e_tx[1][3][22] ), 
        .o(\w[2][3][22] ) );
  low_swing_tx_105 \ys[3].xs[2].msg_txrx[22].south_tx  ( .i(\s[2][3][22] ), 
        .c(\s_tx[2][3][22] ) );
  low_swing_tx_104 \ys[3].xs[2].msg_txrx[22].east_tx  ( .i(\e[2][3][22] ), .c(
        \e_tx[2][3][22] ) );
  low_swing_rx_103 \ys[3].xs[2].msg_txrx[23].north_rx  ( .i(\s_tx[2][2][23] ), 
        .o(\n[2][3][23] ) );
  low_swing_rx_102 \ys[3].xs[2].msg_txrx[23].west_rx  ( .i(\e_tx[1][3][23] ), 
        .o(\w[2][3][23] ) );
  low_swing_tx_103 \ys[3].xs[2].msg_txrx[23].south_tx  ( .i(\s[2][3][23] ), 
        .c(\s_tx[2][3][23] ) );
  low_swing_tx_102 \ys[3].xs[2].msg_txrx[23].east_tx  ( .i(\e[2][3][23] ), .c(
        \e_tx[2][3][23] ) );
  low_swing_rx_101 \ys[3].xs[2].msg_txrx[24].north_rx  ( .i(\s_tx[2][2][24] ), 
        .o(\n[2][3][24] ) );
  low_swing_rx_100 \ys[3].xs[2].msg_txrx[24].west_rx  ( .i(\e_tx[1][3][24] ), 
        .o(\w[2][3][24] ) );
  low_swing_tx_101 \ys[3].xs[2].msg_txrx[24].south_tx  ( .i(\s[2][3][24] ), 
        .c(\s_tx[2][3][24] ) );
  low_swing_tx_100 \ys[3].xs[2].msg_txrx[24].east_tx  ( .i(\e[2][3][24] ), .c(
        \e_tx[2][3][24] ) );
  low_swing_rx_99 \ys[3].xs[2].msg_txrx[25].north_rx  ( .i(\s_tx[2][2][25] ), 
        .o(\n[2][3][25] ) );
  low_swing_rx_98 \ys[3].xs[2].msg_txrx[25].west_rx  ( .i(\e_tx[1][3][25] ), 
        .o(\w[2][3][25] ) );
  low_swing_tx_99 \ys[3].xs[2].msg_txrx[25].south_tx  ( .i(\s[2][3][25] ), .c(
        \s_tx[2][3][25] ) );
  low_swing_tx_98 \ys[3].xs[2].msg_txrx[25].east_tx  ( .i(\e[2][3][25] ), .c(
        \e_tx[2][3][25] ) );
  low_swing_rx_97 \ys[3].xs[2].msg_txrx[26].north_rx  ( .i(\s_tx[2][2][26] ), 
        .o(\n[2][3][26] ) );
  low_swing_rx_96 \ys[3].xs[2].msg_txrx[26].west_rx  ( .i(\e_tx[1][3][26] ), 
        .o(\w[2][3][26] ) );
  low_swing_tx_97 \ys[3].xs[2].msg_txrx[26].south_tx  ( .i(\s[2][3][26] ), .c(
        \s_tx[2][3][26] ) );
  low_swing_tx_96 \ys[3].xs[2].msg_txrx[26].east_tx  ( .i(\e[2][3][26] ), .c(
        \e_tx[2][3][26] ) );
  low_swing_rx_95 \ys[3].xs[2].msg_txrx[27].north_rx  ( .i(\s_tx[2][2][27] ), 
        .o(\n[2][3][27] ) );
  low_swing_rx_94 \ys[3].xs[2].msg_txrx[27].west_rx  ( .i(\e_tx[1][3][27] ), 
        .o(\w[2][3][27] ) );
  low_swing_tx_95 \ys[3].xs[2].msg_txrx[27].south_tx  ( .i(\s[2][3][27] ), .c(
        \s_tx[2][3][27] ) );
  low_swing_tx_94 \ys[3].xs[2].msg_txrx[27].east_tx  ( .i(\e[2][3][27] ), .c(
        \e_tx[2][3][27] ) );
  low_swing_rx_93 \ys[3].xs[2].msg_txrx[28].north_rx  ( .i(\s_tx[2][2][28] ), 
        .o(\n[2][3][28] ) );
  low_swing_rx_92 \ys[3].xs[2].msg_txrx[28].west_rx  ( .i(\e_tx[1][3][28] ), 
        .o(\w[2][3][28] ) );
  low_swing_tx_93 \ys[3].xs[2].msg_txrx[28].south_tx  ( .i(\s[2][3][28] ), .c(
        \s_tx[2][3][28] ) );
  low_swing_tx_92 \ys[3].xs[2].msg_txrx[28].east_tx  ( .i(\e[2][3][28] ), .c(
        \e_tx[2][3][28] ) );
  low_swing_rx_91 \ys[3].xs[2].msg_txrx[29].north_rx  ( .i(\s_tx[2][2][29] ), 
        .o(\n[2][3][29] ) );
  low_swing_rx_90 \ys[3].xs[2].msg_txrx[29].west_rx  ( .i(\e_tx[1][3][29] ), 
        .o(\w[2][3][29] ) );
  low_swing_tx_91 \ys[3].xs[2].msg_txrx[29].south_tx  ( .i(\s[2][3][29] ), .c(
        \s_tx[2][3][29] ) );
  low_swing_tx_90 \ys[3].xs[2].msg_txrx[29].east_tx  ( .i(\e[2][3][29] ), .c(
        \e_tx[2][3][29] ) );
  low_swing_rx_89 \ys[3].xs[2].msg_txrx[30].north_rx  ( .i(\s_tx[2][2][30] ), 
        .o(\n[2][3][30] ) );
  low_swing_rx_88 \ys[3].xs[2].msg_txrx[30].west_rx  ( .i(\e_tx[1][3][30] ), 
        .o(\w[2][3][30] ) );
  low_swing_tx_89 \ys[3].xs[2].msg_txrx[30].south_tx  ( .i(\s[2][3][30] ), .c(
        \s_tx[2][3][30] ) );
  low_swing_tx_88 \ys[3].xs[2].msg_txrx[30].east_tx  ( .i(\e[2][3][30] ), .c(
        \e_tx[2][3][30] ) );
  low_swing_rx_87 \ys[3].xs[2].msg_txrx[31].north_rx  ( .i(\s_tx[2][2][31] ), 
        .o(\n[2][3][31] ) );
  low_swing_rx_86 \ys[3].xs[2].msg_txrx[31].west_rx  ( .i(\e_tx[1][3][31] ), 
        .o(\w[2][3][31] ) );
  low_swing_tx_87 \ys[3].xs[2].msg_txrx[31].south_tx  ( .i(\s[2][3][31] ), .c(
        \s_tx[2][3][31] ) );
  low_swing_tx_86 \ys[3].xs[2].msg_txrx[31].east_tx  ( .i(\e[2][3][31] ), .c(
        \e_tx[2][3][31] ) );
  low_swing_rx_85 \ys[3].xs[2].msg_txrx[32].north_rx  ( .i(\s_tx[2][2][32] ), 
        .o(\n[2][3][32] ) );
  low_swing_rx_84 \ys[3].xs[2].msg_txrx[32].west_rx  ( .i(\e_tx[1][3][32] ), 
        .o(\w[2][3][32] ) );
  low_swing_tx_85 \ys[3].xs[2].msg_txrx[32].south_tx  ( .i(\s[2][3][32] ), .c(
        \s_tx[2][3][32] ) );
  low_swing_tx_84 \ys[3].xs[2].msg_txrx[32].east_tx  ( .i(\e[2][3][32] ), .c(
        \e_tx[2][3][32] ) );
  low_swing_rx_83 \ys[3].xs[2].msg_txrx[33].north_rx  ( .i(\s_tx[2][2][33] ), 
        .o(\n[2][3][33] ) );
  low_swing_rx_82 \ys[3].xs[2].msg_txrx[33].west_rx  ( .i(\e_tx[1][3][33] ), 
        .o(\w[2][3][33] ) );
  low_swing_tx_83 \ys[3].xs[2].msg_txrx[33].south_tx  ( .i(\s[2][3][33] ), .c(
        \s_tx[2][3][33] ) );
  low_swing_tx_82 \ys[3].xs[2].msg_txrx[33].east_tx  ( .i(\e[2][3][33] ), .c(
        \e_tx[2][3][33] ) );
  low_swing_rx_81 \ys[3].xs[2].msg_txrx[34].north_rx  ( .i(\s_tx[2][2][34] ), 
        .o(\n[2][3][34] ) );
  low_swing_rx_80 \ys[3].xs[2].msg_txrx[34].west_rx  ( .i(\e_tx[1][3][34] ), 
        .o(\w[2][3][34] ) );
  low_swing_tx_81 \ys[3].xs[2].msg_txrx[34].south_tx  ( .i(\s[2][3][34] ), .c(
        \s_tx[2][3][34] ) );
  low_swing_tx_80 \ys[3].xs[2].msg_txrx[34].east_tx  ( .i(\e[2][3][34] ), .c(
        \e_tx[2][3][34] ) );
  low_swing_rx_79 \ys[3].xs[2].msg_txrx[35].north_rx  ( .i(\s_tx[2][2][35] ), 
        .o(\n[2][3][35] ) );
  low_swing_rx_78 \ys[3].xs[2].msg_txrx[35].west_rx  ( .i(\e_tx[1][3][35] ), 
        .o(\w[2][3][35] ) );
  low_swing_tx_79 \ys[3].xs[2].msg_txrx[35].south_tx  ( .i(\s[2][3][35] ), .c(
        \s_tx[2][3][35] ) );
  low_swing_tx_78 \ys[3].xs[2].msg_txrx[35].east_tx  ( .i(\e[2][3][35] ), .c(
        \e_tx[2][3][35] ) );
  low_swing_rx_77 \ys[3].xs[2].msg_txrx[36].north_rx  ( .i(\s_tx[2][2][36] ), 
        .o(\n[2][3][36] ) );
  low_swing_rx_76 \ys[3].xs[2].msg_txrx[36].west_rx  ( .i(\e_tx[1][3][36] ), 
        .o(\w[2][3][36] ) );
  low_swing_tx_77 \ys[3].xs[2].msg_txrx[36].south_tx  ( .i(\s[2][3][36] ), .c(
        \s_tx[2][3][36] ) );
  low_swing_tx_76 \ys[3].xs[2].msg_txrx[36].east_tx  ( .i(\e[2][3][36] ), .c(
        \e_tx[2][3][36] ) );
  client_SIGMA3_RATE20_VC_W3_X_W2_Y_W2_X3_Y3_D_W32_N_PACKETS128_X_MAX4_Y_MAX4 \ys[3].xs[3].client_xy  ( 
        .clk(clk), .rst(rst), .i_ack(\i_ack[3][3] ), .i_v(\i[3][3][36] ), 
        .i_x({\i[3][3][35] , \i[3][3][34] }), .i_y({\i[3][3][33] , 
        \i[3][3][32] }), .i_data({\i[3][3][31] , \i[3][3][30] , \i[3][3][29] , 
        \i[3][3][28] , \i[3][3][27] , \i[3][3][26] , \i[3][3][25] , 
        \i[3][3][24] , \i[3][3][23] , \i[3][3][22] , \i[3][3][21] , 
        \i[3][3][20] , \i[3][3][19] , \i[3][3][18] , \i[3][3][17] , 
        \i[3][3][16] , \i[3][3][15] , \i[3][3][14] , \i[3][3][13] , 
        \i[3][3][12] , \i[3][3][11] , \i[3][3][10] , \i[3][3][9] , 
        \i[3][3][8] , \i[3][3][7] , \i[3][3][6] , \i[3][3][5] , \i[3][3][4] , 
        \i[3][3][3] , \i[3][3][2] , \i[3][3][1] , \i[3][3][0] }), .o_v(
        \o_v[3][3] ), .o_x({\s[3][3][35] , \s[3][3][34] }), .o_y({
        \s[3][3][33] , \s[3][3][32] }), .o_data({\s[3][3][31] , \s[3][3][30] , 
        \s[3][3][29] , \s[3][3][28] , \s[3][3][27] , \s[3][3][26] , 
        \s[3][3][25] , \s[3][3][24] , \s[3][3][23] , \s[3][3][22] , 
        \s[3][3][21] , \s[3][3][20] , \s[3][3][19] , \s[3][3][18] , 
        \s[3][3][17] , \s[3][3][16] , \s[3][3][15] , \s[3][3][14] , 
        \s[3][3][13] , \s[3][3][12] , \s[3][3][11] , \s[3][3][10] , 
        \s[3][3][9] , \s[3][3][8] , \s[3][3][7] , \s[3][3][6] , \s[3][3][5] , 
        \s[3][3][4] , \s[3][3][3] , \s[3][3][2] , \s[3][3][1] , \s[3][3][0] })
         );
  torus_switch_bp_X_W2_Y_W2_D_W32_X3_Y3 \ys[3].xs[3].torus_switch_xy  ( .clk(
        clk), .rst(rst), .n_in_v(\n[3][3][36] ), .n_in_x({\n[3][3][35] , 
        \n[3][3][34] }), .n_in_y({\n[3][3][33] , \n[3][3][32] }), .n_in_data({
        \n[3][3][31] , \n[3][3][30] , \n[3][3][29] , \n[3][3][28] , 
        \n[3][3][27] , \n[3][3][26] , \n[3][3][25] , \n[3][3][24] , 
        \n[3][3][23] , \n[3][3][22] , \n[3][3][21] , \n[3][3][20] , 
        \n[3][3][19] , \n[3][3][18] , \n[3][3][17] , \n[3][3][16] , 
        \n[3][3][15] , \n[3][3][14] , \n[3][3][13] , \n[3][3][12] , 
        \n[3][3][11] , \n[3][3][10] , \n[3][3][9] , \n[3][3][8] , \n[3][3][7] , 
        \n[3][3][6] , \n[3][3][5] , \n[3][3][4] , \n[3][3][3] , \n[3][3][2] , 
        \n[3][3][1] , \n[3][3][0] }), .w_in_v(\w[3][3][36] ), .w_in_x({
        \w[3][3][35] , \w[3][3][34] }), .w_in_y({\w[3][3][33] , \w[3][3][32] }), .w_in_data({\w[3][3][31] , \w[3][3][30] , \w[3][3][29] , \w[3][3][28] , 
        \w[3][3][27] , \w[3][3][26] , \w[3][3][25] , \w[3][3][24] , 
        \w[3][3][23] , \w[3][3][22] , \w[3][3][21] , \w[3][3][20] , 
        \w[3][3][19] , \w[3][3][18] , \w[3][3][17] , \w[3][3][16] , 
        \w[3][3][15] , \w[3][3][14] , \w[3][3][13] , \w[3][3][12] , 
        \w[3][3][11] , \w[3][3][10] , \w[3][3][9] , \w[3][3][8] , \w[3][3][7] , 
        \w[3][3][6] , \w[3][3][5] , \w[3][3][4] , \w[3][3][3] , \w[3][3][2] , 
        \w[3][3][1] , \w[3][3][0] }), .i_v(\i[3][3][36] ), .i_x({\i[3][3][35] , 
        \i[3][3][34] }), .i_y({\i[3][3][33] , \i[3][3][32] }), .i_data({
        \i[3][3][31] , \i[3][3][30] , \i[3][3][29] , \i[3][3][28] , 
        \i[3][3][27] , \i[3][3][26] , \i[3][3][25] , \i[3][3][24] , 
        \i[3][3][23] , \i[3][3][22] , \i[3][3][21] , \i[3][3][20] , 
        \i[3][3][19] , \i[3][3][18] , \i[3][3][17] , \i[3][3][16] , 
        \i[3][3][15] , \i[3][3][14] , \i[3][3][13] , \i[3][3][12] , 
        \i[3][3][11] , \i[3][3][10] , \i[3][3][9] , \i[3][3][8] , \i[3][3][7] , 
        \i[3][3][6] , \i[3][3][5] , \i[3][3][4] , \i[3][3][3] , \i[3][3][2] , 
        \i[3][3][1] , \i[3][3][0] }), .e_b(\e_b[3][3] ), .w_b(\w_b[3][3] ), 
        .i_ack(\i_ack[3][3] ), .o_v(\o_v[3][3] ), .s_out_v(\s[3][3][36] ), 
        .s_out_x({\s[3][3][35] , \s[3][3][34] }), .s_out_y({\s[3][3][33] , 
        \s[3][3][32] }), .s_out_data({\s[3][3][31] , \s[3][3][30] , 
        \s[3][3][29] , \s[3][3][28] , \s[3][3][27] , \s[3][3][26] , 
        \s[3][3][25] , \s[3][3][24] , \s[3][3][23] , \s[3][3][22] , 
        \s[3][3][21] , \s[3][3][20] , \s[3][3][19] , \s[3][3][18] , 
        \s[3][3][17] , \s[3][3][16] , \s[3][3][15] , \s[3][3][14] , 
        \s[3][3][13] , \s[3][3][12] , \s[3][3][11] , \s[3][3][10] , 
        \s[3][3][9] , \s[3][3][8] , \s[3][3][7] , \s[3][3][6] , \s[3][3][5] , 
        \s[3][3][4] , \s[3][3][3] , \s[3][3][2] , \s[3][3][1] , \s[3][3][0] }), 
        .e_out_v(\e[3][3][36] ), .e_out_x({\e[3][3][35] , \e[3][3][34] }), 
        .e_out_y({\e[3][3][33] , \e[3][3][32] }), .e_out_data({\e[3][3][31] , 
        \e[3][3][30] , \e[3][3][29] , \e[3][3][28] , \e[3][3][27] , 
        \e[3][3][26] , \e[3][3][25] , \e[3][3][24] , \e[3][3][23] , 
        \e[3][3][22] , \e[3][3][21] , \e[3][3][20] , \e[3][3][19] , 
        \e[3][3][18] , \e[3][3][17] , \e[3][3][16] , \e[3][3][15] , 
        \e[3][3][14] , \e[3][3][13] , \e[3][3][12] , \e[3][3][11] , 
        \e[3][3][10] , \e[3][3][9] , \e[3][3][8] , \e[3][3][7] , \e[3][3][6] , 
        \e[3][3][5] , \e[3][3][4] , \e[3][3][3] , \e[3][3][2] , \e[3][3][1] , 
        \e[3][3][0] }) );
  low_swing_rx_75 \ys[3].xs[3].east_bp_rx  ( .i(\w_b_tx[0][3] ), .o(
        \e_b[3][3] ) );
  low_swing_tx_75 \ys[3].xs[3].west_bp_tx  ( .i(\w_b[3][3] ), .c(
        \w_b_tx[3][3] ) );
  low_swing_rx_74 \ys[3].xs[3].msg_txrx[0].north_rx  ( .i(\s_tx[3][2][0] ), 
        .o(\n[3][3][0] ) );
  low_swing_rx_73 \ys[3].xs[3].msg_txrx[0].west_rx  ( .i(\e_tx[2][3][0] ), .o(
        \w[3][3][0] ) );
  low_swing_tx_74 \ys[3].xs[3].msg_txrx[0].south_tx  ( .i(\s[3][3][0] ), .c(
        \s_tx[3][3][0] ) );
  low_swing_tx_73 \ys[3].xs[3].msg_txrx[0].east_tx  ( .i(\e[3][3][0] ), .c(
        \e_tx[3][3][0] ) );
  low_swing_rx_72 \ys[3].xs[3].msg_txrx[1].north_rx  ( .i(\s_tx[3][2][1] ), 
        .o(\n[3][3][1] ) );
  low_swing_rx_71 \ys[3].xs[3].msg_txrx[1].west_rx  ( .i(\e_tx[2][3][1] ), .o(
        \w[3][3][1] ) );
  low_swing_tx_72 \ys[3].xs[3].msg_txrx[1].south_tx  ( .i(\s[3][3][1] ), .c(
        \s_tx[3][3][1] ) );
  low_swing_tx_71 \ys[3].xs[3].msg_txrx[1].east_tx  ( .i(\e[3][3][1] ), .c(
        \e_tx[3][3][1] ) );
  low_swing_rx_70 \ys[3].xs[3].msg_txrx[2].north_rx  ( .i(\s_tx[3][2][2] ), 
        .o(\n[3][3][2] ) );
  low_swing_rx_69 \ys[3].xs[3].msg_txrx[2].west_rx  ( .i(\e_tx[2][3][2] ), .o(
        \w[3][3][2] ) );
  low_swing_tx_70 \ys[3].xs[3].msg_txrx[2].south_tx  ( .i(\s[3][3][2] ), .c(
        \s_tx[3][3][2] ) );
  low_swing_tx_69 \ys[3].xs[3].msg_txrx[2].east_tx  ( .i(\e[3][3][2] ), .c(
        \e_tx[3][3][2] ) );
  low_swing_rx_68 \ys[3].xs[3].msg_txrx[3].north_rx  ( .i(\s_tx[3][2][3] ), 
        .o(\n[3][3][3] ) );
  low_swing_rx_67 \ys[3].xs[3].msg_txrx[3].west_rx  ( .i(\e_tx[2][3][3] ), .o(
        \w[3][3][3] ) );
  low_swing_tx_68 \ys[3].xs[3].msg_txrx[3].south_tx  ( .i(\s[3][3][3] ), .c(
        \s_tx[3][3][3] ) );
  low_swing_tx_67 \ys[3].xs[3].msg_txrx[3].east_tx  ( .i(\e[3][3][3] ), .c(
        \e_tx[3][3][3] ) );
  low_swing_rx_66 \ys[3].xs[3].msg_txrx[4].north_rx  ( .i(\s_tx[3][2][4] ), 
        .o(\n[3][3][4] ) );
  low_swing_rx_65 \ys[3].xs[3].msg_txrx[4].west_rx  ( .i(\e_tx[2][3][4] ), .o(
        \w[3][3][4] ) );
  low_swing_tx_66 \ys[3].xs[3].msg_txrx[4].south_tx  ( .i(\s[3][3][4] ), .c(
        \s_tx[3][3][4] ) );
  low_swing_tx_65 \ys[3].xs[3].msg_txrx[4].east_tx  ( .i(\e[3][3][4] ), .c(
        \e_tx[3][3][4] ) );
  low_swing_rx_64 \ys[3].xs[3].msg_txrx[5].north_rx  ( .i(\s_tx[3][2][5] ), 
        .o(\n[3][3][5] ) );
  low_swing_rx_63 \ys[3].xs[3].msg_txrx[5].west_rx  ( .i(\e_tx[2][3][5] ), .o(
        \w[3][3][5] ) );
  low_swing_tx_64 \ys[3].xs[3].msg_txrx[5].south_tx  ( .i(\s[3][3][5] ), .c(
        \s_tx[3][3][5] ) );
  low_swing_tx_63 \ys[3].xs[3].msg_txrx[5].east_tx  ( .i(\e[3][3][5] ), .c(
        \e_tx[3][3][5] ) );
  low_swing_rx_62 \ys[3].xs[3].msg_txrx[6].north_rx  ( .i(\s_tx[3][2][6] ), 
        .o(\n[3][3][6] ) );
  low_swing_rx_61 \ys[3].xs[3].msg_txrx[6].west_rx  ( .i(\e_tx[2][3][6] ), .o(
        \w[3][3][6] ) );
  low_swing_tx_62 \ys[3].xs[3].msg_txrx[6].south_tx  ( .i(\s[3][3][6] ), .c(
        \s_tx[3][3][6] ) );
  low_swing_tx_61 \ys[3].xs[3].msg_txrx[6].east_tx  ( .i(\e[3][3][6] ), .c(
        \e_tx[3][3][6] ) );
  low_swing_rx_60 \ys[3].xs[3].msg_txrx[7].north_rx  ( .i(\s_tx[3][2][7] ), 
        .o(\n[3][3][7] ) );
  low_swing_rx_59 \ys[3].xs[3].msg_txrx[7].west_rx  ( .i(\e_tx[2][3][7] ), .o(
        \w[3][3][7] ) );
  low_swing_tx_60 \ys[3].xs[3].msg_txrx[7].south_tx  ( .i(\s[3][3][7] ), .c(
        \s_tx[3][3][7] ) );
  low_swing_tx_59 \ys[3].xs[3].msg_txrx[7].east_tx  ( .i(\e[3][3][7] ), .c(
        \e_tx[3][3][7] ) );
  low_swing_rx_58 \ys[3].xs[3].msg_txrx[8].north_rx  ( .i(\s_tx[3][2][8] ), 
        .o(\n[3][3][8] ) );
  low_swing_rx_57 \ys[3].xs[3].msg_txrx[8].west_rx  ( .i(\e_tx[2][3][8] ), .o(
        \w[3][3][8] ) );
  low_swing_tx_58 \ys[3].xs[3].msg_txrx[8].south_tx  ( .i(\s[3][3][8] ), .c(
        \s_tx[3][3][8] ) );
  low_swing_tx_57 \ys[3].xs[3].msg_txrx[8].east_tx  ( .i(\e[3][3][8] ), .c(
        \e_tx[3][3][8] ) );
  low_swing_rx_56 \ys[3].xs[3].msg_txrx[9].north_rx  ( .i(\s_tx[3][2][9] ), 
        .o(\n[3][3][9] ) );
  low_swing_rx_55 \ys[3].xs[3].msg_txrx[9].west_rx  ( .i(\e_tx[2][3][9] ), .o(
        \w[3][3][9] ) );
  low_swing_tx_56 \ys[3].xs[3].msg_txrx[9].south_tx  ( .i(\s[3][3][9] ), .c(
        \s_tx[3][3][9] ) );
  low_swing_tx_55 \ys[3].xs[3].msg_txrx[9].east_tx  ( .i(\e[3][3][9] ), .c(
        \e_tx[3][3][9] ) );
  low_swing_rx_54 \ys[3].xs[3].msg_txrx[10].north_rx  ( .i(\s_tx[3][2][10] ), 
        .o(\n[3][3][10] ) );
  low_swing_rx_53 \ys[3].xs[3].msg_txrx[10].west_rx  ( .i(\e_tx[2][3][10] ), 
        .o(\w[3][3][10] ) );
  low_swing_tx_54 \ys[3].xs[3].msg_txrx[10].south_tx  ( .i(\s[3][3][10] ), .c(
        \s_tx[3][3][10] ) );
  low_swing_tx_53 \ys[3].xs[3].msg_txrx[10].east_tx  ( .i(\e[3][3][10] ), .c(
        \e_tx[3][3][10] ) );
  low_swing_rx_52 \ys[3].xs[3].msg_txrx[11].north_rx  ( .i(\s_tx[3][2][11] ), 
        .o(\n[3][3][11] ) );
  low_swing_rx_51 \ys[3].xs[3].msg_txrx[11].west_rx  ( .i(\e_tx[2][3][11] ), 
        .o(\w[3][3][11] ) );
  low_swing_tx_52 \ys[3].xs[3].msg_txrx[11].south_tx  ( .i(\s[3][3][11] ), .c(
        \s_tx[3][3][11] ) );
  low_swing_tx_51 \ys[3].xs[3].msg_txrx[11].east_tx  ( .i(\e[3][3][11] ), .c(
        \e_tx[3][3][11] ) );
  low_swing_rx_50 \ys[3].xs[3].msg_txrx[12].north_rx  ( .i(\s_tx[3][2][12] ), 
        .o(\n[3][3][12] ) );
  low_swing_rx_49 \ys[3].xs[3].msg_txrx[12].west_rx  ( .i(\e_tx[2][3][12] ), 
        .o(\w[3][3][12] ) );
  low_swing_tx_50 \ys[3].xs[3].msg_txrx[12].south_tx  ( .i(\s[3][3][12] ), .c(
        \s_tx[3][3][12] ) );
  low_swing_tx_49 \ys[3].xs[3].msg_txrx[12].east_tx  ( .i(\e[3][3][12] ), .c(
        \e_tx[3][3][12] ) );
  low_swing_rx_48 \ys[3].xs[3].msg_txrx[13].north_rx  ( .i(\s_tx[3][2][13] ), 
        .o(\n[3][3][13] ) );
  low_swing_rx_47 \ys[3].xs[3].msg_txrx[13].west_rx  ( .i(\e_tx[2][3][13] ), 
        .o(\w[3][3][13] ) );
  low_swing_tx_48 \ys[3].xs[3].msg_txrx[13].south_tx  ( .i(\s[3][3][13] ), .c(
        \s_tx[3][3][13] ) );
  low_swing_tx_47 \ys[3].xs[3].msg_txrx[13].east_tx  ( .i(\e[3][3][13] ), .c(
        \e_tx[3][3][13] ) );
  low_swing_rx_46 \ys[3].xs[3].msg_txrx[14].north_rx  ( .i(\s_tx[3][2][14] ), 
        .o(\n[3][3][14] ) );
  low_swing_rx_45 \ys[3].xs[3].msg_txrx[14].west_rx  ( .i(\e_tx[2][3][14] ), 
        .o(\w[3][3][14] ) );
  low_swing_tx_46 \ys[3].xs[3].msg_txrx[14].south_tx  ( .i(\s[3][3][14] ), .c(
        \s_tx[3][3][14] ) );
  low_swing_tx_45 \ys[3].xs[3].msg_txrx[14].east_tx  ( .i(\e[3][3][14] ), .c(
        \e_tx[3][3][14] ) );
  low_swing_rx_44 \ys[3].xs[3].msg_txrx[15].north_rx  ( .i(\s_tx[3][2][15] ), 
        .o(\n[3][3][15] ) );
  low_swing_rx_43 \ys[3].xs[3].msg_txrx[15].west_rx  ( .i(\e_tx[2][3][15] ), 
        .o(\w[3][3][15] ) );
  low_swing_tx_44 \ys[3].xs[3].msg_txrx[15].south_tx  ( .i(\s[3][3][15] ), .c(
        \s_tx[3][3][15] ) );
  low_swing_tx_43 \ys[3].xs[3].msg_txrx[15].east_tx  ( .i(\e[3][3][15] ), .c(
        \e_tx[3][3][15] ) );
  low_swing_rx_42 \ys[3].xs[3].msg_txrx[16].north_rx  ( .i(\s_tx[3][2][16] ), 
        .o(\n[3][3][16] ) );
  low_swing_rx_41 \ys[3].xs[3].msg_txrx[16].west_rx  ( .i(\e_tx[2][3][16] ), 
        .o(\w[3][3][16] ) );
  low_swing_tx_42 \ys[3].xs[3].msg_txrx[16].south_tx  ( .i(\s[3][3][16] ), .c(
        \s_tx[3][3][16] ) );
  low_swing_tx_41 \ys[3].xs[3].msg_txrx[16].east_tx  ( .i(\e[3][3][16] ), .c(
        \e_tx[3][3][16] ) );
  low_swing_rx_40 \ys[3].xs[3].msg_txrx[17].north_rx  ( .i(\s_tx[3][2][17] ), 
        .o(\n[3][3][17] ) );
  low_swing_rx_39 \ys[3].xs[3].msg_txrx[17].west_rx  ( .i(\e_tx[2][3][17] ), 
        .o(\w[3][3][17] ) );
  low_swing_tx_40 \ys[3].xs[3].msg_txrx[17].south_tx  ( .i(\s[3][3][17] ), .c(
        \s_tx[3][3][17] ) );
  low_swing_tx_39 \ys[3].xs[3].msg_txrx[17].east_tx  ( .i(\e[3][3][17] ), .c(
        \e_tx[3][3][17] ) );
  low_swing_rx_38 \ys[3].xs[3].msg_txrx[18].north_rx  ( .i(\s_tx[3][2][18] ), 
        .o(\n[3][3][18] ) );
  low_swing_rx_37 \ys[3].xs[3].msg_txrx[18].west_rx  ( .i(\e_tx[2][3][18] ), 
        .o(\w[3][3][18] ) );
  low_swing_tx_38 \ys[3].xs[3].msg_txrx[18].south_tx  ( .i(\s[3][3][18] ), .c(
        \s_tx[3][3][18] ) );
  low_swing_tx_37 \ys[3].xs[3].msg_txrx[18].east_tx  ( .i(\e[3][3][18] ), .c(
        \e_tx[3][3][18] ) );
  low_swing_rx_36 \ys[3].xs[3].msg_txrx[19].north_rx  ( .i(\s_tx[3][2][19] ), 
        .o(\n[3][3][19] ) );
  low_swing_rx_35 \ys[3].xs[3].msg_txrx[19].west_rx  ( .i(\e_tx[2][3][19] ), 
        .o(\w[3][3][19] ) );
  low_swing_tx_36 \ys[3].xs[3].msg_txrx[19].south_tx  ( .i(\s[3][3][19] ), .c(
        \s_tx[3][3][19] ) );
  low_swing_tx_35 \ys[3].xs[3].msg_txrx[19].east_tx  ( .i(\e[3][3][19] ), .c(
        \e_tx[3][3][19] ) );
  low_swing_rx_34 \ys[3].xs[3].msg_txrx[20].north_rx  ( .i(\s_tx[3][2][20] ), 
        .o(\n[3][3][20] ) );
  low_swing_rx_33 \ys[3].xs[3].msg_txrx[20].west_rx  ( .i(\e_tx[2][3][20] ), 
        .o(\w[3][3][20] ) );
  low_swing_tx_34 \ys[3].xs[3].msg_txrx[20].south_tx  ( .i(\s[3][3][20] ), .c(
        \s_tx[3][3][20] ) );
  low_swing_tx_33 \ys[3].xs[3].msg_txrx[20].east_tx  ( .i(\e[3][3][20] ), .c(
        \e_tx[3][3][20] ) );
  low_swing_rx_32 \ys[3].xs[3].msg_txrx[21].north_rx  ( .i(\s_tx[3][2][21] ), 
        .o(\n[3][3][21] ) );
  low_swing_rx_31 \ys[3].xs[3].msg_txrx[21].west_rx  ( .i(\e_tx[2][3][21] ), 
        .o(\w[3][3][21] ) );
  low_swing_tx_32 \ys[3].xs[3].msg_txrx[21].south_tx  ( .i(\s[3][3][21] ), .c(
        \s_tx[3][3][21] ) );
  low_swing_tx_31 \ys[3].xs[3].msg_txrx[21].east_tx  ( .i(\e[3][3][21] ), .c(
        \e_tx[3][3][21] ) );
  low_swing_rx_30 \ys[3].xs[3].msg_txrx[22].north_rx  ( .i(\s_tx[3][2][22] ), 
        .o(\n[3][3][22] ) );
  low_swing_rx_29 \ys[3].xs[3].msg_txrx[22].west_rx  ( .i(\e_tx[2][3][22] ), 
        .o(\w[3][3][22] ) );
  low_swing_tx_30 \ys[3].xs[3].msg_txrx[22].south_tx  ( .i(\s[3][3][22] ), .c(
        \s_tx[3][3][22] ) );
  low_swing_tx_29 \ys[3].xs[3].msg_txrx[22].east_tx  ( .i(\e[3][3][22] ), .c(
        \e_tx[3][3][22] ) );
  low_swing_rx_28 \ys[3].xs[3].msg_txrx[23].north_rx  ( .i(\s_tx[3][2][23] ), 
        .o(\n[3][3][23] ) );
  low_swing_rx_27 \ys[3].xs[3].msg_txrx[23].west_rx  ( .i(\e_tx[2][3][23] ), 
        .o(\w[3][3][23] ) );
  low_swing_tx_28 \ys[3].xs[3].msg_txrx[23].south_tx  ( .i(\s[3][3][23] ), .c(
        \s_tx[3][3][23] ) );
  low_swing_tx_27 \ys[3].xs[3].msg_txrx[23].east_tx  ( .i(\e[3][3][23] ), .c(
        \e_tx[3][3][23] ) );
  low_swing_rx_26 \ys[3].xs[3].msg_txrx[24].north_rx  ( .i(\s_tx[3][2][24] ), 
        .o(\n[3][3][24] ) );
  low_swing_rx_25 \ys[3].xs[3].msg_txrx[24].west_rx  ( .i(\e_tx[2][3][24] ), 
        .o(\w[3][3][24] ) );
  low_swing_tx_26 \ys[3].xs[3].msg_txrx[24].south_tx  ( .i(\s[3][3][24] ), .c(
        \s_tx[3][3][24] ) );
  low_swing_tx_25 \ys[3].xs[3].msg_txrx[24].east_tx  ( .i(\e[3][3][24] ), .c(
        \e_tx[3][3][24] ) );
  low_swing_rx_24 \ys[3].xs[3].msg_txrx[25].north_rx  ( .i(\s_tx[3][2][25] ), 
        .o(\n[3][3][25] ) );
  low_swing_rx_23 \ys[3].xs[3].msg_txrx[25].west_rx  ( .i(\e_tx[2][3][25] ), 
        .o(\w[3][3][25] ) );
  low_swing_tx_24 \ys[3].xs[3].msg_txrx[25].south_tx  ( .i(\s[3][3][25] ), .c(
        \s_tx[3][3][25] ) );
  low_swing_tx_23 \ys[3].xs[3].msg_txrx[25].east_tx  ( .i(\e[3][3][25] ), .c(
        \e_tx[3][3][25] ) );
  low_swing_rx_22 \ys[3].xs[3].msg_txrx[26].north_rx  ( .i(\s_tx[3][2][26] ), 
        .o(\n[3][3][26] ) );
  low_swing_rx_21 \ys[3].xs[3].msg_txrx[26].west_rx  ( .i(\e_tx[2][3][26] ), 
        .o(\w[3][3][26] ) );
  low_swing_tx_22 \ys[3].xs[3].msg_txrx[26].south_tx  ( .i(\s[3][3][26] ), .c(
        \s_tx[3][3][26] ) );
  low_swing_tx_21 \ys[3].xs[3].msg_txrx[26].east_tx  ( .i(\e[3][3][26] ), .c(
        \e_tx[3][3][26] ) );
  low_swing_rx_20 \ys[3].xs[3].msg_txrx[27].north_rx  ( .i(\s_tx[3][2][27] ), 
        .o(\n[3][3][27] ) );
  low_swing_rx_19 \ys[3].xs[3].msg_txrx[27].west_rx  ( .i(\e_tx[2][3][27] ), 
        .o(\w[3][3][27] ) );
  low_swing_tx_20 \ys[3].xs[3].msg_txrx[27].south_tx  ( .i(\s[3][3][27] ), .c(
        \s_tx[3][3][27] ) );
  low_swing_tx_19 \ys[3].xs[3].msg_txrx[27].east_tx  ( .i(\e[3][3][27] ), .c(
        \e_tx[3][3][27] ) );
  low_swing_rx_18 \ys[3].xs[3].msg_txrx[28].north_rx  ( .i(\s_tx[3][2][28] ), 
        .o(\n[3][3][28] ) );
  low_swing_rx_17 \ys[3].xs[3].msg_txrx[28].west_rx  ( .i(\e_tx[2][3][28] ), 
        .o(\w[3][3][28] ) );
  low_swing_tx_18 \ys[3].xs[3].msg_txrx[28].south_tx  ( .i(\s[3][3][28] ), .c(
        \s_tx[3][3][28] ) );
  low_swing_tx_17 \ys[3].xs[3].msg_txrx[28].east_tx  ( .i(\e[3][3][28] ), .c(
        \e_tx[3][3][28] ) );
  low_swing_rx_16 \ys[3].xs[3].msg_txrx[29].north_rx  ( .i(\s_tx[3][2][29] ), 
        .o(\n[3][3][29] ) );
  low_swing_rx_15 \ys[3].xs[3].msg_txrx[29].west_rx  ( .i(\e_tx[2][3][29] ), 
        .o(\w[3][3][29] ) );
  low_swing_tx_16 \ys[3].xs[3].msg_txrx[29].south_tx  ( .i(\s[3][3][29] ), .c(
        \s_tx[3][3][29] ) );
  low_swing_tx_15 \ys[3].xs[3].msg_txrx[29].east_tx  ( .i(\e[3][3][29] ), .c(
        \e_tx[3][3][29] ) );
  low_swing_rx_14 \ys[3].xs[3].msg_txrx[30].north_rx  ( .i(\s_tx[3][2][30] ), 
        .o(\n[3][3][30] ) );
  low_swing_rx_13 \ys[3].xs[3].msg_txrx[30].west_rx  ( .i(\e_tx[2][3][30] ), 
        .o(\w[3][3][30] ) );
  low_swing_tx_14 \ys[3].xs[3].msg_txrx[30].south_tx  ( .i(\s[3][3][30] ), .c(
        \s_tx[3][3][30] ) );
  low_swing_tx_13 \ys[3].xs[3].msg_txrx[30].east_tx  ( .i(\e[3][3][30] ), .c(
        \e_tx[3][3][30] ) );
  low_swing_rx_12 \ys[3].xs[3].msg_txrx[31].north_rx  ( .i(\s_tx[3][2][31] ), 
        .o(\n[3][3][31] ) );
  low_swing_rx_11 \ys[3].xs[3].msg_txrx[31].west_rx  ( .i(\e_tx[2][3][31] ), 
        .o(\w[3][3][31] ) );
  low_swing_tx_12 \ys[3].xs[3].msg_txrx[31].south_tx  ( .i(\s[3][3][31] ), .c(
        \s_tx[3][3][31] ) );
  low_swing_tx_11 \ys[3].xs[3].msg_txrx[31].east_tx  ( .i(\e[3][3][31] ), .c(
        \e_tx[3][3][31] ) );
  low_swing_rx_10 \ys[3].xs[3].msg_txrx[32].north_rx  ( .i(\s_tx[3][2][32] ), 
        .o(\n[3][3][32] ) );
  low_swing_rx_9 \ys[3].xs[3].msg_txrx[32].west_rx  ( .i(\e_tx[2][3][32] ), 
        .o(\w[3][3][32] ) );
  low_swing_tx_10 \ys[3].xs[3].msg_txrx[32].south_tx  ( .i(\s[3][3][32] ), .c(
        \s_tx[3][3][32] ) );
  low_swing_tx_9 \ys[3].xs[3].msg_txrx[32].east_tx  ( .i(\e[3][3][32] ), .c(
        \e_tx[3][3][32] ) );
  low_swing_rx_8 \ys[3].xs[3].msg_txrx[33].north_rx  ( .i(\s_tx[3][2][33] ), 
        .o(\n[3][3][33] ) );
  low_swing_rx_7 \ys[3].xs[3].msg_txrx[33].west_rx  ( .i(\e_tx[2][3][33] ), 
        .o(\w[3][3][33] ) );
  low_swing_tx_8 \ys[3].xs[3].msg_txrx[33].south_tx  ( .i(\s[3][3][33] ), .c(
        \s_tx[3][3][33] ) );
  low_swing_tx_7 \ys[3].xs[3].msg_txrx[33].east_tx  ( .i(\e[3][3][33] ), .c(
        \e_tx[3][3][33] ) );
  low_swing_rx_6 \ys[3].xs[3].msg_txrx[34].north_rx  ( .i(\s_tx[3][2][34] ), 
        .o(\n[3][3][34] ) );
  low_swing_rx_5 \ys[3].xs[3].msg_txrx[34].west_rx  ( .i(\e_tx[2][3][34] ), 
        .o(\w[3][3][34] ) );
  low_swing_tx_6 \ys[3].xs[3].msg_txrx[34].south_tx  ( .i(\s[3][3][34] ), .c(
        \s_tx[3][3][34] ) );
  low_swing_tx_5 \ys[3].xs[3].msg_txrx[34].east_tx  ( .i(\e[3][3][34] ), .c(
        \e_tx[3][3][34] ) );
  low_swing_rx_4 \ys[3].xs[3].msg_txrx[35].north_rx  ( .i(\s_tx[3][2][35] ), 
        .o(\n[3][3][35] ) );
  low_swing_rx_3 \ys[3].xs[3].msg_txrx[35].west_rx  ( .i(\e_tx[2][3][35] ), 
        .o(\w[3][3][35] ) );
  low_swing_tx_4 \ys[3].xs[3].msg_txrx[35].south_tx  ( .i(\s[3][3][35] ), .c(
        \s_tx[3][3][35] ) );
  low_swing_tx_3 \ys[3].xs[3].msg_txrx[35].east_tx  ( .i(\e[3][3][35] ), .c(
        \e_tx[3][3][35] ) );
  low_swing_rx_2 \ys[3].xs[3].msg_txrx[36].north_rx  ( .i(\s_tx[3][2][36] ), 
        .o(\n[3][3][36] ) );
  low_swing_rx_1 \ys[3].xs[3].msg_txrx[36].west_rx  ( .i(\e_tx[2][3][36] ), 
        .o(\w[3][3][36] ) );
  low_swing_tx_2 \ys[3].xs[3].msg_txrx[36].south_tx  ( .i(\s[3][3][36] ), .c(
        \s_tx[3][3][36] ) );
  low_swing_tx_1 \ys[3].xs[3].msg_txrx[36].east_tx  ( .i(\e[3][3][36] ), .c(
        \e_tx[3][3][36] ) );
  TIEL U12 ( .ZN(done) );
endmodule

