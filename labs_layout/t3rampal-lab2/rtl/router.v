/*verilator lint_off WIDTHEXPAND*/
/*verilator lint_off WIDTHTRUNC*/
/*verilator lint_off UNUSEDSIGNAL*/
/*verilator lint_off DECLFILENAME*/
/* Generated by Yosys 0.42+2 (git sha1 cf26fd62d, g++ 8.4.0-1ubuntu1~18.04 -fPIC -Os) */

module \$paramod$14a6fdf158e85745a47bcd0cf54eec730cdb9d95\DOR (n, w, i, X, Y, r);
  wire [4:0] _00_;
  wire _01_;
  wire _02_;
  wire [1:0] _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire [1:0] _09_;
  wire _10_;
  wire [6:0] _11_;
  wire [6:0] _12_;
  wire [7:0] _13_;
  wire [1:0] _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire [516:0] \SvOv$func$dor.v:65$4.m ;
  wire [516:0] \SvOv$func$dor.v:73$6.m ;
  wire [516:0] \SvOv$func$dor.v:86$9.m ;
  input [1:0] X;
  wire [1:0] X;
  input [1:0] Y;
  wire [1:0] Y;
  input [516:0] i;
  wire [516:0] i;
  input [516:0] n;
  wire [516:0] n;
  output [15:0] r;
  wire [15:0] r;
  input [516:0] w;
  wire [516:0] w;
  wire xEq;
  assign _15_ = n[513:512] == Y;
  assign _16_ = w[513:512] == Y;
  assign _17_ = i[513:512] == Y;
  assign xEq = w[515:514] == X;
  assign _18_ = i[515:514] == X;
  assign _19_ = xEq && _21_;
  assign _20_ = _22_ && _24_;
  assign _21_ = ! _06_;
  assign _22_ = ! _08_;
  assign _23_ = ! _04_;
  assign _24_ = $signed(32'd0) || _23_;
  assign _25_ = n[513:512] != Y;
  assign _26_ = w[513:512] != Y;
  assign _27_ = i[513:512] != Y;
  assign _14_[0] = _20_ ? 1'h1 : 1'h0;
  assign _14_[1] = _20_ ? _17_ : _11_[0];
  assign _00_[0] = _20_ ? _27_ : _11_[2];
  assign _00_[2:1] = _20_ ? 2'h0 : _11_[4:3];
  assign _13_[1] = _18_ ? _14_[1] : _11_[0];
  assign _00_[4:3] = _20_ ? 2'h0 : _11_[6:5];
  assign _13_[2] = _18_ ? _11_[1] : _02_;
  assign r[7:0] = i[516] ? _13_ : { _11_, 1'h0 };
  assign _12_[6:5] = _19_ ? 2'h1 : _09_;
  assign _12_[0] = _19_ ? _16_ : _05_;
  assign _12_[2] = _19_ ? _26_ : _07_;
  assign _10_ = _19_ ? 1'h1 : _06_;
  assign _12_[1] = _19_ ? 1'h0 : 1'h1;
  assign _04_ = w[516] ? 1'h1 : 1'h0;
  assign _08_ = w[516] ? _10_ : _06_;
  assign _11_ = w[516] ? { _12_[6:5], 2'h1, _12_[2:0] } : { _09_, 2'h0, _07_, 1'h0, _05_ };
  assign _05_ = n[516] ? _15_ : 1'h0;
  assign _07_ = n[516] ? _25_ : 1'h0;
  assign _09_ = n[516] ? 2'h2 : 2'h0;
  assign _06_ = n[516] ? 1'h1 : 1'h0;
  assign _01_ = _04_ ? 1'h0 : 1'h1;
  assign _02_ = _04_ ? _11_[1] : 1'h1;
  assign _03_ = _04_ ? _11_[4:3] : 2'h0;
  assign _13_[7:6] = _18_ ? _00_[4:3] : _11_[6:5];
  assign _13_[5:4] = _18_ ? _00_[2:1] : _03_;
  assign _13_[3] = _18_ ? _00_[0] : _11_[2];
  assign _13_[0] = _18_ ? _14_[0] : _01_;
  assign _12_[4:3] = 2'h1;
  assign \SvOv$func$dor.v:65$4.m  = 517'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign \SvOv$func$dor.v:73$6.m  = 517'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign \SvOv$func$dor.v:86$9.m  = 517'hxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx;
  assign r[15:8] = 8'h00;
endmodule

module \$paramod\Mux2\W=s32'00000000000000000000001000000100 (s, i0, i1, o);
  input [515:0] i0;
  wire [515:0] i0;
  input [515:0] i1;
  wire [515:0] i1;
  output [515:0] o;
  wire [515:0] o;
  input s;
  wire s;
  assign o = s ? i1 : i0;
endmodule

module Router(clk, rst, n_in, w_in, i, X, Y, i_ack, o_v, s_out, e_out);
  input [1:0] X;
  wire [1:0] X;
  input [1:0] Y;
  wire [1:0] Y;
  input clk;
  wire clk;
  output [516:0] e_out;
  wire [516:0] e_out;
  wire [516:0] e_out_c;
  input [516:0] i;
  wire [516:0] i;
  output i_ack;
  wire i_ack;
  reg [516:0] n;
  input [516:0] n_in;
  wire [516:0] n_in;
  output o_v;
  wire o_v;
  wire o_v_c;
  wire [15:0] r;
  input rst;
  wire rst;
  output [516:0] s_out;
  wire [516:0] s_out;
  wire [516:0] s_out_c;
  reg [516:0] w;
  input [516:0] w_in;
  wire [516:0] w_in;
  always @(posedge clk)
    if (rst) n[516] <= 1'h0;
    else n[516] <= n_in[516];
  always @(posedge clk)
    n[515:0] <= n_in[515:0];
  always @(posedge clk)
    if (rst) w[516] <= 1'h0;
    else w[516] <= w_in[516];
  always @(posedge clk)
    w[515:0] <= w_in[515:0];
  \$paramod$14a6fdf158e85745a47bcd0cf54eec730cdb9d95\DOR  dor (
    .X(X),
    .Y(Y),
    .i(i),
    .n(n),
    .r(r),
    .w(w)
  );
  \$paramod\Mux2\W=s32'00000000000000000000001000000100  e_mux (
    .i0(i[515:0]),
    .i1(w[515:0]),
    .o(e_out[515:0]),
    .s(r[4])
  );
  \$paramod\Mux2\W=s32'00000000000000000000001000000100  s_mux (
    .i0(e_out[515:0]),
    .i1(n[515:0]),
    .o(s_out_c[515:0]),
    .s(r[7])
  );
  assign e_out[516] = r[2];
  assign e_out_c = { r[2], e_out[515:0] };
  assign i_ack = r[0];
  assign o_v = r[1];
  assign o_v_c = r[1];
  assign s_out = { r[3], s_out_c[515:0] };
  assign s_out_c[516] = r[3];
endmodule
/*verilator lint_on WIDTHEXPAND*/
/*verilator lint_on WIDTHTRUNC*/
/*verilator lint_on UNUSEDSIGNAL*/
/*verilator lint_on DECLFILENAME*/
